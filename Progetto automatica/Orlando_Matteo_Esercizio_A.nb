(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1385987,      28190]
NotebookOptionsPosition[   1336795,      27396]
NotebookOutlinePosition[   1337291,      27414]
CellTagsIndexPosition[   1337248,      27411]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Esercizio A", "Title",
 CellChangeTimes->{{3.931842680122946*^9, 
  3.931842682382541*^9}},ExpressionUUID->"5ce9fb83-77c7-5942-a9b1-\
36df5a575364"],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.931842701564079*^9, 3.931842763006557*^9}, {
   3.9318430567403717`*^9, 3.931843085407482*^9}, 3.932810059808323*^9, {
   3.9332238590115795`*^9, 3.933223859927557*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ae4131a3-9220-1048-b597-0d08cd57b530"],

Cell[TextData[{
 "Si vuole studiare il comportamento del sistema proprio LTI-TC ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", GridBox[{
      {
       TemplateBox[<|"boxes" -> FormBox[
           RowBox[{
             SuperscriptBox[
              StyleBox["x", "TI"], "\[Prime]"], 
             RowBox[{"(", 
               StyleBox["t", "TI"], ")"}], "\[LongEqual]", 
             StyleBox["A", "TI"], 
             StyleBox["x", "TI"], 
             RowBox[{"(", 
               StyleBox["t", "TI"], ")"}], "+", 
             StyleBox["B", "TI"], 
             StyleBox["u", "TI"], 
             RowBox[{"(", 
               StyleBox["t", "TI"], ")"}]}], TraditionalForm], "errors" -> {},
          "input" -> "x'(t)=Ax(t)+Bu(t)", "state" -> "Boxes"|>,
        "TeXAssistantTemplate"]},
      {
       TemplateBox[<|"boxes" -> FormBox[
           RowBox[{
             StyleBox["y", "TI"], 
             RowBox[{"(", 
               StyleBox["t", "TI"], ")"}], "\[LongEqual]", 
             StyleBox["C", "TI"], 
             StyleBox["x", "TI"], 
             RowBox[{"(", 
               StyleBox["t", "TI"], ")"}]}], TraditionalForm], "errors" -> {},
          "input" -> "y(t)=Cx(t)", "state" -> "Boxes"|>,
        "TeXAssistantTemplate"]}
     }]}], TraditionalForm]],ExpressionUUID->
  "5ba3305f-3211-3440-b481-ddac37fa7f7f"],
 " dove"
}], "Text",
 CellChangeTimes->{{3.933223983705246*^9, 3.933224039671816*^9}, {
  3.93322408235296*^9, 3.933224163438484*^9}, {3.933390545222896*^9, 
  3.933390545973576*^9}},ExpressionUUID->"7e122f62-ffa5-5449-b5b4-\
d98f427e8c52"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"A", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"9403", "/", "288"}], ",", 
      RowBox[{"3847", "/", "144"}], ",", 
      RowBox[{
       RowBox[{"-", "2933"}], "/", "72"}], ",", 
      RowBox[{
       RowBox[{"-", "10747"}], "/", "288"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}], ",", "0", ",", 
      RowBox[{"-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"8827", "/", "288"}], ",", 
      RowBox[{"3847", "/", "144"}], ",", 
      RowBox[{
       RowBox[{"-", "2789"}], "/", "72"}], ",", 
      RowBox[{
       RowBox[{"-", "10747"}], "/", "288"}]}], "}"}]}], "}"}]}], "\n", 
 RowBox[{"B", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", "/", "2"}], "}"}], ",", 
    RowBox[{"{", "0", "}"}], ",", 
    RowBox[{"{", "0", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", "/", "2"}], "}"}]}], "}"}]}], "\n", 
 RowBox[{"C1", "=", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "3"}], ",", "3", ",", "3"}], "}"}], "}"}]}]}], "Input",
 CellChangeTimes->{3.933223880086361*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"03ed55ed-5a8b-9842-b9d1-82f8a823555a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["9403", "288"], ",", 
     FractionBox["3847", "144"], ",", 
     RowBox[{"-", 
      FractionBox["2933", "72"]}], ",", 
     RowBox[{"-", 
      FractionBox["10747", "288"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["8827", "288"], ",", 
     FractionBox["3847", "144"], ",", 
     RowBox[{"-", 
      FractionBox["2789", "72"]}], ",", 
     RowBox[{"-", 
      FractionBox["10747", "288"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.931842722288746*^9, {3.93184307834807*^9, 3.9318430869823265`*^9}, 
   3.932181759020003*^9, {3.932789348177626*^9, 3.93278934858162*^9}, 
   3.932810061645143*^9, 3.932873549061348*^9, {3.932878302050987*^9, 
   3.932878302443989*^9}, 3.932957547822684*^9, 3.932986185266025*^9, 
   3.933046570490949*^9, 3.933075444928385*^9, 3.9331344920048313`*^9, 
   3.933161993827507*^9, 3.9332194883244457`*^9, 3.933223727744931*^9, 
   3.9332238452044086`*^9, 3.9332238814844055`*^9, 3.933224289098884*^9, 
   3.9332246289523153`*^9, 3.933398751495291*^9, 3.933486716623535*^9, 
   3.933831874643141*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"2348ba9d-a7fb-a742-a64b-8cb4db780b2b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox["1", "2"], "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    FractionBox["1", "2"], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.931842722288746*^9, {3.93184307834807*^9, 3.9318430869823265`*^9}, 
   3.932181759020003*^9, {3.932789348177626*^9, 3.93278934858162*^9}, 
   3.932810061645143*^9, 3.932873549061348*^9, {3.932878302050987*^9, 
   3.932878302443989*^9}, 3.932957547822684*^9, 3.932986185266025*^9, 
   3.933046570490949*^9, 3.933075444928385*^9, 3.9331344920048313`*^9, 
   3.933161993827507*^9, 3.9332194883244457`*^9, 3.933223727744931*^9, 
   3.9332238452044086`*^9, 3.9332238814844055`*^9, 3.933224289098884*^9, 
   3.9332246289523153`*^9, 3.933398751495291*^9, 3.933486716623535*^9, 
   3.93383187465114*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"3723f541-1e6e-3246-9585-4069f0090a46"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "3"}], ",", 
    RowBox[{"-", "3"}], ",", "3", ",", "3"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.931842722288746*^9, {3.93184307834807*^9, 3.9318430869823265`*^9}, 
   3.932181759020003*^9, {3.932789348177626*^9, 3.93278934858162*^9}, 
   3.932810061645143*^9, 3.932873549061348*^9, {3.932878302050987*^9, 
   3.932878302443989*^9}, 3.932957547822684*^9, 3.932986185266025*^9, 
   3.933046570490949*^9, 3.933075444928385*^9, 3.9331344920048313`*^9, 
   3.933161993827507*^9, 3.9332194883244457`*^9, 3.933223727744931*^9, 
   3.9332238452044086`*^9, 3.9332238814844055`*^9, 3.933224289098884*^9, 
   3.9332246289523153`*^9, 3.933398751495291*^9, 3.933486716623535*^9, 
   3.9338318746561413`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"2f00c8a2-cfd3-2c49-aa22-33264a866e39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"A", " ", "//", " ", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"B", " ", "//", " ", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"C1", " ", "//", " ", "MatrixForm"}]}], "Input",
 CellChangeTimes->{3.933223896386755*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"c6de9b83-6ae3-9642-aa73-bf606e17e796"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["9403", "288"], 
      FractionBox["3847", "144"], 
      RowBox[{"-", 
       FractionBox["2933", "72"]}], 
      RowBox[{"-", 
       FractionBox["10747", "288"]}]},
     {"1", 
      RowBox[{"-", "1"}], "0", 
      RowBox[{"-", "1"}]},
     {"2", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "0"},
     {
      FractionBox["8827", "288"], 
      FractionBox["3847", "144"], 
      RowBox[{"-", 
       FractionBox["2789", "72"]}], 
      RowBox[{"-", 
       FractionBox["10747", "288"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9332238976361866`*^9, 3.933224631507992*^9, 
  3.933831883043873*^9},
 CellLabel->
  "Out[5]//MatrixForm=",ExpressionUUID->"b1c031f3-d90d-4c4b-8930-\
7d842e897ffd"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"]},
     {"0"},
     {"0"},
     {
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9332238976361866`*^9, 3.933224631507992*^9, 
  3.93383188305287*^9},
 CellLabel->
  "Out[6]//MatrixForm=",ExpressionUUID->"0cb5f8c4-ec0c-c442-8d21-\
49620114bbc2"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "3"}], 
      RowBox[{"-", "3"}], "3", "3"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9332238976361866`*^9, 3.933224631507992*^9, 
  3.933831883057873*^9},
 CellLabel->
  "Out[7]//MatrixForm=",ExpressionUUID->"4a362c0d-cf19-0649-a622-\
3ac5208464c0"]
}, Open  ]],

Cell[TextData[{
 "Il sistema assegnato \[EGrave] proprio in quanto la matrice ingresso-uscita \
",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["D", "TI"], TraditionalForm], "errors" -> {}, "input" -> "D", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "b2aae497-ff8c-a24e-b2a7-fbb20ab8739c"],
 ", \[EGrave] pari a ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["D", "TI"], "\[LongEqual]", 
         SubscriptBox["0", 
          RowBox[{
            StyleBox["m", "TI"], "\[Cross]", 
            StyleBox["n", "TI"]}]]}], TraditionalForm], "errors" -> {}, 
     "input" -> "D=0_{m\\times n}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "9158fe9d-e74f-c342-b2a2-4c9fe35b969d"],
 "."
}], "Text",
 CellChangeTimes->{
  3.9332239065292664`*^9, {3.933224221784987*^9, 3.933224224050207*^9}, {
   3.933390708889214*^9, 
   3.933390709248593*^9}},ExpressionUUID->"d18423eb-373d-fa4e-8982-\
17613c7e7e1a"],

Cell[CellGroupData[{

Cell["1. Modi naturali del sistema", "Section",
 CellChangeTimes->{{3.9331435728088684`*^9, 
  3.9331435828274193`*^9}},ExpressionUUID->"03589a0e-456b-8f44-8fec-\
ebe6c3f1e9e1"],

Cell[TextData[{
 "I modi naturali caratterizzano qualitativamente il comportamento di un \
sistema dinamico in evoluzione libera. Essi sono legati agli autovalori della \
matrice ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["A", "TI"], TraditionalForm], "errors" -> {}, "input" -> "A", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "7a624556-9faf-fd4e-af85-d8f0e9966878"],
 " e sono essenziali per studiare il comportamento della risposta forzata. "
}], "Text",
 CellChangeTimes->{
  3.933223917862955*^9},ExpressionUUID->"a4e49a75-afe3-594d-8106-\
27844cb31aa5"],

Cell["\<\
Si prosegue con il calcolo degli autovalori che coincidono con le soluzioni \
del polinomio caratteristico\
\>", "Text",
 CellChangeTimes->{{3.931924598665015*^9, 3.9319246051750393`*^9}, {
  3.931924635457197*^9, 3.931924652531637*^9}, {3.933143531465521*^9, 
  3.93314353179595*^9}, {3.9332242593346443`*^9, 3.933224267245718*^9}, {
  3.933224442728327*^9, 
  3.933224468279555*^9}},ExpressionUUID->"2fce6806-df1f-7140-b5be-\
5c21d2f56605"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Lambda]", "=", 
  RowBox[{"Eigenvalues", "[", "A", "]"}]}]], "Input",
 CellChangeTimes->{{3.931924620668585*^9, 3.931924631382725*^9}, {
  3.9321817152470016`*^9, 3.932181720184376*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"da8dc314-3e76-4147-a344-10f8da725c74"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "3"}], "+", 
    FractionBox["\[ImaginaryI]", "4"]}], ",", 
   RowBox[{
    RowBox[{"-", "3"}], "-", 
    FractionBox["\[ImaginaryI]", "4"]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "3"]}], "+", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "3"]}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.93218174739272*^9, 3.932181763317114*^9}, 
   3.93278935035861*^9, 3.932810065074888*^9, 3.9328735530775948`*^9, 
   3.932878304003262*^9, 3.933161997122032*^9, {3.933224286061821*^9, 
   3.93322429273252*^9}, 3.933224635335043*^9, 3.933398755028305*^9, 
   3.933486719131077*^9, 3.9338318883608456`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"e62b490f-05a5-0747-905e-b22fc8d37754"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CP", "=", 
  RowBox[{"CharacteristicPolynomial", "[", 
   RowBox[{"A", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9332243991370945`*^9, 3.9332243995647087`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"664ffdc8-04be-bf4a-a5ca-48e56f453a0c"],

Cell[BoxData[
 RowBox[{
  FractionBox["5365", "144"], "+", 
  FractionBox[
   RowBox[{"737", " ", "x"}], "24"], "+", 
  FractionBox[
   RowBox[{"2473", " ", 
    SuperscriptBox["x", "2"]}], "144"], "+", 
  FractionBox[
   RowBox[{"20", " ", 
    SuperscriptBox["x", "3"]}], "3"], "+", 
  SuperscriptBox["x", "4"]}]], "Output",
 CellChangeTimes->{3.9332244009836407`*^9, 3.9332246370909867`*^9, 
  3.9338318900761986`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"df9158e6-d469-3e46-b503-e922e06e81d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"CP", "==", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.933224405749689*^9, 3.933224417719733*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"4ab878ef-c4f2-3442-be66-c031ffc1b213"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "3"}], "-", 
      FractionBox["\[ImaginaryI]", "4"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "3"}], "+", 
      FractionBox["\[ImaginaryI]", "4"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "3"]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "3"]}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.933224406636414*^9, 3.9332244245900326`*^9}, 
   3.933224639157289*^9, 3.933831892986513*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"0924cea2-d38a-c249-bb1f-66c998037f76"]
}, Open  ]],

Cell["\<\
Si pu\[OGrave] notare la presenza di autovalori complessi e coniugati ed \
avendo tutti parte reale negativa, il sistema \[EGrave] asintoticamente \
stabile. Essendo autovalori distinti si pu\[OGrave] asserire che la matrice A \
sia diagonalizzabile. La condizione necessaria affinch\[EGrave] lo sia \
\[EGrave] che, per ogni autovalore di A, la molteplicit\[AGrave] algebrica \
degli autovalori sia pari alla sua molteplicit\[AGrave] geometrica, oppure \
che  il numero di modi naturali coincide esattamente con il grado del \
polinomio minimo.
Vado a calcolare la molteplicit\[AGrave] geometrica, ovvero la dimensione \
della base di Ker(A-\[Lambda]I)\
\>", "Text",
 CellChangeTimes->{{3.931925976172497*^9, 3.9319259911274433`*^9}, {
   3.93192610786137*^9, 3.931926126099756*^9}, {3.931926323254324*^9, 
   3.931926337368461*^9}, {3.932180625959463*^9, 3.9321806514152584`*^9}, {
   3.932180742805359*^9, 3.932180746145251*^9}, {3.932180950286545*^9, 
   3.9321810242875366`*^9}, {3.932181080918606*^9, 3.932181087519371*^9}, {
   3.9321816728944054`*^9, 3.932181691990288*^9}, {3.932181779991432*^9, 
   3.932181785131424*^9}, {3.932181868278938*^9, 3.9321819327105293`*^9}, 
   3.9332245291114445`*^9, {3.933224647246858*^9, 3.933224647712647*^9}, {
   3.933825802007223*^9, 3.933825804522838*^9}, {3.9343524357473164`*^9, 
   3.9343524390858364`*^9}},ExpressionUUID->"6c07f6ad-a257-a84e-a803-\
531b5d893650"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NullSpace", "[", 
  RowBox[{"A", "-", 
   RowBox[{
    RowBox[{"\[Lambda]", "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", 
    RowBox[{"IdentityMatrix", "[", "4", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9321819446177425`*^9, 3.932181980509094*^9}, {
  3.932182027860922*^9, 3.9321820281109257`*^9}, {3.932182115547804*^9, 
  3.932182126691251*^9}, {3.9321822143521576`*^9, 3.9321822447139263`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"27a73e67-5255-ed4e-87b8-95ec36dab413"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     FractionBox["583099", "1249755"], "-", 
     FractionBox[
      RowBox[{"30808", " ", "\[ImaginaryI]"}], "1249755"]}], ",", 
    RowBox[{
     FractionBox["108768", "416585"], "+", 
     FractionBox[
      RowBox[{"56192", " ", "\[ImaginaryI]"}], "1249755"]}], ",", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["420736", "1249755"]}], "+", 
     FractionBox[
      RowBox[{"2104", " ", "\[ImaginaryI]"}], "416585"]}], ",", "1"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.932182013295353*^9, 3.932182030000747*^9}, 
   3.9321821390840645`*^9, 3.932182247775574*^9, 3.933224657250551*^9, 
   3.9338318965636673`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"b87f8a0c-c896-8e44-8485-be53074197fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NullSpace", "[", 
  RowBox[{"A", "-", 
   RowBox[{
    RowBox[{"\[Lambda]", "[", 
     RowBox[{"[", "2", "]"}], "]"}], " ", 
    RowBox[{"IdentityMatrix", "[", "4", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.932182051569033*^9, 3.932182053655538*^9}, {
  3.932182130160036*^9, 3.932182135709759*^9}, {3.9321822632478333`*^9, 
  3.93218226594672*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"1758f0f1-01e3-bd49-babc-1865412efaab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     FractionBox["583099", "1249755"], "+", 
     FractionBox[
      RowBox[{"30808", " ", "\[ImaginaryI]"}], "1249755"]}], ",", 
    RowBox[{
     FractionBox["108768", "416585"], "-", 
     FractionBox[
      RowBox[{"56192", " ", "\[ImaginaryI]"}], "1249755"]}], ",", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["420736", "1249755"]}], "-", 
     FractionBox[
      RowBox[{"2104", " ", "\[ImaginaryI]"}], "416585"]}], ",", "1"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.932182058248951*^9, 3.93218213692782*^9, 
  3.932182268107847*^9, 3.93322465893762*^9, 3.9338318983975697`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"04e19913-c7dd-2244-af6d-9449d623d0ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NullSpace", "[", 
  RowBox[{"A", "-", 
   RowBox[{
    RowBox[{"\[Lambda]", "[", 
     RowBox[{"[", "3", "]"}], "]"}], " ", 
    RowBox[{"IdentityMatrix", "[", "4", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9321820657054596`*^9, 3.932182085838554*^9}, {
  3.9321821450692387`*^9, 3.932182158995001*^9}, {3.932182273813726*^9, 
  3.9321822831907578`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"dbe2fb81-fb44-be4e-b3b9-92356bd35168"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     FractionBox["3709", "7585"], "-", 
     FractionBox[
      RowBox[{"11268", " ", "\[ImaginaryI]"}], "7585"]}], ",", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["5652", "7585"]}], "+", 
     FractionBox[
      RowBox[{"54", " ", "\[ImaginaryI]"}], "7585"]}], ",", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1641", "1517"]}], "-", 
     FractionBox[
      RowBox[{"1854", " ", "\[ImaginaryI]"}], "1517"]}], ",", "1"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.932182089606741*^9, 3.932182160197405*^9, 
  3.9321822923962326`*^9, 3.933224660545759*^9, 3.933831900268778*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"884042a0-93d2-c144-a176-e6bf2d8b7064"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NullSpace", "[", 
  RowBox[{"A", "-", 
   RowBox[{
    RowBox[{"\[Lambda]", "[", 
     RowBox[{"[", "4", "]"}], "]"}], " ", 
    RowBox[{"IdentityMatrix", "[", "4", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.932182099782307*^9, 3.932182102734564*^9}, {
  3.932182163166824*^9, 3.932182167888153*^9}, {3.9321822857063274`*^9, 
  3.932182290865818*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"9328193b-e594-ac45-a942-508f0fd17532"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     FractionBox["3709", "7585"], "+", 
     FractionBox[
      RowBox[{"11268", " ", "\[ImaginaryI]"}], "7585"]}], ",", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["5652", "7585"]}], "-", 
     FractionBox[
      RowBox[{"54", " ", "\[ImaginaryI]"}], "7585"]}], ",", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1641", "1517"]}], "+", 
     FractionBox[
      RowBox[{"1854", " ", "\[ImaginaryI]"}], "1517"]}], ",", "1"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9321821082658577`*^9, 3.932182170465662*^9, 
  3.932182294411901*^9, 3.933224662273634*^9, 3.9338319030831547`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"d27705e6-05fa-f744-8997-c14919427ae9"]
}, Open  ]],

Cell[TextData[{
 "Come volevasi dimostrare la molteplicit\[AGrave] geometrica \[EGrave] pari \
alla molteplicit\[AGrave] per ogni singolo autovalore, ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["m", "TI"], ".", 
         StyleBox["a", "TI"], ".", "\[LongEqual]", 
         StyleBox["m", "TI"], ".", 
         StyleBox["g", "TI"], ".", "\[LongEqual]", "1"}], TraditionalForm], 
     "errors" -> {}, "input" -> "m.a.=m.g.=1", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "93baffa3-df1c-734e-bc19-890a50e8dacc"],
 ", dunque la matrice A \[EGrave] diagonalizzabile.\nEssendo gli autovalori \
complessi e coniugati, i modi naturali del sistema sono nella forma ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["e", "\[Sigma]t"], 
    RowBox[{"cos", "(", "\[Omega]t", ")"}]}], TraditionalForm]],
  ExpressionUUID->"39c3407f-2cdb-c549-89e7-c30273c5400e"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["e", "\[Sigma]t"], 
    RowBox[{"sen", "(", "\[Omega]t", ")"}]}], TraditionalForm]],
  ExpressionUUID->"ac30d17c-f206-9743-bd9c-56f101d8ae86"],
 ", con \[Sigma]=Re(\[Lambda]) mentre \[Omega]=Im(\[Lambda])"
}], "Text",
 CellChangeTimes->{{3.9321823017904644`*^9, 3.932182332560878*^9}, {
   3.932182434097322*^9, 3.932182450911455*^9}, {3.932182525002756*^9, 
   3.932182538361006*^9}, {3.9321825701645927`*^9, 3.9321825751203785`*^9}, {
   3.932182614139551*^9, 3.9321826678825855`*^9}, {3.9321827914214954`*^9, 
   3.932182929416025*^9}, 3.9321832832833576`*^9, {3.9330762940563354`*^9, 
   3.9330762940563354`*^9}, {3.933224675134609*^9, 
   3.9332246771541443`*^9}},ExpressionUUID->"8439b9bc-f377-5248-ae6a-\
b12c00b78d7e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Sigma]1", "=", 
  RowBox[{"Re", "[", 
   RowBox[{"\[Lambda]", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.932183397696953*^9, 3.932183453567066*^9}, {
  3.932183494552231*^9, 3.932183507172844*^9}, {3.9321854460290966`*^9, 
  3.9321854519272385`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"2ca41ff2-a958-b84d-93a8-a075c70657a7"],

Cell[BoxData[
 RowBox[{"-", "3"}]], "Output",
 CellChangeTimes->{3.932183430652675*^9, 3.9321835085972404`*^9, 
  3.932185455410801*^9, 3.932789359667595*^9, 3.932810077553749*^9, 
  3.932873559391588*^9, 3.933224679809505*^9, 3.9338319059442635`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"baeebe94-bce3-d244-a930-a2d3fe9d4e3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Omega]1", "=", 
  RowBox[{"Im", "[", 
   RowBox[{"\[Lambda]", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.932183525388035*^9, 3.932183541743403*^9}, {
  3.932185460739629*^9, 3.932185464051435*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"9a24dacb-5e34-8641-8b67-ad54281e502c"],

Cell[BoxData[
 FractionBox["1", "4"]], "Output",
 CellChangeTimes->{3.9321835439290066`*^9, 3.932185465408083*^9, 
  3.932789361368452*^9, 3.9328100794789467`*^9, 3.932873561246971*^9, 
  3.9332246821041985`*^9, 3.933831907206627*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"74da0723-5113-5c42-a349-7ab8075157eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Sigma]2", "=", 
  RowBox[{"Re", "[", 
   RowBox[{"\[Lambda]", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.932185476164554*^9, 3.932185481930185*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"0ac631cc-f094-5648-9f0b-103f8b467275"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["1", "3"]}]], "Output",
 CellChangeTimes->{3.932185483354894*^9, 3.932789362757601*^9, 
  3.932810081467594*^9, 3.9328735639969025`*^9, 3.933224684241749*^9, 
  3.9338319080969048`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"7c4d2a9e-f683-9349-bd21-d26c763a7d26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Omega]2", "=", 
  RowBox[{"Im", "[", 
   RowBox[{"\[Lambda]", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9321855059222336`*^9, 3.9321855172820663`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"e2a621a6-7c9a-e04c-b067-97e3b4f52223"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.93218551886302*^9, 3.932789364948471*^9, 
  3.932810083501634*^9, 3.932873566437948*^9, 3.93322468628837*^9, 
  3.9338319087706776`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"2c6c9c17-22ee-274c-bb94-2b34b58b7785"]
}, Open  ]],

Cell["I modi naturali sono dunque:", "Text",
 CellChangeTimes->{{3.9321839372329197`*^9, 3.932183956316824*^9}, 
   3.933224709326594*^9},ExpressionUUID->"af74bfef-33fc-e84d-9b03-\
5b51b9c17996"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Exp", "[", 
   RowBox[{"\[Sigma]1", " ", "t"}], "]"}], 
  RowBox[{"Cos", "[", 
   RowBox[{"\[Omega]1", " ", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.932183964566892*^9, 3.932184030230345*^9}, {
  3.932184981262415*^9, 3.932185006248358*^9}, {3.9321855218160324`*^9, 
  3.932185523941023*^9}, {3.932185570537491*^9, 3.932185573899778*^9}, {
  3.93218994190315*^9, 3.932189963486463*^9}, {3.93219007815724*^9, 
  3.932190088478489*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"6ba00a74-a00e-e34c-b884-494201d45b59"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "3"}], " ", "t"}]], " ", 
  RowBox[{"Cos", "[", 
   FractionBox["t", "4"], "]"}]}]], "Output",
 CellChangeTimes->{{3.9321840151568375`*^9, 3.932184032260792*^9}, {
   3.9321849860429516`*^9, 3.932185009857193*^9}, 3.9321850539538293`*^9, 
   3.932185574242693*^9, 3.932190092803825*^9, 3.9332247124163866`*^9, 
   3.933831910690302*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"790593c9-6061-104e-9e85-b24e1f0ce7df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Exp", "[", 
   RowBox[{"\[Sigma]1", " ", "t"}], "]"}], 
  RowBox[{"Sin", "[", 
   RowBox[{"\[Omega]1", " ", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.932184066206106*^9, 3.932184077832785*^9}, {
   3.932185014264015*^9, 3.932185031213783*^9}, {3.932185525081169*^9, 
   3.932185526378538*^9}, {3.9321855671781864`*^9, 3.932185578884121*^9}, 
   3.9321899685333385`*^9, {3.932190098617161*^9, 3.932190103618622*^9}, {
   3.932190762212879*^9, 3.932190764416836*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"c3dd8b32-07bb-d241-bd81-f62b1586770f"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "3"}], " ", "t"}]], " ", 
  RowBox[{"Sin", "[", 
   FractionBox["t", "4"], "]"}]}]], "Output",
 CellChangeTimes->{3.932184079426489*^9, 3.932185055735079*^9, 
  3.9321855793208623`*^9, 3.932190136581863*^9, 3.932190765165999*^9, 
  3.933224714323789*^9, 3.9338319130730686`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"b439ff2c-dc8f-cf40-adac-bfe2bf81e71c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Exp", "[", 
   RowBox[{"\[Sigma]2", " ", "t"}], "]"}], 
  RowBox[{"Cos", "[", 
   RowBox[{"\[Omega]2", " ", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.93218415593215*^9, 3.932184161479254*^9}, {
   3.9321850159514217`*^9, 3.932185022698189*^9}, {3.9321855286434174`*^9, 
   3.9321855575867424`*^9}, {3.932189913151537*^9, 3.932189925250353*^9}, 
   3.932190008788473*^9, {3.932190113025833*^9, 3.9321901169789944`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"45678141-15b1-7d42-8463-5eb4f8fd9e20"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "t"}], "/", "3"}]], " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"2", " ", "t"}], "]"}]}]], "Output",
 CellChangeTimes->{3.932184163042789*^9, 3.9321850579254456`*^9, 
  3.932185588557396*^9, 3.932190021010185*^9, 3.932190134863153*^9, 
  3.933224716061356*^9, 3.933831914054411*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"6b4e0236-033f-e54c-95c7-27068f45c337"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Exp", "[", 
   RowBox[{"\[Sigma]2", " ", "t"}], "]"}], 
  RowBox[{"Sin", "[", 
   RowBox[{"\[Omega]2", " ", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9321841724358234`*^9, 3.93218417695224*^9}, {
   3.932185017765211*^9, 3.932185039654684*^9}, 3.93218507081674*^9, {
   3.932185536049701*^9, 3.932185563792694*^9}, 3.932185597014002*^9, {
   3.9321866085425434`*^9, 3.932186612621453*^9}, {3.93218993121504*^9, 
   3.9321899359763336`*^9}, {3.932189997516058*^9, 3.9321900051735725`*^9}, {
   3.9321901225457764`*^9, 3.9321901294164143`*^9}, {3.932190767119837*^9, 
   3.932190767869967*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"4d1efa55-0434-544b-8f3f-6ab97358e2b7"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "t"}], "/", "3"}]], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"2", " ", "t"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.932185071677746*^9, {3.932185591088608*^9, 3.932185599450763*^9}, 
   3.932186615855026*^9, 3.9321900195570965`*^9, 3.9321901324099617`*^9, 
   3.9321907681816216`*^9, 3.933224717933907*^9, 3.93383191487599*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"b3a7180b-30a4-ac4a-b6cf-e073492fa431"]
}, Open  ]],

Cell[TextData[{
 "I modi sono pseudo-oscillatori di periodo T=",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"2", "\[Pi]"}], "\[Omega]"], TraditionalForm]],ExpressionUUID->
  "59b8c2d3-01dc-ec49-867c-a4465204146e"],
 ", dove i singoli periodi sono:"
}], "Text",
 CellChangeTimes->{{3.932184213412489*^9, 3.932184217177929*^9}, {
  3.932184252560307*^9, 3.93218427037731*^9}, {3.932184357218668*^9, 
  3.932184483571722*^9}, {3.932184514195099*^9, 3.9321846215209255`*^9}, {
  3.93218475570936*^9, 3.932184806944958*^9}, {3.932184846478667*^9, 
  3.9321848641578293`*^9}, {3.9321866523780136`*^9, 3.932186653081106*^9}, {
  3.932186763039409*^9, 3.932186790412951*^9}, {3.933224723805771*^9, 
  3.9332247340032005`*^9}},ExpressionUUID->"cbed180a-6a77-de47-98ed-\
5877ca139f5e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T1", "=", 
  FractionBox[
   RowBox[{"2", "\[Pi]"}], "\[Omega]1"]}]], "Input",
 CellChangeTimes->{{3.9321868293815384`*^9, 3.932186869696287*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"33ac139a-18cd-a543-8a79-62157b4e4575"],

Cell[BoxData[
 RowBox[{"8", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.9321868713056583`*^9, 3.9332247377180386`*^9, 
  3.9338319174418983`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"e533e003-98e3-ac4e-8fce-fdfc47f07336"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T2", "=", 
  FractionBox[
   RowBox[{"2", "\[Pi]"}], "\[Omega]2"]}]], "Input",
 CellChangeTimes->{{3.9321868819626083`*^9, 3.932186897400017*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"06ccb40f-3e05-2048-900c-79375263c38d"],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.932186897853092*^9, 3.933224739622412*^9, 
  3.9338319187877865`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"5eaa79fc-0eeb-514c-85d8-4fc74870e6a7"]
}, Open  ]],

Cell["\<\
I modi convergono a zero dato che la parte reale di entrambi \[EGrave] \
strettamente negativa.\
\>", "Text",
 CellChangeTimes->{{3.932186904996441*^9, 3.932186933483101*^9}, {
  3.9321869765126247`*^9, 3.932187032719669*^9}, {3.9330762789758835`*^9, 
  3.9330762809313173`*^9}, {3.9338319714892483`*^9, 
  3.9338319720383606`*^9}},ExpressionUUID->"f27ad779-0e03-b640-b414-\
9193398ee29b"],

Cell[TextData[{
 "Verifico i modi naturali del sistema calcolando la matrice canonica \
\[CapitalLambda] simile ad A. Per definizione \[CapitalLambda]=",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SuperscriptBox[
          StyleBox["T", "TI"], "-1"], 
         StyleBox["A", "TI"], 
         StyleBox["T", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "T^{-1}AT", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "3c3d3b4c-8137-9946-bf7c-de4ed5905f1e"],
 ", con T matrice di cambiamento di base costruita a partire da T0 matrice \
degli autovettori che sono correlati a ciascun autovalore"
}], "Text",
 CellChangeTimes->{
  3.932187039462511*^9, {3.9321871464771004`*^9, 3.9321871737960873`*^9}, 
   3.933224797898033*^9},ExpressionUUID->"ffdeecb7-326c-4640-9f50-\
dd426d509284"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T0", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"Eigenvectors", "[", "A", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.932187184528794*^9, 3.932187197548647*^9}, {
  3.932789491676571*^9, 3.9327894959613*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"c994a244-ba47-9947-9d7b-31cf1b7dc251"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["583099", "1249755"], "-", 
      FractionBox[
       RowBox[{"30808", " ", "\[ImaginaryI]"}], "1249755"]}], ",", 
     RowBox[{
      FractionBox["583099", "1249755"], "+", 
      FractionBox[
       RowBox[{"30808", " ", "\[ImaginaryI]"}], "1249755"]}], ",", 
     RowBox[{
      FractionBox["3709", "7585"], "-", 
      FractionBox[
       RowBox[{"11268", " ", "\[ImaginaryI]"}], "7585"]}], ",", 
     RowBox[{
      FractionBox["3709", "7585"], "+", 
      FractionBox[
       RowBox[{"11268", " ", "\[ImaginaryI]"}], "7585"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["108768", "416585"], "+", 
      FractionBox[
       RowBox[{"56192", " ", "\[ImaginaryI]"}], "1249755"]}], ",", 
     RowBox[{
      FractionBox["108768", "416585"], "-", 
      FractionBox[
       RowBox[{"56192", " ", "\[ImaginaryI]"}], "1249755"]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["5652", "7585"]}], "+", 
      FractionBox[
       RowBox[{"54", " ", "\[ImaginaryI]"}], "7585"]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["5652", "7585"]}], "-", 
      FractionBox[
       RowBox[{"54", " ", "\[ImaginaryI]"}], "7585"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["420736", "1249755"]}], "+", 
      FractionBox[
       RowBox[{"2104", " ", "\[ImaginaryI]"}], "416585"]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["420736", "1249755"]}], "-", 
      FractionBox[
       RowBox[{"2104", " ", "\[ImaginaryI]"}], "416585"]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1641", "1517"]}], "-", 
      FractionBox[
       RowBox[{"1854", " ", "\[ImaginaryI]"}], "1517"]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1641", "1517"]}], "+", 
      FractionBox[
       RowBox[{"1854", " ", "\[ImaginaryI]"}], "1517"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.932187198782707*^9, 3.9327893699873905`*^9, 
  3.932810089225605*^9, 3.9328735715926914`*^9, 3.933224757000416*^9, 
  3.9333987599345245`*^9, 3.9338319211773148`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"e3666375-5727-924d-b896-e06a3cdc972f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T0", " ", "//", " ", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.932187210628282*^9, 3.932187217802992*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"370f4935-ca48-fd47-9b02-6a3ce542aaa6"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["583099", "1249755"], "-", 
       FractionBox[
        RowBox[{"30808", " ", "\[ImaginaryI]"}], "1249755"]}], 
      RowBox[{
       FractionBox["583099", "1249755"], "+", 
       FractionBox[
        RowBox[{"30808", " ", "\[ImaginaryI]"}], "1249755"]}], 
      RowBox[{
       FractionBox["3709", "7585"], "-", 
       FractionBox[
        RowBox[{"11268", " ", "\[ImaginaryI]"}], "7585"]}], 
      RowBox[{
       FractionBox["3709", "7585"], "+", 
       FractionBox[
        RowBox[{"11268", " ", "\[ImaginaryI]"}], "7585"]}]},
     {
      RowBox[{
       FractionBox["108768", "416585"], "+", 
       FractionBox[
        RowBox[{"56192", " ", "\[ImaginaryI]"}], "1249755"]}], 
      RowBox[{
       FractionBox["108768", "416585"], "-", 
       FractionBox[
        RowBox[{"56192", " ", "\[ImaginaryI]"}], "1249755"]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["5652", "7585"]}], "+", 
       FractionBox[
        RowBox[{"54", " ", "\[ImaginaryI]"}], "7585"]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["5652", "7585"]}], "-", 
       FractionBox[
        RowBox[{"54", " ", "\[ImaginaryI]"}], "7585"]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox["420736", "1249755"]}], "+", 
       FractionBox[
        RowBox[{"2104", " ", "\[ImaginaryI]"}], "416585"]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["420736", "1249755"]}], "-", 
       FractionBox[
        RowBox[{"2104", " ", "\[ImaginaryI]"}], "416585"]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1641", "1517"]}], "-", 
       FractionBox[
        RowBox[{"1854", " ", "\[ImaginaryI]"}], "1517"]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1641", "1517"]}], "+", 
       FractionBox[
        RowBox[{"1854", " ", "\[ImaginaryI]"}], "1517"]}]},
     {"1", "1", "1", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.932187218412321*^9, 3.9332247587491846`*^9, 
  3.933831926673977*^9},
 CellLabel->
  "Out[26]//MatrixForm=",ExpressionUUID->"9c02069f-90f8-e746-a150-\
d1dfacd23d9a"]
}, Open  ]],

Cell["\<\
La matrice di cambiamento di base T \[EGrave] per definizione cos\[IGrave] \
strutturata: T=[Re(v12), Im(v12),Re(v34), Im(v34)]. v12: autovettore \
associato a \[Lambda]1 e \[Lambda]2, v34: autovettore associato a \[Lambda]3e \
\[Lambda]4.\
\>", "Text",
 CellChangeTimes->{
  3.9321872545322037`*^9, {3.9321873190307865`*^9, 3.932187322874563*^9}, {
   3.932187354504608*^9, 3.9321874033253155`*^9}, {3.932187451314951*^9, 
   3.9321876217971287`*^9}, {3.932187672261614*^9, 3.93218767824601*^9}, {
   3.9321881346863213`*^9, 3.9321882181645184`*^9}, {3.932188375139015*^9, 
   3.9321883767955112`*^9}, {3.932188468483324*^9, 3.932188470451313*^9}, 
   3.9321885531161976`*^9},ExpressionUUID->"ef7a06ec-d703-754d-9931-\
07e0d815c3cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"T0", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Im", "[", 
      RowBox[{"T0", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"T0", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"Im", "[", 
      RowBox[{"T0", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.932187691343401*^9, 3.932187734507557*^9}, {
  3.932187787926253*^9, 3.932187798851221*^9}, {3.932187838200497*^9, 
  3.9321878567481136`*^9}, {3.932188604831018*^9, 3.932188611893518*^9}, {
  3.93218865406109*^9, 3.932188678069601*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"a900fd09-90c9-be40-829d-2f301d63d494"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["583099", "1249755"], ",", 
     RowBox[{"-", 
      FractionBox["30808", "1249755"]}], ",", 
     FractionBox["3709", "7585"], ",", 
     RowBox[{"-", 
      FractionBox["11268", "7585"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["108768", "416585"], ",", 
     FractionBox["56192", "1249755"], ",", 
     RowBox[{"-", 
      FractionBox["5652", "7585"]}], ",", 
     FractionBox["54", "7585"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["420736", "1249755"]}], ",", 
     FractionBox["2104", "416585"], ",", 
     RowBox[{"-", 
      FractionBox["1641", "1517"]}], ",", 
     RowBox[{"-", 
      FractionBox["1854", "1517"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.932188680318821*^9, 3.9327893727922745`*^9, 
  3.932810092859842*^9, 3.932873573780246*^9, 3.9332247610919323`*^9, 
  3.93339876482736*^9, 3.9338319292881927`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"17ee1f36-a1d5-c442-b1f3-0090187df809"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T", " ", "//", " ", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.932188697150661*^9, 3.932188700982813*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"8788bfea-56a2-194d-b82b-322de499568e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["583099", "1249755"], 
      RowBox[{"-", 
       FractionBox["30808", "1249755"]}], 
      FractionBox["3709", "7585"], 
      RowBox[{"-", 
       FractionBox["11268", "7585"]}]},
     {
      FractionBox["108768", "416585"], 
      FractionBox["56192", "1249755"], 
      RowBox[{"-", 
       FractionBox["5652", "7585"]}], 
      FractionBox["54", "7585"]},
     {
      RowBox[{"-", 
       FractionBox["420736", "1249755"]}], 
      FractionBox["2104", "416585"], 
      RowBox[{"-", 
       FractionBox["1641", "1517"]}], 
      RowBox[{"-", 
       FractionBox["1854", "1517"]}]},
     {"1", "0", "1", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.932188873188299*^9, 3.933224763124752*^9, 
  3.933831932438225*^9},
 CellLabel->
  "Out[28]//MatrixForm=",ExpressionUUID->"b2384b67-d2d4-ee48-95e5-\
a9e88665277a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalLambda]", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Inverse", "[", "T", "]"}], ".", "A", ".", "T"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9321888988245068`*^9, 3.932188920950453*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"07c6bd4f-3036-2848-bef3-ce84726612c7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     FractionBox["1", "4"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], ",", 
     RowBox[{"-", "3"}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", 
      FractionBox["1", "3"]}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", 
      FractionBox["1", "3"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.932188922137945*^9, 3.9327893752424393`*^9, 
  3.932810096275084*^9, 3.932873576118103*^9, 3.933224765719358*^9, 
  3.933398848667742*^9, 3.9338319352331467`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"8bb06c24-4f82-e247-8a99-973d22a87a4b"]
}, Open  ]],

Cell["Verifico che la matrice canonica \[EGrave] diagonale a blocchi", "Text",
 CellChangeTimes->{{3.932189413167249*^9, 3.9321894447245197`*^9}, {
  3.933224836538254*^9, 
  3.9332248367941933`*^9}},ExpressionUUID->"701e68b1-da87-3547-a511-\
c9ec46cc9149"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalLambda]", " ", "//", " ", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.932188934205517*^9, 3.932188946753166*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"2ef751c1-1609-764c-bd77-5e1f3dddb7ce"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "3"}], 
      FractionBox["1", "4"], "0", "0"},
     {
      RowBox[{"-", 
       FractionBox["1", "4"]}], 
      RowBox[{"-", "3"}], "0", "0"},
     {"0", "0", 
      RowBox[{"-", 
       FractionBox["1", "3"]}], "2"},
     {"0", "0", 
      RowBox[{"-", "2"}], 
      RowBox[{"-", 
       FractionBox["1", "3"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.932188947369184*^9, 3.933224768244007*^9, 
  3.9338319378610725`*^9},
 CellLabel->
  "Out[30]//MatrixForm=",ExpressionUUID->"1e6438cc-875b-384f-a1bf-\
6087efa42495"]
}, Open  ]],

Cell["\<\
La matrice \[EGrave] diagonale a blocchi dunque passo a verificare i modi \
naturali\
\>", "Text",
 CellChangeTimes->{{3.93218906646735*^9, 3.932189072509596*^9}, {
  3.9321894547807713`*^9, 3.9321894625621357`*^9}, {3.932189499424021*^9, 
  3.9321895025810623`*^9}},ExpressionUUID->"103a5152-b40c-094e-afb6-\
521852c97912"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"MatrixExp", "[", 
   RowBox[{"\[CapitalLambda]", " ", "t"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9321889703416157`*^9, 3.932189030533209*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"f36fd92b-d9f3-1d44-8b36-74ae0f6d3ed4"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "3"}], " ", "t"}]], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["t", "4"], "]"}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "3"}], " ", "t"}]], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["t", "4"], "]"}]}], "0", "0"},
     {
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "3"}], " ", "t"}]]}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["t", "4"], "]"}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "3"}], " ", "t"}]], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["t", "4"], "]"}]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "t"}], "/", "3"}]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "t"}], "]"}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "t"}], "/", "3"}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t"}], "]"}]}]},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "t"}], "/", "3"}]]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t"}], "]"}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "t"}], "/", "3"}]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "t"}], "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.932189033064606*^9, 3.933224842419449*^9, 
  3.9338319478615303`*^9},
 CellLabel->
  "Out[31]//MatrixForm=",ExpressionUUID->"6ba404f6-d546-0144-b8da-\
fd681bc86f73"]
}, Open  ]],

Cell["\<\
Come volevasi verificare, i modi naturali coincidono quelli calcolati in \
precedenza. Passo infine al grafico\
\>", "Text",
 CellChangeTimes->{{3.9321897988780384`*^9, 3.93218983610161*^9}, 
   3.9332248566197834`*^9},ExpressionUUID->"e67c09c1-49db-2745-8a3b-\
da349d135d36"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"\[Sigma]1", " ", "t"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Omega]1", " ", "t"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"\[Sigma]1", " ", "t"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Omega]2", " ", "t"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"\[Sigma]2", " ", "t"}], "]"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Omega]2", " ", "t"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"\[Sigma]2", " ", "t"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Omega]2", " ", "t"}], "]"}]}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", " ", 
   RowBox[{"PlotLegends", "->", "\"\<Expressions\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.932189845965666*^9, 3.932189852859577*^9}, {
  3.932190041587467*^9, 3.932190069478899*^9}, {3.932190146727644*^9, 
  3.9321901880053844`*^9}, {3.932190437136747*^9, 3.9321904900869007`*^9}, {
  3.9321905475940456`*^9, 3.932190618150305*^9}, {3.932190727806145*^9, 
  3.932190755916744*^9}, {3.9321907971898117`*^9, 3.932190798485958*^9}, {
  3.93219089842058*^9, 3.932190934132984*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"8cff00e4-2a3b-214b-aa12-2cd8dc2bb562"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    InterpretationBox[{
      TagBox[{{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
             "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
lhKrRKePJ09wwgsGwhJ/nRke0kPn2jbNCefUXr77Z2ONG15sitpd2NNXT5b8
YHkR/31H653nzt59n7rT0CldxgnvZAxO8XGBqvqumEf8Nfzv2TGn28Jc8P5L
3MMsEX+8/ld2xGsJLvjpKyQ0lX0dt2LkbZFW4YKPX9U+xHgF4tIPe8cuHOaC
y2dVucvxIHxZPp46XZcLzBI0UlJ3b+JJhjRHqE9ywRhuTKNlGYLbjZAdtU24
YOKVsGW9eyiu4HXzjo8lF3Tc3TI10ArD2xIXG79f5AL6wXfPMMXb+H3Cs5+8
blxQf+osbdmj27jT88uUxl5cMJ+FCf+jv4NT9P+A+iAuiPfz8W9tv4NH/MHz
gm5zgQ3/x7wF+XCckeIRlVYMFxT412SVRoTjCbw3L60mcAGXd1mC7FA4zql4
vqUmnQuUK2ejHkpF4A+OaEj5ZXHBLR7+UDXPCFzImidKrYAL4pIZ7AkVEXiu
99LkfAkX/Bkop0idjsClonuPV1RywT+tYfXX4pH400cVxZ6vuID1olhT/ZlI
XKk6nlEB5wKvlfu+nbcj8RftHu5TLVzQLlq9j/NpJK7582RHcQcX/OISvviq
KxKvX5VRcO3jAl9n7yMTM5G4HitdvNTnvbzxHBnN9FH4O8nx2bHvXBBhMG8e
KBKFn9JpMs6f5IJCE8NgBdUovNsst8JhlgvStP0PUkEUbuEWwi66zAWvuyNf
iZyOwodCbH1GNriAr0Hw4mPzKNw2Xbsvk5IbSKY0la/PRuE/SvnVrRm4oSBh
8WTQuSjcuWkllZ+NG6y+7d9lsozCp4YGlgd5uME7aqTrrkkU7jVXZZkutIeX
LCf5j0fhi7TJLy0kuOG191p5v04UfkPoKh+nPDfQ8wg2DylG4VtqRgE9KtxQ
+fgGhYFwFB528sDnBA1uWDxcHXaQKQqndWDUNsK4gdu8J69pORK/e/3XQ2YD
bpjy+o+BaSQSZ41/u/n+NDc4J3IUSjZH4qkFBbYx5tzwqqe78kBRJM5fd5t0
7Dw30Laa12vERuJZPfYitA7ccCX4fLHD5Uj8yfb+H7c9ueHMeN5FZ8lIXJ57
A8CPG5YZP1R77kbgFfJDeTtB3CAi8mpjeigCf30u7dLNGG5IeXmxICs6Atf1
8m3RSuSGD7lL5Su2EXhjhKnUWjo30KytUvCqRuDtz1l++RVww+Dor8TZj+H4
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
             "]]}, Annotation[#, "Charting`Private`Tag#2"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1:eJwUV3c81e8XJyt7xiXzWheXSEMlz0l9VVIipBJRSVZZGamskE022SsrRFl5
rGyyU2YUkkJGVvnd31/39X6d85zzfp/zfj738xEzu6d7excVFZU6HRXV/39f
PDajV7qVoHageeXNzs4CauwT1bos6oq2pmUys34toJ2mGm9R0Wfor8ByjuDI
AnpRGyxCJxqHnjeFTT16vYDIC7dCdu4kI8YPSmSbFwtolC3p3/bHNPRau75A
2XcBWR93svkj8hJdpxL6fkFvAb3un8hYOZmPqhMYqXOOLKBNK62RpTuvkErr
HOsXoQV0qjNccu1jCZINUpDenvyF+rYsIhdFKtChL/Ykwo1f6EGzsOJCcSUi
bD52KVH9hQSe97f/PFmN+K/bjSPCL2QmCzQ/7mDUp/xMVK3jJ3LJZ674/bEe
/ffEz5yT9BNpRkzT/05pQMJxjXLB2/NI0KVOb+luI3o2KybL2T2Pak86Ly5s
vUd3fgbNqzrOI4bhSemfIq2INqKh1L74Bxqqfec0P9uKbveQ1J48/oFys2Ib
fhS3IWYt1rFczR/ogv0Fk7mTHei6k/Ipq4k5FM1YGT1z5wPyLW7h/kY9h7gS
W3YtfexFs7/3vr0vMou22N68vK/ah9QmazdHx2fQV8/0i4spfah1dYiYmDyD
3tx5nLRwtx9JV7+TJgjNoKvKB47+2hpAKWItPy05plFqW7LdD5FPKMDnz/jN
4Sm0ElsmOx70CfWePfXgZNAU0rjTPtW78Qnp/r39X6TqFJqn+aNf2fcZWeg/
nopPmEQqxy8cfeY3goaMWWrKLn1B3a+2d0kvjCPakhK+SZNR9KSNrKlkMoWq
j3BVvLLpRTnFb6XyoqZQiilB1r+6B/XGqtNIdkwhN/FwYwPmHiRxx7CacOQr
yuh4fGJO5wNqo/FRoOL+hlh97F+pt7Ui3uPDXB+appHmOer6hZR3qPDVs2Fr
hTmk1k+lxOn3Es9xzQVpms4hR43eym3NQiz9QFONFDmHChsV9uj6FOMUVebU
qY05lBzqHKSm8gZHtAaZX33/A73qMlWdfoDxg6nQpdNGP9H6YceAXcktuERj
MU0y9Ccq81XJUyxpxQsvL+rR1P9EaqfTrZUa2rDFfc63NdK/kHZT2ILfWAe+
+jfC/eDyL6S012yh070bJzO3e3P+t4j03u31U7rej9WOPzTyMF5EDae37jj2
9eMRW7mDC86LyLhuwcDszAAm9AZOd+QuokAPa+J+hUEcHqt11p9jCYVRLyac
+f4RK7Zti/2RWUJn96ilBOgN4a6t/M3bJ5eQH6/BLpOaIcxkwpp/8sEScnqv
OfQ6+BP2luxi2xleQplHKp80Cgxj4uXHMzarS+iMDMrVdhvGtf4KtSNsv5HE
Hu1Vw6FhvP0jxK7yxG+UwnpaYjR0BDuVaPc7Zf9G+TNd1+znRzHP1538r7W/
0VpGtFcpGsMle4qeXvpMyW85yXY7fAz/cuE4rMS6jHAXQxeT4ji+g3ri5u2X
UabFpQQR+QlMlbZWORy4jAz9one90Z7AsbSCI20Zy6hGdYvB124Ct7SaC78c
XEY5X6Nmu0smMElvO+320RWklGrzio78Bde+EWvUu7SCNn6sPDQ68wUb8p/+
dtJ6Bblxpr/+fvML9h8LlyYmraA9zk/Ns2K/4FkL6fwx6lXkcuREYfr6F+zR
rtXZKbCKamyybHPYJjFBwf5XtfIqKpVluT8pPonPLFcrJtxeRVYCCSpr5ybx
hP6kTsDjVST26DNPt/EkdilncHCNWUWayQeNxu9P4pePdMsut64imTPm+UkR
k1h9wnlQY3IV/eXM262dNok/q7/4c3BrFWUPDD44WDyJ7TPrCZI8a+gqXY+y
Lp7ETLtnj/DIr6Efvnt9MjsmcZol6zUajTUkId3yet+nSXy0c7/7b+M1lNBh
w7v0dRJbRjyq6Q5bQy1vDGYFNifxrtW0cfxyDfUnbIv70Ezh+MstVK/q11C5
41k5KZYpvL/yp1jS8Bq6Tt/wgJpnCrcJcp8MXqH0U1Pw5d07hc2eqNxyZ/2D
TlZ4TdwWm8KbX64/tZL6g17TjXEvSk3hiFPeWVfRH5RT/qCsTG4Ky2XnNJ81
/IPYIdT07b4p3MjYNati9weJeFhUre6fwkbWy4ykgD/olsoBG7uDU3iliyDH
l/4HlSkxkOQOT+EgJTUt+uo/aPxge7q4yhSWiLxps9r/B7X2KCZfo+DqNf+Q
rz//oC+TKeN9lHy9K4Wv+ujXkc+ivFLwoSk8X9XXXS+yjg7pPjX3PzCFfYQ3
lopV1pGz+IRhk9IUFvQU5k7VWUd/6FZmTitM4dKpkwfCLNfRYsnUBqvsFNbS
uKv/xHsdeRjte8gvOYW/5oQ8sE1cR23jGcZWIlPYnbk05nrZOkpr0X5Byz+F
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
gcGfyaK7rgeg/UZidaxRMlC17MG4vfwM6SobnC9PpcyP94kZkfAMRXzBt1mr
ZEBGc8Z0/hjl+cTXuVulRgZ6bDyGDv31RcTzn/PM6mTgmDJpcfCdLyopX1l6
2ywDv4Y7d0ke90W9oTKPzfplIMl2xVzvwFPEqfY8+u1PGSgyzvSfZvBGYfHm
zaaisnBUQcKp7407cn7g5eAuLgtywQ8JHcLuyFg3SSRGShaOvFtuP+f7EJGZ
Bp07yLJQ35XzZeOSG2p1/Y90+IgsUBNi39TPOaNdVySesejKwsTmBimI2QE5
8U1qvvWWhdwDxyLtAsyQ0fLftR5fWYhzZrp2Ws8UnfrAnz7/TBb+M3wrWSJ8
A3H56WyJhclCQ0euyqzlNVS4VpsXlCgL/nSLne8/6qDZgWQWszJZEE6O+67q
xYavRl7vYpmRhZ+VlotcZ82w4GumvVZzsqDscc5Y8t5NPN7z9k7rT1k4YPHn
MMvzW/gWOxe174osZPR+2pbrN8e2AU3KO9RysP6ZvT34qBX28tgXtyQoB0mx
63ZRzXb4VPLIN21ROWj7tXpzUsMeM9Q8218oLgdvdDzZOxrtcdDWVLulrBw0
jqtu36p2wNEPYv9NHZaD6NWknOPxTvilNfWtQV05WI5xPqPH6oqtAwuLDhjI
weh8wqFsR1eskHvtb8QVORjQmVc2/uyKS2bKorVvyIGdlKLszxQ3XG1m2dpi
IwctV6Td/hNwx489+Xil7eTA5HtDta2jOz6R0mj21FEOrBWvzM50uOOmUeHt
Ew/l4OjA0cA6l0e427BPocpfDkJsV9uHqx7jCGePh/xBcvBKxNbv/O4nWD9a
vsU5VA581aSDqC49wZ/7/EwPRMvB3U8JjRJTT/DXC6qRBelysF2X6SXm7IGz
bL5PMGfLQUEXff35aA98Nyha3jJXDr4qr+yJLvXAv1oXm6SK5aC6Gnm5/vLA
66cyN5Jr5GC/M9nZ+7Indq9K9m6sk4NCjmLLZRtPTLU/nvV7oxxonM0xTPD2
xAwioWL72yn1tT/sep7viQOinuUZdMnBo/da9ZOU72E2Fp+DD3vkINSm2cuy
1xPzbricbfwoB1UcOzeJq544/p5D3+xnOTgsMdOkS+eFhaZtrrOOyUFALvur
Kh4vnGJkMaP0RQ7uD8xevC7uhSX6zOwMvspB4NuQ2cNKXjjn7PUttxk5gLGa
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
PL2wwABLYuz99Dtz/H81yOTI
             "]]}, Annotation[#, "Charting`Private`Tag#3"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
             "]]}, Annotation[#, "Charting`Private`Tag#4"]& ]}}, {}}, {
       "WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
      StyleBox[
       DynamicBox[
        (Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               Line[CompressedData["
1:eJwVl3dUz98fx9t7792nnfYglXrfV0laSNoS0k5JhIZIEZGGIqWkgShpoPG5
7b5SaaM0kPbS1u7n99c95z7O876er3vuufd5JVzOWblRUVBQKFBTUPx/TAtz
oVN3TSWSw1P9tnb+oPoukoUdKQitpcldfeL9B+38VxlBIt1BuqtrQnPfZlFa
dYw4LekxWsAKPhHlM+isfqDvX/FclFu/5MmcPoWKu39mL+3PQ8/E609ti0yh
dR+L/nmPAnRuQd/YJH0SGX2Ol1n5VoTmD9BNvnsxgbo2PBPnxMtQ/FOt9K/d
Y+jSRzG1P4XlyPM//xcn3MaQ0IPu5pn9ZNRZNRw3+XcUuSgA9ZRHFTKJXuqd
kxxFV/KYyxa+1aJKSWnzkthhRN83JDcj/gmJWoxw1ZB/oZ5qHDg9/gkNzV4N
Tvf6hV49T66bKmxCTe19I9v8v9DhgMMnJ/e3oPCObwtKQT/RQ8byh2Mebcj2
Dccf6seDqOSyWcAFgXbEev/koUDGQfRkcq/gYmg7+pk+mh0ROoD82rk8Fg50
oLb6Sb6D3v2I60kj1fy3TmRn5dEndeY72mB7n+uv14Xyf2ce0BrrRcPhWZZz
GV3IcOrGf9G+vei9R1j6H69udFrk+pn26z3IUXO37uzGF8RBu6ehpPoretb0
9PyUeC8qbrp381VaF1pKfqfw414v2rOw2+GVThcy9mj+3bnWi7J9c25l/6s7
Tf3XprzrOwp4kWZ7SrATaesf1r0T1Y+ssltNp4ra0V1m18XQpX5UtD1MWXSi
HQ32BuX5nx5AshOHy+WZ2lHkpRwx+32DaDTU8R1DeytqL9ikkvvzAzFRuAdJ
+LYgLsTozKryE+XXkSxG+prRPtlE3SjXn2jBK4sUfagZ3V/KXQzu+Ilqy6ZZ
9HWa0O74L24ur3+hxGRLnTq1RnStSclM/eRvRGOxr4EuqR69LPwg+zrpNzo2
b1SbqViPOpMNqWVafqPmW78qbOvrkLSHPVlAZxiFhYvc69+oRU3UkSoU3CPI
4FmSjdGNGrQ0ycYcbDqCfGh+e0fI1yDRzsdji9dGkFub26W77dXIP6MgY2x6
BB3tU73RKVON+PT7uNr+G0VTagbmSY0YgbT7H5OtUZTCaFFKVsXIi3m+uVZz
DF1h0lT985iMyL10N99njCHZA9Xjey9XIJdLGn/TgseRU93KVMWxMvSm4E7f
WZVJ5DBxzefB7XdokmvyntnpSVQ0LWjKL/EOyV0yI+QTJ9Humm62OxUlKEOP
+dnvtUmkZh4+zrlSjBI+3XN3bJhC3xOQct31ItSqNMOvvTqFfEZPnq2SK0LM
cYc+8SpOo8We5kXX9kIUacum1BE3jQxYvK/cky1El37Hzh90mkGNPJX7FpsK
UJHxXKZM7AzKoAx+81W9AP3JtbSmrp1B873L7g9T3yBPf84PlXKzyLumPfbi
5XzkuJUQumdxFlm6GncTR16jp8zNEZwH5pDlauBd94svEKEf4nTdeQ5FllkJ
76Z+gfr9FPf8uTyHfE3fK5ISnyOBzrujLa/m0O3M79mK5BwUn2xheptjHjmV
U/BRSmcjtaZNib+75hHz2A/fotos1LqRt+62fx59uNSeqnUmCzGdZM3bf2ke
pW2m/UrMzUQRMq1sO33z6JJNfVWV2TMkaRc25rs8j/apUZqK/s1A1bdVqvvZ
FtDi7O0QlpwMtDl1/3y5wQJiiG7nuEGbgQKLjnQHvlj4Nx/LTvU2DXmgjsfT
AYtIJlbVczj4MaLIXCnvu7uISljfmH6ifIySaUT6m7IX0edbrwomopNR4yd3
sdyvi+ib0ubJ4qxHSN56M9NNdwm5DcbIH51NQtXvJeqtjy0hseLKrL83k5C9
4MGR/WeX0HE9Pe674kno9mC8nGT6Egp9XffV2j4RjXvK5Q1SLqO/ghfUwn8k
oOvNFp8/Cy2jzeD7J1JvJiABlYBZsuYyeuq6+spZOQGZLJLVUt2W0Q13+8c1
4fEo96rVO7tPy8jBjHWvnH4c8k64Wtket4LmtWNtX8zdRVTLmT+qcleQWoCY
nrHPXZRi10hRULuCbm1RaJ0Yj0ZNItz7Y5ZWkNxWhFTDxB2k+OLlR1P7v4iL
lrrMiOE2qmdsHdc+/xfxfTC9650UhZzOLjLKR/9FiSmHdAqlo9A9dcKCjvwX
ySyJ6weZ3kLTFV3tteKrKH+XftToq0gUKbY2X6i9iqbVp2/RmEQikXAx7mdH
VxGVox1pdTQCWRh72VyLWEXxDBcL9BUiUH77du++sVVUTrT0OTSEI7+RXb9L
3qyhiMHeVZH7Yeincy9Dzac1xKo442/x5yo61nNb5fPwGnpwMUil4NhVpN08
FjQitI6kZyf0PsuEIurCHA6+qHUkZCE2UDIThC4p2GhJZq4jtgsaDg3uQWg8
i8ZJBa8jgYOHK+8PXUGtD8+8MF5cR4VhgyU8Q5dRcqgEcfnkBvr9Jv3V5Z1A
xLTSfiYieAPlaFTWfLsXiK6eu34nNmkDDWbmx94WCUQuLj+6XzRvoDHxdcp8
w4tIySTNp2fvJvIweSJS9zIA1XALPtbh2ELfJLPounPOod0xjZUHFLfQp1ef
Tl2jOIee010ZPmq8hZSXrEoinP3QvbWvqt6hWyi3Qr3cStoX2f5I/C9lfAvt
//bKUP+LN2q0N5p+Tr2NHkZQTv408Ub7Ohc5i8W2EWt4CsWJKi9EarA60Wy9
jRKe6cpkl3iiyVccSxvV2+iwZTj1aKU7cpKuFmTo30YXkn0rag+6o7a0c4jn
7zaaFW0LZ+pyQyVxrdFKyjuI1vjgo9w5V3Tt0j2JE493kEk9j3SP8RnEJBEp
90ObAkZNXCJMbU6hRr141bADFGB+M1VWmfYUumWfvlfUigLk6unolH1PIqq4
0oPHfSjglmqwafk+Z7S+Pe3xLY0COhv2PZhYP45KhdbPXXpFAeiY7cS188fR
JS36K7wfKOCCtn5U8aQjWvCVuH2snQKotE0sqocd0FS/zcs2KkpQ547qF1mx
Q69WXd76sVOCCkV2isl1O+TJ41/KKkIJagzFs0UsdmjYPLrRfA8lVICKiICS
Leovrxz/6EEJ4UGOApSR1qglWW5XdQslZHsM6LbHHkXRJbvVT/ZSQl388Uwd
naPIpN1AZ3uEEvyr846YDVuienonU72df1zjfqwBskTkS3FepepUkFOxd+4U
+2EUnJB23o6ggu4/Ool/gw8h7TevglbMqOB0sHCq64QFKhmpv7PblQq6nNpX
o1vNUb71Wu7bh1RQLbdz8FGpKTrrT1d0JIsKFD1iAn11TJHCPe7y2QIqWN9d
1VpENkHP65SblD5RgfbpoPHjTQdRuobL5MsNKhDUi9KZpDBG9zmaFZ6dogZt
FZ2Q0g5DVLZX9N1hP2pwHloi3p41RMPO59BmCDXYpt65WcNoiPblc1vbPaKG
L31iN2nMDNC4qdNV1lZq6Eyq3t9YhxDP+Tf0FX3UsM40bb0pgBBKpkjwnKAG
pf1ljpXnCfRwNPt5HQ0NUAHnnWfK+mh/xExb0D4aCIw0ODvboov8XiFHOVMa
8FhntXqsp4tSOuKHu21pILvosIlxgQ6aE9daUw2gAWPnPi6PNG2UTg6THH1J
A1syxVVCqVpodZk90IqPFtYPs3NusGsiKVGXnR0pWjhWkpG++VIDHTYquZOv
TgsD61bmMkYaKCfBPp3hEC00dvbFVV5XR1aqzz5WRtDCjMK9xB+caijMdvHo
2XhaCOQ54NQaqPrvPj3QL/iUFtTvER/Cm1UQRcvE3MVyWmALipiJCldG+Z4a
QorztDBOF+TPyqeIemIjs3u2aeHTf8ucWhEKiObDV5VbLHRQa1PcHbC4CznS
huz/JUcH0tOCiWP98oghs+7sI2c6EMyScmDolEUufdZV1C10QJN+jTNMWwox
pf7yPd9LB/OdJQNtHZKoyNFP5McoHaiw7b8JvpKI+ntUUDklPXi0PNKweiWB
snvKNc/vpQc7XaM1Vj0Sskg+ODRoRA/qlzd+2DWJoyW77jgLK3o4fTdqRpEk
jg58m5mR86UHYfmq00e/iqLRL6SXg5n04JIuHv7YWxjdT8q3tXhLD4XMf6+k
fhNCWja6tOWYHgYtc5lzDwqhqO5jLkk99DDJb2n/Qk0QyXfdErFgYwCjvX8b
I6X5kXf7dFxZEAOsvDdcPxnFjbjigpBcFAPMe1F/MxbjRuVH6GYTExmAQ0xk
2ekDF2JuEzf3L2CARe9euYk/nCjvsxWt3AgDHAqfe3UoiANZx/woTlxgALLN
D1IQiQNtWpx1oaJgBGluH4XNBHZ0qOVm1YAQI9ju8TnQZ8CGZptKgxItGcHM
aKSR3MiMHkYfkKdyZoTYG3N96RrMiDDr/HrOhxGSThSEZT5lQrGfpjTNbzHC
Rr5FSssNRqTWKDZLSWYE3Ln387wPPTrfEOlyTo4JvjpfO1REpkZiw8Z0K5pM
EGsQkYPtqVEzFeOrUGCC+yU2a+QVKiQDMfN3HJhgyNJU+Lw2FeotT7qefZcJ
vhw7IpXXQYFu9dpJKyYzQXnZRr9VKAXSXBVsLMxmgo6uFCJHngLF7Elnr8JM
wMqxl9GeZYcwePs8vfcPE0z80jb4+GKTmG31NDy1yQSzX7b/cPBtEqkzCqOj
DMzA8/o9nVbUBrGsUKC8JMEMn1YEV3vPrxO5OR/IbNbMYM43WMLisUpwpjZ+
31/KDGe0OZnY/1siKsuiw5rqmWHfOcHJ1eNLhE+PheTRDmZ4PiOjt7a4SDTw
dng5TzLDDFVpN7fCIhEU17t6RYQFxq88VEzJnydkC1Kf7MizAD1FY4j4sXmi
6/MJuLWHBfRrAoN81+cIZeahqAeHWeA2Os8Fh+eIXzcn+d5cZwEaUvDlTO5Z
4n52XvnuGBZYjv19wT5ohthX5+dc8ZgFRM5+KBAamiaSKBZzGotYgE5+wSSK
PEWYhmzs/j3MAh9NZ394PpggCv1ZjgmYssIefC/YH48QLSncQfm2rHAuLsya
wWiEGK0XemroygqaNxpY9D4PE0KCu6bOXmMF08fa74mx30RkzYGImnes4HFY
MEZLe4hIn7LIta1jhccllO1qnb+IUl7rtql2VmB37Is/4feLmPFyEeabZoX8
bZttsfyfhC3XtWJvSTZQrxPwo7k1SPjr3erdUWWDk/uvF6d/HyCi3WN2EvXZ
YPgmyE5rDBBV5anmVfZswJjRdshyto+QP1P6mzuWDV7/8qSXut9LGMZUMeY+
YYMGJhUqne0ewunDf6rEKzbwfUKtcvZ8DxHP/CXEs4ENmrMJ99FT34j14nlu
vPGPjzLLuLp8IXgGV3WsGNkhdSzuW8pEN6HCQHFqjI8djDN/Gvhf6CbOOLHl
cWqwAwvXB4XK+11EC42ikbsnO+im33D3GOogRlU0vDcC2UGaOb+C62oHQeGg
ExcXwQ5eYnqKC4IdxJ78g/3l6exQkbREiDq2E+k2rhfZv7BDcuM99rqRz0Tp
NZ+U7CF2UCnY3t+57zPRlRtQrTPHDtUMUptJSS0EzTWgK6LlgGvae8YnjjUT
2l2HrfpJHOBykbSStdZIHPC0GnkuxwG+I8e8dvs0ElZbNlfOq3CAROnC9q8f
H4mzcifS6fQ44F9iNbfs/I94FuIzqWbHAWmjLMEFvfWEWjXjatQJDliYYd+7
x7ueqKZ5SfvjDAc8mGHzot6qI37GDJNi/DlgazDaxGxXHSGWccJu4g4H/LLf
SjFOrSHeDG+4QhwHONmlzXfq1RD6u1ICHj3kgAw7/89HflYTTkVfYw5kcQCl
+Df5RaVqIqX+SP0zMgcQTVcnX3zAhALjbMdq7T8e+owjnx8TZYfu/TjyiQPC
ch1ubwWTiZ6vjetbXzjAgvvEZT3zCoJvwkDd8Q8H3NmrYufFUUYksO5O55Lk
BGfNmk6C9I6QtOp87SXPCfm7aqxf55cQhQ/9y6pVOOFHs5XNZf0Sol08v9tv
HyfMpHZkbp4pJtg0ZJmbrTlBOccbn28uJNIv1QtIHucELVf7dzHehYRyhYts
0GlOGNK2XstjLiQsjJ4ayPlxQh1jU0LzsbdEtK3AlYgoTujV3ar8sZRPCKW+
v/k9hhPu8tPT8R/NJ3J/WD9QT+QE22Yl8dK3eUSjZ/ybHxmcgPZ35c8FvSbo
QphG9pVzAr/YXaMTGrnEjaebR5emOSE66XyomXIOYalWel5xkRO2Tgmq1ZZn
E2I1F+Jd1jihOWSII8ksmygfmmxvp+WCjdd3/gqfzyIWZHqP5Itxwd7qd8Oe
Pc+I6veJ54aluSBk+WdLwOVnxP2DlrHCilxgVB4tflXgGaHg9bH1zl4uGKbm
++x1KoNwyXt3yN2SCz6JNEmLsKYTavrnfdNsuWD5ULIGo1casf1ZKabbiQuk
w02CnRqfECl/sloMvbjAraf65p+4VKJTI8Fc/AYXCBQwh/w5+JgwKPMz7Snm
+pcvK9ZzUBLBZqbgxV7OBbUR09veTYlE//eR28bVXEAa1HiQaZdIXNl0aixp
4QL259RJWkEPiLfI/GD8yD+/QXEyT77FE2HtdB6NU1xwQfrXStrFeMLidO2t
nXkuINx5GYu544nxGzr/+W5zQb/7haIpuziC9J/cATN+btgRbqgen40hZm1/
u4aLckNTY9KXbwdjCPJYemSpFDecKpO3Ms++R9gz8tXLqnGD738cm4Eed4k4
C5r91Kbc4KTl2jzFc4dwHqhy0T3CDccnUqVYb98mlPxCbpy34Yb9Hm8Fdm1H
EY2xCzU/TnPDq5DGE1yLtwiKrp9ADuaG7wZvj9FtRxKRE5XPgsO54dBOpfeJ
q5EEI0Ualc5tbmA69Fnk9U4EwaXsUP8uiRtAQLpilCWCkInqOFjwlhs8ZlUU
hUzCiVdpBS99P3BDWOnLfOeB64RKSQyjUiU36Ajn9QsHXie0f5k2v2zmhoT0
rqOxdtcIs321hzNH/+lj/lvp8gwlWo9mFJya+bd+1KbWzIcQ4phnGIf4Ejds
KHqvSzOHEE5Jup2plDzAG+VpHY+DCL8/RTZJIjyg1cBD+n3kMrFAG//+mBQP
XHr5zT8AXyIui5zj51Lggb/m/L/OqVwirpsq9t7fywOlCiqTbkKBxIOsLKfb
VjxQWZVsoSRwgRAoD8fGDjxQOOjDwf80gHjSflKM9hQPNBdyXOmXDyCebwn/
DPf9Vy/ce7vE6DxRapd4JuQ2D4QfULxYt/ccoecXUK8TywNlexSCP57zI2oi
LWVWk3igfibxcHSeL9FUyDJ2MYsHKEVzPg1oniX6mW96+1XyAKKYbP12yYs4
JXmmWamBB5ZSjt+Z6PAkRrQNlKaaeUDhSApMq3kSs25bMx69PHCfFqw9190J
yurA86eXeKDYZtmso9SVuPX1WKf4Bg8YNiw4bam5Ekwz6pqDlLxQ3kz92i/v
DMEjNLvkyM4L/Kd017vyXAjZi+5XrBV4oY6mT/V5xylCWffHsadqvDD+PlTZ
wesUsZvCXnVSixeoh/iOe1GfIgzvmY5e288L+12Ob/aGOhPO2UrWr5144aHe
jOaBtOOEm3eO6ooLL+wiDz0g/3EkzqqJMRt48cJC6K5VBWNHIpjMXvs1kBdu
Ja9kJW7bEw+7F1SpYnlh6sQKv0WqLZGW4sN8KIkXdn+lrJFntiWyTw2PPkrl
hdFjSrV2YTZE0fSXNOWXvFAf7Brp4mdNtNKUMTvU8MLwulez9gUr4kuT+ljW
R17ALH28xRtHif64V7Wzn3nh66Aq9fKto8SkyJOgyO+80Ov8al98jiVBu+fa
WMEiL/QUnghkpz5MsGz8rV1f44VnxVWRGvqHCK4a//QDFHxw8Zy040aIBUE6
5GLTx8IHAScJYV56c0LP7UAdnSwfJFxa9HhhaULsV6xMP6rEB5Ovc1c18g8S
ZvNawU80+ODMI7XZp6wHCfur8uoaiA8KrvbFN/QeIC4mMT89Yc8Hde/f1cw+
2U+EHI8MfunMB8cOzFGp8+0nbkhs2Sy68sFyS1dmQYIhEZc/y3LnPB/I5MYU
8ScZEHkNHcEl0XwQkutuahiCiOK7ZrY7cXywHbuxlplGEOVH69TNHvHBHu9L
Fh4N+kTjQMn4jyw+iNALl02X1iOGlx/ZMmM+eOM5rBMupkNkGmheGKjjAzU3
obsvHLSJkzGtsQVNfBDlV6/EnrKX+C5N++lYDx9YKc3niSpoER3HAvY9WeSD
XxOhizURmsT9p6z2fut8YKORYX15RIOwmHp5ESj5wXLPVeUr5hpE440f+cNs
/BDxLunTrJQ6UVloQVJW4P/3H+61e0WvQoRujentqPGDnL/DDiuTMqFjGuHQ
sZcflPkVxC5wKxElP8sSAg/wQ2RjglWMrgLxil2OtvIUP4hKv5Q4/EWW8Dxe
KxHnwQ9nJVQFqZhlCZkXJwgXP34YXZRN8TKWITKIxMt0ofzw/Nx0ZeVnKeKR
L+Xk4Uf8kHhEPDNLSIKwLntCJ5HOD36Nhx3Zg0kEF6221GI2P/AtflvZSxYn
7j/xc3pUxA+5nvIL+zxECYtxxiCvMn64bn7x5FtTEYJxd07Svmp+WKawXQ7a
LUxENve1/vjMD/p5FbGqkoKEIf/lqcJufgiTiz/7VlqA2HHhYojs44dKn1Cu
tyr8RPC6iYH8BD/kjcD9M/a8hP+u98X+NALg3uxT4rbFSagEHm03ZBaA8iss
RLoWJzFVPT3NwyUACVuqn34HchDu9lKyZeICMKWuNv6bmY2Qzq40vCsrAD3D
ncZf81iIoT8OJ08oC4DQXe3WbHtm4kRUXDLlPgEwenylM7+NgRDqUnzXZSAA
K+ohOfYp9ESP2MeOHBMBcDptvLfaj46wfr/FZGYrAD7nou+XadIQZiPeVxPO
C4DCO55tJzkKwviqVJ7RFQEoqGZj8gje1jfk7f++EiYALEeGBiXeberrHjik
ffyeAEjd9iyXtF3T1xqg9WB9IADWmzd4Myr+6msEViZVPRYA3fNJNY9VVvQV
clQXpV4IAEVZyoO7+xb1ZfXHJb7mC8CQyMCh1u55fckvGZa3S/5x+Rw3yeA5
fSFarjfTNQIQF3Y4wr5tSp/ZbcnzXb8A6D9y7l2KHtJn2Mp75PFbALyS23x7
zv7Up0ly+09wUgB+G1EzbdX162/Wf5UK+/vPryHn5276L/qrTrFWatsCcOmT
z6bpyQ79paWD4UM0gjCZpSClUtSsPy1dNmjMJQjHwwUJmyqy/jj5POuagCA8
c5Nbjld8qz9sraD3WlwQJBdbuy+axOn3R6Y+ZlcWhNOUPMOjVUW4Zfiqdc9B
QXhIX2fYmP4ZN4ZqRUQfFoRHet3CavwduJ7nT6GejSB8H71n22/chclGp9if
uQhCbZRbQP6pb7i0X4A45iUILuOMlzUsenHJxY6ztP6CYJwaq28v2Yfzsg2b
vK4KwuGAXx088YP4pd7GqnCkIMhecpS9yPsTZ3cXy7VGC4LZf64sUz0/8RMa
mZsayYJwpOtQ3HOjIZz8ZKB4OF0QGkhGF4NmhnDi7odDD3MEYSPRQmYl5jeO
caWHjSJBCI4s37X8fhhHb1b55ZcJwkLsnr1/0Qi+lXgl7WS1ICx93EnNrBnB
N5TUWzg/CoLN5HcqTb1RHFY/sV73WRAU6ZpChgpGcbBT5q5L3YLgqqpza0Jk
DF9acrSX7/unlx0XuhYxhv2kW97dGxcEgQu3nBWIcexNjhwm/ggCp+6T4ucJ
49jdWp97flkQqB3D5sN+jWOX6WWDrE1BsKW12RxSmMDOkW/8baiFwN3czZPy
3AR2FPF4Ss8kBDcvBt6gfzOBbUvEW8s4hOBS4radxPgEtrLo2fThFwKDQKWq
INFJfHg4TlFMTAjiqPKddQ9P4hbF4W4naSHQfLxCUXR5Eptf2BuWqiAEOWXK
an5pk7ipPFruu5oQPBHaZr1fNYlNqAbbBfYKwVoc07Tq4CT+z1Q92E5fCJJW
ui3Pr03iA/GRUg/3C8FfuehNP84pXN/zraXbVAia3xbNGMlOYUOS4iVuSyFw
rmh0Y9OewtUeYeJWtkKAeopnRoynMCroaIxzEoILCoqOI1ZTuHJFOqDNRQgU
o7bbZJymsB5xRZjNSwjyOQ42VrlMYe3PYn53A4Xg2uytIWfPKbzHqaGa4YYQ
VPm0ZgS5TuGSLAHvg7eFoGL+5oDiySmsMeXDfeu+EHxbPKmH7abwW40qcn2i
EJxglF8wODyFVYK53KlThUBL2/D5Z8MpnFfjxm74TAhKLXkvXdgzhRUZy0qv
vxD6dz5Orx74188rSxaXqnwheLkUAXa8U1g++STzdrEQbBQ//1VKNYWf/ygq
0SsXAgfNH/Mhs5NYRo7OOaRaCN7M6bAW9kxiyfd5b1dbhCA7U+5m4ctJnLG1
47C3SwhK5kQ6U+9PYvEDx6gv9QrBi4xkDq0Lk1ike81mcUQIGIXbYoq1J3GK
8KEd9WkhsH/I41wkOIkFz2S89F8Q+vee85kkr01gvgXjjZltIRB532lq8X4C
c3AkZozzCwNVoGFftvQEprZQmRowFYZWtprPVwfH8I0H4YkilsIw81L6umrx
GKbo69Y/bisM87my4b5RY3jTKySux0UYRj8HZ+erjOGVqMY9XSHCILGd4Msc
NIon61yuN+YLg5GIwsgk1QgWj+/xvl8iDGdEw2Nj24axtfNhG+sKYZCn3Zsl
8WQYV67qKPxsFIagX3MKMnuGcYIyZ/ff38LQsv/cM+TxG+97VCUnJyQCEr4H
1VvafmF/1z1cMyQReLYaPZOQ9gs/V3+9WSQnAjSp51RjfH5hjpaHHcQeETCR
9qGVZ/iFhyn8QmwtRUDJne2LgdFPfM9bpO3mLRHYJWcw8+fBAK7Zm1BmHiMC
t/eo1StpD+AVGoZszkQR+PtUwYR7oB+ferp4Je2ZCLTGrtGPyffj3d1Nku/I
IuBZl+cz3PgdD+gHXRpeEIFgFXOTZMUerML5VXT/SVHYfNY4OX+9C4/GjN5I
chOFDfbKCXWDLpzG9HdszEcU/BgOXOOn6sIsNAJF966IQnLIz70dNzvx5IqD
8dd4URAb7AqYSezAOf0Dfl71ovDTKu2hSWYbdnKY7apoEgV2mdawL1ptmOfr
tjZbhyh01TozJrW04htt4tTFA6IgTx1yMHvjMz5Ve/rR5so/rvo8oNmjBYu8
HKmK3SUGMg82JT0ufcLd0ivSQ6picNX26GU50U/47jO66N1aYkAVMR2zWt+I
11PkrHsNxSAhz3C+jr8R98R4jUs6iYH4fzHZVZ/+ww8uzHC8vy8GDW8JiYMn
6rHZ3FYgQ5IYoEf1tyl46jGVL1ufY+o//ZvvYznNddjfXTVn54UYpATecXyt
X4cPO5zXMa0RA98jj9ZPKdViJrR8un9RDIKiWEmhGtX4ioE8w/t1Mfj16abW
yO8qPLr/+JtYSnEYD7jj/sK1Ctea1KwbsovD3wfa55J8KnGwVcyDXAVxmIlU
Gbl2n4zHrat1ItTFITRsRiNMmIxt7RZ/OGmLgwZf/EPZVxVYw8lBicNYHPxJ
VytPtZTjKTeZhkunxUH2sXfypFQZdvS097H0FIfvz7MccnEpbvS+y6lwThxO
DrUFTtiX4uxz8ycGQsXBeTFK7vuDD9gpCK/sTxYHfn7PlytC73HLPRt5zjZx
eOhzvJ/Ruxjrxt5unfwiDp99GmVzBYvxy/iKi/X94mC2uul+vakIRz6UqLk8
KQ6JN6uWGlSLsFj7itIfKhIIqHNP6jAUYpujHBROdCSYvftGW6bmLb7Xuaur
kZEEXMtHVuRC3uL1bqegTA4S4LC4lMbhAvy1t7bBRowEK54v3dO+52PW4/3J
tRIkiJfSmOY7kY+N+pd9VGVI8GcLV0b8ysNFg/JcjEokuDdbJSg89xrf/33f
maxDAgWTpNFrUq/wwRnHv5I2JBCrprI+OfAcp/NEdF2zJ0FELatL/tXneGnf
64L+4yQIcfjOGST+HGdEb3g8dCFByUyB2wWPHLwu96SH0Z8Etdm6PM4M2djy
SH2J+wUSTNyNmaAqycLPL03H1V0iQVsCDbFxKgsfa9AzvXqVBE6F0QmdlZk4
z2WgbC6aBE88RUoT7zzDVNG0Dw/dJ0ELKP88hJ5h+0LlgFfxJEh0N43cvZKB
aSnCFFyTScAm9snjikcGdk4TS/2WQwIJa4vJmjfpmKPnZGhlNQmceX5wq3am
YPedKHvhehL42QamOJ9MwWTZt7uvfCRBwWHv0x6zj7FXIMWMeisJzK87b4xx
Psa1XM9O5PSRYDJcf+6X7yMsoPtJh+oHCXQHGK35GR9hv9PzvCeHSFCFNHn/
5DzEwm8NWgUmSGB0Lorh7HASvnhoiLi3QoL9e1vlZi4k4qaLTMITayTYeJhq
dEs4EZOeaPw9sEUCX7FUHFf/AH+evFGwQy0BwnrGw0NCD7DsbSnSBU4JSFyL
uvDzWzzuqXWldFSSgNet9FHmorF4zuC70FVVCfiYE9TwMv0+pq85sjtDQwLg
2dzgmsR9rFWl6zGqLQE0ROReR5UYnFjB8TnggAQclzukYX7iLs7TvTWaZCIB
lmprEDYTjevKNnZKzSUgpOjE+Nlr0Xjhw6jGzlEJOMXFVOzy8g4+UkJOvuss
Ac5y/cpbrLexu6ZG0ZvTEnCtfeCww+soHFb0ornDVQJmmtJqCLMonPc2YZvf
RwJ8h8bF7t+7hZnyPV2zL0tAxs/CkXTJm/i/HB41HCcBNz377Ftib+BB6WjT
nw8kYM8fFRm5/TfwctaOC/UjCUjJe3Lm/d9wLJ05mWSaJgHDfzxjTrqG4xvp
1RtfciWANePNmxPm13GKqBbvWp4EEInxuf3013Hhk9cqIm8lICrVY74n+hr+
mfLwtMt7CahPDZ0/HhWGiUdnP87WSkDv3186scmh2JZv6CfnfxIQPxjX+kEi
FPsm2a3v/iQBhc6ib2vzQvCTB4bKIW0ScHJ3RPfpxmC8HivwgL5fAmoUJXY2
eYLwu9v1zqRlCUg7qLDxYSsQvzRrFohalYAlI7F1wZRAnMLS2TmzIQE57/R8
9mgH4utxP4wrqCTBM9SMIyToIrZIXlex5ZAE8V1Oa1fYL2DkSDlB5pYElVJW
GCgNwBoiDFlS/JIg9nvX19ozAZg/g5d/XlQSPtRwbP3F5/HQC7Wdu4qSkN16
380xwh9/8dpbtqAiCd9Svz0Q0PbHjYrEBQcNSVBe8nt1qP8czi8wH5PVkYTX
F+2zdMh++MoH97YaY0nYF/ZwX+7js5jt45Onf09LwoY7Fuqt8cSUd7IcnN0k
4cEJPY7Tlp54yewVd4OnJDwMKLQf++mBe1s/RCWc++d/2Yy2hd4DZ3/tPKd8
VRIS2xrrGM+64UfJvbsSr0vCUUrGfY8Y3XC048/f6xGS8DG0f/7nS1d8bnDG
rjFaEhqnBLKip89g3VEGOJMsCb+uhdZ4Rrlg5Zfs659SJWFAv2yFQcMFk7z5
StSeSsJ5E6fXioOnMe2slPx2jiSUvGNeGNA9jduXCY7HxZIgZfm9yoD2FHan
DfzZ2ioJIb/S3gUVHsdC4p++bXRIwhit2YM8neO4VVu0Tf6LJBxWebJ7oM4R
a51twDf6/u3nSnUB36ADpuviTdUalwT7kSOmTLvscfm0V8KZKUnYuRDDZVZt
h/3oKu/EzUqCFdm6ycTBDn/Vcb8yuSQJum+dZ9zibHFOxnubdEop+BR5v9aB
ywbblzMdaqaRgls7KZNN760xS7ez0Sq9FGROr+A6J2t8kZ5e04pNCmS12Do1
8o9hIz87DjphKWhP/GDqcNIKD+9bbfLdLQVdrubi+dSWONnGojZlrxSQLNzP
p4QcwRbnMso+6kpBaAfvFc2Fw7gk0+SlhIEUBO1jvmkyeghHMj6++eWQFLz+
/J1hcdwca0vNhFIdlYIJL17xGT9zPK1ncFHVWgoeH/jIu7xihq39J1zuOEpB
9YWzG8ysZlj6mw7oe0iBvYxDs7elCe6Zi9nr7S0FFF86aMZHDuJ7TEMqj3yl
IIeuxlb96kG8pB8tOn9BCpRt331nLDTG9dnf17OvSwF6T2VPo3wAnwkIeceS
IgVSewIPcfgbYi2NwXe70qTg6LFg1XiSIWZagPfGGVLw5LGPmWunAX57nu7D
9edSoM6QQprSMcCb/vGlS0VSkORuNjHCD7hNbamU870UsISucDdkI5w5Z1um
UiYFnnNx3OwiCJv6i5R7VklBS2XzAz9OAj8896Kiv/lfv7cJaRs+PeylykRe
a5WCirBLtS1P9mG9P2fJfJ1S4M4hm2Iusw//9tPAlj1S4PPgxpKeni5W88OV
9cNS0MAT/Zs+XBt/OttVk7clBaycUb6XT+7BT5S0aj9RSIPkBs2b11R7sP90
cu0otTTYM+9a9n2xG/Odda4jMUnDAtct9xvLmtjFZ6I+kU8arGgTT+tkaeA9
ihYNhYLS0EQjmK5opYEZpt40tIpIAyEuoRJMpYELvC/+xyAlDUns7Ud4PdT/
5fmdj6Gq0kAv8e3vC6SG23a5ND7WkIabC+5UNfOqOHOivvH9HmnoSpeKe+Cu
ik29oj/N7ZOGM/WLXbvtVPBDT95mVxNpiOmeEbA7poRVPRRbLU5Lw/T+XjHe
Ank86CV+Lt9VGoJfqDTI6srje2e5Odg8paHalFHF6aMcnji/cbTNTxqKHxv/
ZBqXxVmhzV+OhkrDEr9Djq+BDKa4UczPHSENZWTml7FB0vhEVKpD9x1psGMT
3l4qlcL8CT4Dto+kQejsL+ZwC0l88dExcYF0aVBF50x3ZUjgjif7TvdmS8Oi
YRmZf52E775gHjleJA39P0zP1l8Txzvk19OnPkuDqVZ8baGQMHaqfaAi2S0N
t2OUR9KEhHDZxxD/39+lQd3uisiIlCC+0Gm+5DYuDegt7lE+yo/bv2lqyf2R
hs8uC2F3L/Jh5QHhK+PL0jDu/vPA5lNePDY2teFNLQNBZePPZ1l5sNFMl74S
kwzETbyJHTrCjZ8tVFyb4ZABM6t99K3JXPj41l1qfzEZ+Llz6cBdghO3cSkx
B+rIQMTuor2az1nxm49vPtYiGeCf+So6ms6C74eqR3IYy0CunId9TgYzthjV
2nptJQPl1KVnOCoZMbOl3qWDJ2UgOVEqRHSTHjeVGfwZ8pEBkTDkkGZPh+9I
HfQMuyIDo4sB5JsdNNgkxuKX4E0ZULST3Jx1pcYNp+y6LNNlIHPXmW2jbgoc
2eRkMf1KBpSHjBP+OuyQDXe7NER9kAHNuFN2UZpbZMp0D0KqXgYKg5qf39TY
IFfT+36obJeBjP2502et18jXzgeoOQ7IAMNOfPrQw79kou9y7vKEDPhyLLqV
/F0mV7y5kapELQuzF6mknFgWyWNSnx9+5ZAFb0I0wuvZPJn7MX/CdTFZUHht
qLL/6BwZsbnEKCjJwnb4ecFRzVmyT0Te7W4dWfh+eKL78OIU+dHqSkTYQVk4
2dn+/tTABLnO1+CavI0szHeLpq/PjpGF7b8GhvrLQiXTt2+nrg6TLxj6nG2/
KwvCR6fPVdz5RW5Wojgj/UIWJPTN807QDJKl+JMcrtTKwm6P5671b3rJIZQK
li0DsvDidHS1+eoXcovI7tiMVVn4Mxqlz9bTSRbTJlovcssBxy4K4wn5drL/
MRNWUxU5aCB+VW6+aybX+llZiJrKQZkGta1pzUeye457U0OYHExr/N4XFVBD
ZuoPNvErkQOm3VXZJ5+UkbUu57LGfpADlY4JH065MvJprp7OgnI5CDrG/bin
uJRcarLnxHy1HLgOTxSHd30gu7/7c/7iZzl4+gANGCi8J9fcd00NHpWD1Pik
GU6VYvIVg8OztwTkYYqqg7btXR45uz+0+IWwPLC/v+hUo55Hbrv8+kqjmDys
Xk//yPb2NVn2DQM1k4w83D7BZR1X/IrcJVTHH6MuD0+nXw+zfXlJVlnaa/DA
TB6ow9yOxwflkEeeSyQ+DZUHobn2F89YM8jTkb/WqK/LQ9+PLbrE4KfkBZdn
Jz0j5OGtl6U99UA6mUJcQlE9Wh58tsRvULxOIws9ItXWPpKHfFUd9R6vVLJl
lPjcSJE8xEKU44b7IzLZQ9RCaUIeRK2cRcqY48mJ8oI0ZTa74OULyrgbLDfI
cSnuH0+TFOA6sy/toT43smPiiVaWMQUo6ud4bvvVjLxqlLP2tFIRHkaM6Spe
USb/HjG8UhulBAUVRj7ZAZzkTH114c+nlSE8czcXn+dCRf7NQE4PZRXg15kw
CpjqroiyOWNOvawCE/UfbQ5Ql1bs6X+WG/VZFbwVNrheHk2uSN6Vmv/ZXA2O
JZHollyDK65VxySbl6lBx2hptMxv+4pDwjY5TdLqQJsSrCLKtrfCwO/jcc47
6nDV6cRNUy2+iqciLtIty+qQ0urucX1jrly67sXDw8c1wHyYO7qb+WN5nHKt
QmelBoxbJX/Rsb1d7r5I0/FJQRNOL3RuMU5F6roULpDuxGrC069s66dzQnXP
3ji2aRavCdYuHeYR1qG6gcdKvrE80ITLQn+Mf1CH6t5eDrwf91ATyiX7aE6d
CdF9o7O28ShNE9yvpW9JygbrrtXsfH3+WhPkqnLbuiov68Z1ssTUf9SEkdEk
s8BjF3RTsnw9b33SBNMLF3NKOC/oZl1s3W/SrAkJuVfd49oDdN/zxa03t2qC
8c+WPHHLAN1+R27Pri+awJ3KZPrK9ryu3G/B/UO/NUFP9hKXIvU5XbWSYLHs
EU2QMeoNDH7gp6t7s2/NbUwTQvrrTGll/HQt5NLeTkxqwpmOgIRP5r66AT4k
sfl5TUje/9+HmRc+uqF64WtFi5rwJYPPa93AR/cm61D3xWVNSOFqntAe8NZN
Lsi6u7qqCVvgzXeA31s38zqNR/m6Juxk619hf++l+/qom2Hopib0XJjlo7X1
0i2R/E+U2NaEV+k35KX/eupWLsqu7exoQpt4xhfvx566/wM1eal6
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Line[CompressedData["
1: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
lhKrRKePJ09wwgsGwhJ/nRke0kPn2jbNCefUXr77Z2ONG15sitpd2NNXT5b8
YHkR/31H653nzt59n7rT0CldxgnvZAxO8XGBqvqumEf8Nfzv2TGn28Jc8P5L
3MMsEX+8/ld2xGsJLvjpKyQ0lX0dt2LkbZFW4YKPX9U+xHgF4tIPe8cuHOaC
y2dVucvxIHxZPp46XZcLzBI0UlJ3b+JJhjRHqE9ywRhuTKNlGYLbjZAdtU24
YOKVsGW9eyiu4HXzjo8lF3Tc3TI10ArD2xIXG79f5AL6wXfPMMXb+H3Cs5+8
blxQf+osbdmj27jT88uUxl5cMJ+FCf+jv4NT9P+A+iAuiPfz8W9tv4NH/MHz
gm5zgQ3/x7wF+XCckeIRlVYMFxT412SVRoTjCbw3L60mcAGXd1mC7FA4zql4
vqUmnQuUK2ejHkpF4A+OaEj5ZXHBLR7+UDXPCFzImidKrYAL4pIZ7AkVEXiu
99LkfAkX/Bkop0idjsClonuPV1RywT+tYfXX4pH400cVxZ6vuID1olhT/ZlI
XKk6nlEB5wKvlfu+nbcj8RftHu5TLVzQLlq9j/NpJK7582RHcQcX/OISvviq
KxKvX5VRcO3jAl9n7yMTM5G4HitdvNTnvbzxHBnN9FH4O8nx2bHvXBBhMG8e
KBKFn9JpMs6f5IJCE8NgBdUovNsst8JhlgvStP0PUkEUbuEWwi66zAWvuyNf
iZyOwodCbH1GNriAr0Hw4mPzKNw2Xbsvk5IbSKY0la/PRuE/SvnVrRm4oSBh
8WTQuSjcuWkllZ+NG6y+7d9lsozCp4YGlgd5uME7aqTrrkkU7jVXZZkutIeX
LCf5j0fhi7TJLy0kuOG191p5v04UfkPoKh+nPDfQ8wg2DylG4VtqRgE9KtxQ
+fgGhYFwFB528sDnBA1uWDxcHXaQKQqndWDUNsK4gdu8J69pORK/e/3XQ2YD
bpjy+o+BaSQSZ41/u/n+NDc4J3IUSjZH4qkFBbYx5tzwqqe78kBRJM5fd5t0
7Dw30Laa12vERuJZPfYitA7ccCX4fLHD5Uj8yfb+H7c9ueHMeN5FZ8lIXJ57
A8CPG5YZP1R77kbgFfJDeTtB3CAi8mpjeigCf30u7dLNGG5IeXmxICs6Atf1
8m3RSuSGD7lL5Su2EXhjhKnUWjo30KytUvCqRuDtz1l++RVww+Dor8TZj+H4
MHOkuxfODXymMzk/ucJxB/FLHQpvuWHIMEH39M87+ISmnsJ0Bzc0Knk83Cm/
g/913p51/cwNjLZPPG4a3MEpG/x9Li5zg0diYL+e121c2s8l4Iw8D4RffGcQ
4xiKK2p/t8hR4YFNzEno8XoIfpDCSnnqMA8UX/mS9SYpBNePOzkZeoQH7CuV
ehnJt3C7QoUzpbY80KP3mhgiHIzfH1hUpkrkgeMyPFNLUwH4o4cezEbpPEBt
l/b3W1QAXugwPvkgkwfGS+RwR4kAvGrm4yPFYh6ojBZ3NrG7gXfT1DKfb+SB
mKmh787D/jjtodBfFUs8kLFepft92xdn2Vxt2ljngdtdeSpfH/vinI3e2QYU
vBDX+bKz1tgXJxg5Wn5l4QXLs4GrsgU+uK6zQTOdNC8cVoe/jOe8cb905pwL
VryAlP2rlIc88Js2EUHFdrxA/rO8zXHMA78jtm255MQLDHIcf37UuONJ5X9Z
Yn144f7q30NHMy/jZW97g6rv8oJHSg8vxy1XfPzfg7PMJF54xahqkZ15Cc/X
U7820swLd4urfBRELuH28d2JFe28gH0Xs/yR74h/kaR9bzHEC68PGd58WnUR
77Xw1cla4oU7Quw0zwbt8YScfVZeG7xg0BCbdGzbDjecLvYDSj74ETZv/EvG
Dm+78718nJUP8v4JLwvG2uL4c0OCojwffLWj1FAPOo8Hb//S3VXhgx0s4egq
2QrXOhl+vleDD+LiRnh9Ga3w6h+1Kf4GfLB5TzXToegs/pRNhhZ34IPxH98r
pvedwd1smsSSXPlA0c3QQtXbApcquoA5evFB06hG4cBHczwXS7tBF8wHiVqZ
mXSlZvgDT8op4wd8oCc2yFW+aoyfqc2iE8vm29uX/6gkzxnhnLSaEkuFfEDt
+Xk5YNYQT8jysn1QxQdmf43zVjdO4REdX7u/d/GBvELiJ1Xr47g+343p5wN8
YPvqoOmL0GP4riMnQ8RXPlACnjt3nhrgQRsn9GT/8MGRvdW+ku0o7i338oU3
DT90PpWcHuPRw5X8zXr0mflhv9NVxsuXAJ9umJnh5uSH23Lt8wIeCHexkpCu
Fd2rv+l0u7ZbF78QnZRBqcMPjJGVfmXbGrhg/4Gafj1+2CVMzPF8O4wPibT2
Pj7BD/OfMn393h3Cz7zcZjp1lh8ShzwLrj1Tx09NuN9K8eGH3pR6vcRnyvix
WxJlRwP4wU1qOjL0ryKuzzP8ZSWEH65olDeE6ijg2gZGmjZx/FBGFSmQtymL
Hx6hdd2Xyg9fjMU7dL1kcDV/PJ38Hz+kG+dmjcxI4fKPlZckivghecWGQnGf
BC5N/C02WM4PB6mmvts+E8PFP+aaxlTzQ6YH5c00awIuSMv5bKaRH0Irq58Y
PdmPMzsvu9UM84Pfk/NOL4M5cYbtsgeuY/xwBlXoxDmy4zTpzu8EpvghRozh
58MaFnyrZVAiZJUfWt24eBooafE120RzlR1+ILXwn6+1ocSXl4/fHqURgP+C
QmKvPNskzUjWfjvGKQBKl694q+EzpN/1PvvW+QVA5by7mO2BH6TxM/K6paIC
8PqYpr7PiQbScETmf2yKAqDTzhwaQx4ldo7fOjN0XAAmqHupNx9sE9uCD4ff
Nd7Tu7Xa0cBBibVwzz3XtRSAdt4gjQaMGqs/6sCW5ygAgXXNmoxm9NjrYX7M
4vIeP98qdV+DEav2671C6y0AjB1UCxP0zFhZoX775VsCsHLom+ZBN1asWHdz
bX+EAFCq3AyxW2fDCgdeyHTfFYCuoI48szfsWBaNVKRahgA8EZw9+WU/J5aR
NfJiPFsAxG0UZU7jnFjawfuj9x8LwOGP8Te/nePC4p3oYbNKAJwVNZt9fbix
u1tkr/JaAbAXenF7aYEbi0oLeGTfIADL19ct77vzYHcUVDs5WgXARJc8+eAr
DxbS8mejuUsArrtMpKsb8GJBtvly1wcEQGCzIqKgiBe7vmxtJftVAFIv7j4g
UPNhXpKdNXG/BWBJT6pU9Akf5l4fMY7NCYDiwuyVfX/5MJczRK6FfwKQZ5D9
/bsyP+Y480+vYGvvfnRN6+89+DG7iGfeltSCoJm+mrCdx49ZC7nm0DMJQsYN
xTOlffzY2WrR7lp2QZiT+TZGtcOPmRsObXnwCUJX2skmNUkBzHg86YCIiCCc
Gy696GYggHUeGB+wlRQEymazYWYHAez0NY2QTHlB6D6n8q3wugDWXndX5ouK
IAQZy/ZbxgpgJ6i+9fBrCMJGH4MTZAhg706qBp0jCgJPYlBgZIEAZpAcIXH/
iCBsqv/CDEoFsJahT50DJwXhpeEFqZwKAUyfcOA6l6kghBK8J59XCmANriGi
5mcF4ZgvV3TmMwEMVfS2JdkKwvAvX+vAEgEMX5H0/eAoCHFTLTRueQKYLhaw
n/WyIFzo5Q8Jvy+A1UV2tBheFQRGeQLPrxgBTLNLxOuevyDIrCz6lAcIYC+5
ffnabwoCR013xryzAHbI9m0Dwx1BuMrTM/PeVACrLuB3Px4jCMnyRWrmWgKY
2rQHV1SCIJRQHUvNExXAKtXI9S1pgpAVFpv9gVoAUwridKHO3Oun1bDR0gQ/
VtbozKafJwjTvAN0Eu/4sQOMta/DigThDEfbI79Cfkw2w55554UgLF2Xm++1
4ceefK+q1q0ThBAFunS6Q/yYlAyd3c0GQdgqIM89Y+HHxF+WVa517mEnuo9P
XvFhQgPrlksTguA8lNZ5YIcXe7jfaFd1RhDe3SvBNjp5MYFLucXei4JQ9aa0
u/UhL8a7eGxzdkcQcnYq5B+p82Ls7Gm5v/n2g4p+BHuzDQ9Gbag0PXJyP4S6
oSrdZC5sqtkxrK18P/jp0PL1VbJhoslD7gnV+4Fyf0sctSobdsbO2PLMm/0w
G194pO45K4avacn/aNsP/425d09V78NSFDkGVsf2Q0fn396cZmZM5wFZRkZQ
COrC/dy/MTFg3k6HOGcJQkDFmSBjlEGPPVEt3aqSEdr7//cc6ZOmx9g77/di
h4RgrcL+kOZxOmycwuvmWVMhoOFobfiTToPFuQt9iIwSgvx7K/4DnpRYo0ZK
7el4ITjRqpERxEqJrdAwFHKkCcHXBRYN10oKzCFnKeBRnhDce3/ysOL8LvHg
QLt4Tb0QbD3InX6quE28nAf7bjYLwSb3GJdP+BYx2+vlKrQLwW2hrO8tXzeJ
DIz5nZ2fhOCR0ktutrQN4ggx8Pr4ohDIbjUELoivETmZ5xyerguB0sxg0lTc
KvHEkNNpbwph2KW+43dhfYVY5WtK2NonDDVvDOjyP/8jRhXJtHPJCUNOS0DP
wVdLRCWOQeEj9sIgzWfp19EyR5yMn7yT7iwM9w+8LSle/Et8xLT665fHHr7u
l2wi+ZfIQsNfFRcgDEJj2lwDKTPEqZXzxwaTheFnWPtKYeYfYv4191LZDGEo
vebRRpr8TTw/H8R+M1sYBP+M/zI99JvY9ifzi2ipMJyVlP5ZPzxJfDw84nW5
RRhi8rc7YyzGibbn//a/aReG4uSZdLPaMSL34I4ma68wmJgcPqYnPka880GU
+sWIMMxeLdb22P5JdGi6+GBrRRicHdREIyu+E/mR75bxtjD8dX+colH6jfjh
zZ2LedQisHyjKT+xbISI1RQcOMYuAiZhzVoj5K9EoeIJcqKcCFikBDU8lR4i
DkiuSI4qi0DbqR/ax4w+Ee/l0d09eFgEqH9vVo4GDBI3Hsqc+awvAh6mryW6
vw0Qh+Iv/xa3FYEumnXRI2O9xCSmICN/RxGYyVZ6XqvcSzwefbeq1U0EDIKK
3qaG9RBfhpUGX/EXgV96XT8M7bqJqddm2V8miMASoWbZ7+Z74qn5bX+G9L28
580Sb59tI1J5sn61zhQBpbfB4YparURvF+XHu0V7eT7eEBzkfks0Pu+jdbJR
BFKoNXNzxRqJdIO3szNbRYDhHIva8KEGIsk8hfpvlwgIUX54eToPJyoYvuhK
+SIC1w5R9zWrvSEyoX8Xh5dEYJ9rOxvb72pigJ4sw8sNERDEhscaLF4QJ4/Y
PEukFIXF0e24mM7nxKYTjRv6bKLw5sUnN/u2cqLK6eVcIV5RcNr9wbNBU0rM
NpI5viIkCn9T/LpunC8mBpnHp5bIiwLFSoP+9PEC4u8zDVrhqqIQw4O3dv3I
JZ49t/TdVlMUzD1E3n0WeURUsz2vwH5MFJqKngYUnEsjTjtLvb1+URQ+v7u4
yPLQl2jtZuVh6iYKy3anE6vCzIht7vc45K+KQodL1IDwfUdS4dWFCyPBovDI
yyl59/ZtEqevJM2rcFF4YJidbx8XTQrzO/c06a4oLPmM/Qk4G0+yDSStHMkQ
BZv6Oy8M+NNI7Tfns4RzRIHS0apgIu8+STNE4sjqY1GYua/zp5j1PxJ3eGzi
0xei8I5iaacm7RHpTmT9oYg6USDxPiyPqMghzUfPfb3QKAr6im56MJRL6oyz
lOX4sOc3POU+/yKfpJ0Y0z31URQKfn/wG0wsIBUnv/FrGRaFTyNUVdoOhaSI
+2KNN6ZEgf9mz2Lv98ekxYwzrmYLosBxLpD0NPEJySEzet+BNVEI6KM/Y3So
iCTSs6IwR0WA6vHkv7KXikmWZuwUtnQEuFanfGFjupgU1yfX38ZIgOwTb268
8yghNVsceXJoHwFOv4nz+ThaQtoYsA3MZyfA7We2s55mT0mqZ68bsnETQPLu
K6qPr56S3D4ligbzEcCg6NoRY95SUo5VyeJvQQJsn5Vr3O9ZShr83PTWUoQA
K9OlnCH1paR9NsMZTWIESJy7c76apox0dPifh7IUAX69cDy+ZVBGunmBDWXJ
EkD+VoFESlgZqeqbLCejAgHiI172VFaXkf7Y60/4KxMAE8noTR4tIxF+2rwe
VSOAmgVm4slUTjrn6H/P5DAB5o9TiwQplJMSxhLs6rUIQO5hap49UU5661Ss
KkckQPl/+YFb9uWkrYlGmvuwh02yND/7lJPUXb9+ojpKgEKU96ompJzk/nv5
6dXjBCidDPFriionDU3JmJ00JoDQUYNHsrHlpOOz1qvilgQgCOaN3QgqJ2Vz
h/eHWhHghfZMprtnOWlZp7Ri2IYAwnW/Gepsy0mnLvXf07InwPhh+7C4vTy5
dzdd7zsSgCcj1ZpetZy08lzi6JIzAU7Jflgx5i0nGX0+TTC9TIDWgR/kqLUy
UiGF31bZFQK8NU1V6f1URtqQyRpi9CZAwjf+IZO9/piatFS7XNvLH33FTiKh
jPTk+kxS83UCjMYVx3g4l5Es3uqevHWLAFfcMmIGWMpIT2ecpL6EESCJLy5X
ZaSURMEdT6kRQQDKc8f+3CgtJZU5jtTO3yVA5IXTWYf0S0lUd2nvGyUQ4EFt
++cfTKUkq+eKvk+TCdDjErTyo/cpiZYiRN4pgwBLrL+V9WyekuweiWR+ekyA
e9ZiwdR2JST2IftgvIEAl31Lb1/dm0+X3Wir/S0EEDS6WuEx+4RUL115MKCV
AF9nSllXCp+QLvtTzKp2E8Dk4xX9Oc4npCbOvAuPvxKAn7Dwbma6kORnNIrF
rRBg5OENPZusfNJQkxOltYIYKEplGE64ZZHm9b4I3lIWg4NEH4LcbCaJvtHk
YK6aGFxyMLK54ZtJOkzWdp3UFIOod3eungh7SEp7w97layAGH4epVfVKMkgm
1fUZ9+zEIILPzOuNejrJRV2t6tlFMbBq9Yd77WmkkKqijl4nMagQLZd96JhG
KqtM2eHzEANr+s8rgfdTSUzlbk6FN8Qg8vTw4rl9KaR3j7lVSElicOfttVsX
ryaQvknePfkjVQz8CRf/Hn0bT/pXsOtI/UAM7o13uTwWjidJ5k+ln3wkBtXO
JsH9H++R7mQ3bH4sEYPZ758oUi/Fkh4KH+ZZLxMDJgEZPrauGNLzrFIloUox
2NdBUp7TjCH9eHj/ouNLMdCsCUvp4IsmYQ+utP5tEoNTxS5GIQsRpLO8oz84
3olBf39oe6FnBMkz/dzGwfdiIKm+LsoyE07KStVXvPlBDLpffouJnbtD2kjk
T6UfFgNPk9aqCvbbpJqYFjvCPzFIvcbJ+s3zJqn4VAd/9JoYJPN/457PCCI9
ZOnrm90UA7XU3behbYGksKTvx95QiQPO8cxn+GAAyTBjQ+ksuziwb3zzmQR/
ErKm/FPPJQ7/2TB+1EvwI6kJMRRI8O3x3YYP8r9fI/Hl8vAtCIuD6rrxlEaC
L2m0SGX33gFx4BacFN4n4E36eFmjdlFJHOLQ8bsjjFdJbQewa+fVxIEzvlKu
/rcnqbzi9C9pLXHwGa14YvnGgxTwyuVD4zFxGKuxsW6vdCV5BHrGyp4Sh5hu
Ew5N3IVkp+N3JNFIHBwi+Wi/9DqTjpBvv7I9Iw4aEvH1p5idSKytWTmrF8Uh
o6mharjZgUQZW3DezlkcchQHTXt27UnLp55yvXUTh7rzUopZd+xIn7tfRadc
FYdm7Lv9nSIbUmcSrrfuKw7dprLfDp20JuHmbzftr4uDYZVJXs+yFalwsO+q
4i1x0Dl48tSy21nSg4zPcmlh4nv7KWWjoKol6a71j7GNcHHQ+2qRd4nqDOnq
t9lzbXfFwXShlzGbbEbSnmSASxniwLjvIC+g0yTFYraN95ni8C6043XYuZMk
gjtvtUqOODDbH7SSDz1Oov0rIbvzWByELDXkL24eIa1VyI86lYiDZ8hwsYGJ
PmnKRzWro0wc3PSa6/WeA6nnH8b+3wtxSH13qTtAV4fU/MqgffelOLS9OPFa
w0yT9DLQMMKlThxGvG2OloQeImVun19TbxQHFvFHc3oyKiQXWv8f3d3i8DGN
Pvb6UUGSoOj7T5u94iDLGKCiKcJJ6tYU/iD7URwUm3679IXTkA5feUu683XP
P6Gs8lfIou5UpEBNxTdxuBXzparTlJ6YneNZNvxTHGiTTXkHPDmJdP08mYd/
i4P5G98+q0OixLqZyymXpvfm71N/94lH4kQvOjw26a84fHL/Xu16W4o4qOUS
MLUsDoHODJj8gjzxrkXdVb41cXhPQ2t+NESRiHmyuh7dFIemOzDYNadMfJz7
0jKbUgJC2hqsgvXUiFZ1TEYdNBLg7ebtu2muTmQZsDu6Ri8BjVqKsmxWB4l+
9PTq5qwSINQlowXYYaKsmI18KIcEnL3j8nxXVIM4rF0hVsYtAepLVfQZKxrE
o17n2On2S4BKwcyB6HAt4lp0Kb26iASst18z8NPWJpbl7e7Yi0kAuTl62OWX
NtHhjcVKnKQE8E/GRj25q0Pk/lg0WysjAR7YtWuBkrrEtr+b45PyEhA9w+4r
WaNLDGYwHeZSkoBzJwyWp3SJxHGdtXbPgxJAIcyQ1quGETMsDZseakhA3tWj
0z55GNHwam5tq7YEtHYz6ysxICJF7HLlMlECXgUvBh5xRcTq/BPFYnoSMDfn
ojqLI6LQ4Pz9m8clQHrIXfWaAhAjGP+L/GgkAbGmZ/nmPIB4xvuPY6y1BKiZ
BS6R3gJR8pMWEF0lIDH2oKL2EhBbCr9sFIZJwIJvus7odyBe8r1Zw/JQAlh2
HinrWQORaRFeHsuVgOBgK5PtA0Cs9KF7FfZEAtw+pQllLSLilnfy6+UqCRDN
r3COZ0fE/PmztUq1EjBj8XnaJh0jnvQWqnMjS0CH38asGTdGvH+16M1whwT8
WuCwMqAmEnXnrtTz9klARoWBr5+fLnHMS41kOiQBV7baxJVHdYgqXiS8ZVwC
CKEDdMY12sT3V/oby7YlgHW/tG3dMU1ilsLhpvcUknCiOil0elWD6D2T0TRJ
LQnuAhxMTCUaRN4rds0EJkmYjX3fqMGsQXT0+NOSxisJZpemlmx7DhG3Lu+2
BitLwoeHHRPLTupEZdcD3YYXJcFl39E6/2ZF4rfLolfLnSQh9opbV6CqIjHu
Chc7q5skcM3XMVPnKRD/+GyaffCSBI69zacu4gCxILjjo1mwJPS1irzStJcj
8qV4jJx9IAnvDG9LSF+SIr5Lsw959VASpNmCPitOSxL9HliI8mdLws5c7b4J
P0lib5bOxc+Fe3kSeScvxksQ7xUxT9hUSULEtRcsMX1ixN360hmHLkmg6cwj
/bQSJj4j58Q39kjCYTE27t1HQkTbplQl8QFJSIhz/2o4uZ9Y23rTe+yLJHRd
vClwKUyQeK3v9LLzb0lgFzsf+eEzH1H8I0p/Ny0JwGto36rBR+z5pH5YZk4S
9EcMqUgZvETFkf0Bv/9JAtPm3GLEJR7ir1/Tm+7UUqDZuSz5aj8X8ehsP1GB
SQq4/3su94SBk5i3+CZ0ll0Kpl2GawIpOIg22/eovUWk4FHi8U/JoqzED5wK
zP5aUjB7O0jF6zQ98Vnrs9YmJAXUvS4/477REhOCVSPYj0nBBw0tPtrbNETD
ycPbpeZScG2aS+r0IiVRIbO2dt1KCurKpEVQAwWR2VT3+nF7KQj2fOxQpbGr
216rNzfqIQU94o5uZcsbuk+9WkpVfKXA6E3jn+61Nd1YieNuIQFSIMp73HCV
e1X3RLzhT4FIKRgtwQhqKUu6MvofHrnek4ILS1qtrxcWdOlWzaxrkqVAdj6f
VsllXvetw7l+02wp6NY783aCZ1q3kOdLYnahFHiEtPI9ufZbN6Ld1nDm6V59
fL5g1L8JXf2Djm+jX0lB7at7bLoOP3XF/4zf/kja69fUiZjRuG+6lNmumESL
FEQdJxUxPvii20Dv+QrvkQI1jQmDeut+3dz6uWssn6TAtm/WP5qtRzfUx1fF
ekQKmrpXgoUX3uvaSf+bKRqTgtelTusHZVp0sa83Sv79kYKfL8/msASRdJ8d
qo0Wmt3zH5b3ZbR8rSuctOF8ZF4KCscffW+xfaG7dfSWePKKFDC03VL7PVyg
++bZnUwFamloSXzqJ0GVVU9naCn4gE4absg4UQ+ce1Jv9kfmP0omaVBvNB5I
Ofes/pdE1/1BdmlINHx6IbT8Zb1aYw6PHrc0mB5T0IhWrau/ZeebVsonDWlq
RvTeCaR6rv/4UsJEpIHwiIEcPd1Yj1gd4+UVpEHUIP1nt31rvUd4WcyAljR8
k+62sOzrqG/21AuVtZQGF4V2pQb23vr9VoP+wd7SwPdhch9Vb1+9y7/i5clr
0sAZpHleYrmv/nnKzWtmN6ShOSxKXoKrv/54F8FHOkQaXkTsDzIz6K+/pu9x
peeeNFSz0HthIf31HQoUlySLpCHZ4mf6ebv++puU8qadI9IwkCoXxpzcWy+i
iXX7ccnA+ubvlJy4rvomL3ND4ZMy8LCCsW1fUGu9y2OX9rchMvBYmciY2dpY
zzQcdMKrWgb41r2/WzXV1h++UbIv8ZUMvNmQ5a3Fausvcg71VdTJQDsr/3hj
/ev61ycOXVhokAH2s0vmH0iv6l1q5nz8umRg6Jl859f+mvrGBKfMoEkZ6Ph2
47WCSVV9gJ7x3yh+WThNOEp/f6a4vnA4+EXRflmgDI78uX2quP7DjdKANhFZ
mL41oQZlRfXSzxiomaT2eEqry5o3ntT3CzbzxavKQoj262vKSoX1Sssaeqmn
ZIE7Kvdbg0Bu/cQTsbScYFlgzZ249vxSav1MxM916rC98/Wv2VnKUuoXHfPs
3cJlIYKN0Wp0LbmeQlTsgOpdWTiWs/WmJiepXvABoanpgSzsl/uT0Yfi6k2j
RecnqmShhUeGTFkTXl/vKmyo8EcWQucKM8/QedWnyQrQ1FrKQdxU/nDMjq1u
0kOX1osEeeDBfui+9HfUtU670M3ySx6KewetNlZO6a4dfbyegx+AAt4QfSof
Ud2xCf2ApmgFGKwUjapyWnqTT1Td33VREd63Dmz7CSy9KY/053BVVIIp2cxy
uuChN9GWl05T/1MCp9xzDF0hZW8ODeeVRHcpw5FkOblq43s6GXKZ5V2nVeAW
H3Ooum+ETmhDfMbpWhWYta0m8O446xjtt3zcLqkK974zntokKeroebXacMSq
gqpGIMvBX4Q3OUKOkp3/VGFoVIfecpDzjWRz0X1jGzXQoz3+1fTuUl2SYpN8
H64GnKnCIf/kXte5LNH0vpdXBx7r/ZnuiS+0HZ8vEmIT1YF6Y0bQkq5Q+8od
i61TyepQmJntXVlUoO1vUf2JJVUdXt1J9Bw6WaAd888/Iem+OtRW2uU8ScrX
fqa1vvngkTpoGied65XN015v3B18UqoOLH84983ve6Sd1McS39KqDpNxsvw3
ONO0HxZ4ukW9V4d1y7Ch1LRU7QK/7iMnOtTh3Ycv0038qdoveZM2OrrV4Wk9
v6mxTIr2sDWXW/9HdZAoYpFst03SlhkTODI6pg5FMw7NoYZ3tVWqg0QKJ/b4
NXToX2Kstnbk13XnX+pwj4r+F/+nGG1DmUeVf6bUoThVz/God7S2rwdBZGFB
Hd5LTWpxd0VoB+veXq9aUgcoeHBvQiFCO3Lf6IDfP3XIj+Zg4E4K186oKLi3
tqYOL/cXdlxwuKOdH0bjWrehDvpJf6Mudd3WLjVz1g/eUge79CPWmcTb2tXi
74SxHXU4F5VxfqMyTBtfkl7f3VWHDruaeH+ZMO3/AUO6K68=
                "]]}, "Charting`Private`Tag#2"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[2]], 
               Line[CompressedData["
1:eJwUV3c81e8XJyt7xiXzWheXSEMlz0l9VVIipBJRSVZZGamskE022SsrRFl5
rGyyU2YUkkJGVvnd31/39X6d85zzfp/zfj738xEzu6d7excVFZU6HRXV/39f
PDajV7qVoHageeXNzs4CauwT1bos6oq2pmUys34toJ2mGm9R0Wfor8ByjuDI
AnpRGyxCJxqHnjeFTT16vYDIC7dCdu4kI8YPSmSbFwtolC3p3/bHNPRau75A
2XcBWR93svkj8hJdpxL6fkFvAb3un8hYOZmPqhMYqXOOLKBNK62RpTuvkErr
HOsXoQV0qjNccu1jCZINUpDenvyF+rYsIhdFKtChL/Ykwo1f6EGzsOJCcSUi
bD52KVH9hQSe97f/PFmN+K/bjSPCL2QmCzQ/7mDUp/xMVK3jJ3LJZ674/bEe
/ffEz5yT9BNpRkzT/05pQMJxjXLB2/NI0KVOb+luI3o2KybL2T2Pak86Ly5s
vUd3fgbNqzrOI4bhSemfIq2INqKh1L74Bxqqfec0P9uKbveQ1J48/oFys2Ib
fhS3IWYt1rFczR/ogv0Fk7mTHei6k/Ipq4k5FM1YGT1z5wPyLW7h/kY9h7gS
W3YtfexFs7/3vr0vMou22N68vK/ah9QmazdHx2fQV8/0i4spfah1dYiYmDyD
3tx5nLRwtx9JV7+TJgjNoKvKB47+2hpAKWItPy05plFqW7LdD5FPKMDnz/jN
4Sm0ElsmOx70CfWePfXgZNAU0rjTPtW78Qnp/r39X6TqFJqn+aNf2fcZWeg/
nopPmEQqxy8cfeY3goaMWWrKLn1B3a+2d0kvjCPakhK+SZNR9KSNrKlkMoWq
j3BVvLLpRTnFb6XyoqZQiilB1r+6B/XGqtNIdkwhN/FwYwPmHiRxx7CacOQr
yuh4fGJO5wNqo/FRoOL+hlh97F+pt7Ui3uPDXB+appHmOer6hZR3qPDVs2Fr
hTmk1k+lxOn3Es9xzQVpms4hR43eym3NQiz9QFONFDmHChsV9uj6FOMUVebU
qY05lBzqHKSm8gZHtAaZX33/A73qMlWdfoDxg6nQpdNGP9H6YceAXcktuERj
MU0y9Ccq81XJUyxpxQsvL+rR1P9EaqfTrZUa2rDFfc63NdK/kHZT2ILfWAe+
+jfC/eDyL6S012yh070bJzO3e3P+t4j03u31U7rej9WOPzTyMF5EDae37jj2
9eMRW7mDC86LyLhuwcDszAAm9AZOd+QuokAPa+J+hUEcHqt11p9jCYVRLyac
+f4RK7Zti/2RWUJn96ilBOgN4a6t/M3bJ5eQH6/BLpOaIcxkwpp/8sEScnqv
OfQ6+BP2luxi2xleQplHKp80Cgxj4uXHMzarS+iMDMrVdhvGtf4KtSNsv5HE
Hu1Vw6FhvP0jxK7yxG+UwnpaYjR0BDuVaPc7Zf9G+TNd1+znRzHP1538r7W/
0VpGtFcpGsMle4qeXvpMyW85yXY7fAz/cuE4rMS6jHAXQxeT4ji+g3ri5u2X
UabFpQQR+QlMlbZWORy4jAz9one90Z7AsbSCI20Zy6hGdYvB124Ct7SaC78c
XEY5X6Nmu0smMElvO+320RWklGrzio78Bde+EWvUu7SCNn6sPDQ68wUb8p/+
dtJ6Bblxpr/+fvML9h8LlyYmraA9zk/Ns2K/4FkL6fwx6lXkcuREYfr6F+zR
rtXZKbCKamyybHPYJjFBwf5XtfIqKpVluT8pPonPLFcrJtxeRVYCCSpr5ybx
hP6kTsDjVST26DNPt/EkdilncHCNWUWayQeNxu9P4pePdMsut64imTPm+UkR
k1h9wnlQY3IV/eXM262dNok/q7/4c3BrFWUPDD44WDyJ7TPrCZI8a+gqXY+y
Lp7ETLtnj/DIr6Efvnt9MjsmcZol6zUajTUkId3yet+nSXy0c7/7b+M1lNBh
w7v0dRJbRjyq6Q5bQy1vDGYFNifxrtW0cfxyDfUnbIv70Ezh+MstVK/q11C5
41k5KZYpvL/yp1jS8Bq6Tt/wgJpnCrcJcp8MXqH0U1Pw5d07hc2eqNxyZ/2D
TlZ4TdwWm8KbX64/tZL6g17TjXEvSk3hiFPeWVfRH5RT/qCsTG4Ky2XnNJ81
/IPYIdT07b4p3MjYNati9weJeFhUre6fwkbWy4ykgD/olsoBG7uDU3iliyDH
l/4HlSkxkOQOT+EgJTUt+uo/aPxge7q4yhSWiLxps9r/B7X2KCZfo+DqNf+Q
rz//oC+TKeN9lHy9K4Wv+ujXkc+ivFLwoSk8X9XXXS+yjg7pPjX3PzCFfYQ3
lopV1pGz+IRhk9IUFvQU5k7VWUd/6FZmTitM4dKpkwfCLNfRYsnUBqvsFNbS
uKv/xHsdeRjte8gvOYW/5oQ8sE1cR23jGcZWIlPYnbk05nrZOkpr0X5Byz+F
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
gcGfyaK7rgeg/UZidaxRMlC17MG4vfwM6SobnC9PpcyP94kZkfAMRXzBt1mr
ZEBGc8Z0/hjl+cTXuVulRgZ6bDyGDv31RcTzn/PM6mTgmDJpcfCdLyopX1l6
2ywDv4Y7d0ke90W9oTKPzfplIMl2xVzvwFPEqfY8+u1PGSgyzvSfZvBGYfHm
zaaisnBUQcKp7407cn7g5eAuLgtywQ8JHcLuyFg3SSRGShaOvFtuP+f7EJGZ
Bp07yLJQ35XzZeOSG2p1/Y90+IgsUBNi39TPOaNdVySesejKwsTmBimI2QE5
8U1qvvWWhdwDxyLtAsyQ0fLftR5fWYhzZrp2Ws8UnfrAnz7/TBb+M3wrWSJ8
A3H56WyJhclCQ0euyqzlNVS4VpsXlCgL/nSLne8/6qDZgWQWszJZEE6O+67q
xYavRl7vYpmRhZ+VlotcZ82w4GumvVZzsqDscc5Y8t5NPN7z9k7rT1k4YPHn
MMvzW/gWOxe174osZPR+2pbrN8e2AU3KO9RysP6ZvT34qBX28tgXtyQoB0mx
63ZRzXb4VPLIN21ROWj7tXpzUsMeM9Q8218oLgdvdDzZOxrtcdDWVLulrBw0
jqtu36p2wNEPYv9NHZaD6NWknOPxTvilNfWtQV05WI5xPqPH6oqtAwuLDhjI
weh8wqFsR1eskHvtb8QVORjQmVc2/uyKS2bKorVvyIGdlKLszxQ3XG1m2dpi
IwctV6Td/hNwx489+Xil7eTA5HtDta2jOz6R0mj21FEOrBWvzM50uOOmUeHt
Ew/l4OjA0cA6l0e427BPocpfDkJsV9uHqx7jCGePh/xBcvBKxNbv/O4nWD9a
vsU5VA581aSDqC49wZ/7/EwPRMvB3U8JjRJTT/DXC6qRBelysF2X6SXm7IGz
bL5PMGfLQUEXff35aA98Nyha3jJXDr4qr+yJLvXAv1oXm6SK5aC6Gnm5/vLA
66cyN5Jr5GC/M9nZ+7Indq9K9m6sk4NCjmLLZRtPTLU/nvV7oxxonM0xTPD2
xAwioWL72yn1tT/sep7viQOinuUZdMnBo/da9ZOU72E2Fp+DD3vkINSm2cuy
1xPzbricbfwoB1UcOzeJq544/p5D3+xnOTgsMdOkS+eFhaZtrrOOyUFALvur
Kh4vnGJkMaP0RQ7uD8xevC7uhSX6zOwMvspB4NuQ2cNKXjjn7PUttxk5gLGa
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
PL2wwABLYuz99Dtz/H81yOTI
                "]]}, "Charting`Private`Tag#3"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[2]], 
               Line[CompressedData["
1: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
                "]]}, "Charting`Private`Tag#4"]}}, {}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                Opacity[1.], 
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[2]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[2]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[2]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[2]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[2]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>]], Selectable -> False]}, 
     Annotation[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]], 
           Line[CompressedData["
1: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
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2]], 
           Line[CompressedData["
1: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
lhKrRKePJ09wwgsGwhJ/nRke0kPn2jbNCefUXr77Z2ONG15sitpd2NNXT5b8
YHkR/31H653nzt59n7rT0CldxgnvZAxO8XGBqvqumEf8Nfzv2TGn28Jc8P5L
3MMsEX+8/ld2xGsJLvjpKyQ0lX0dt2LkbZFW4YKPX9U+xHgF4tIPe8cuHOaC
y2dVucvxIHxZPp46XZcLzBI0UlJ3b+JJhjRHqE9ywRhuTKNlGYLbjZAdtU24
YOKVsGW9eyiu4HXzjo8lF3Tc3TI10ArD2xIXG79f5AL6wXfPMMXb+H3Cs5+8
blxQf+osbdmj27jT88uUxl5cMJ+FCf+jv4NT9P+A+iAuiPfz8W9tv4NH/MHz
gm5zgQ3/x7wF+XCckeIRlVYMFxT412SVRoTjCbw3L60mcAGXd1mC7FA4zql4
vqUmnQuUK2ejHkpF4A+OaEj5ZXHBLR7+UDXPCFzImidKrYAL4pIZ7AkVEXiu
99LkfAkX/Bkop0idjsClonuPV1RywT+tYfXX4pH400cVxZ6vuID1olhT/ZlI
XKk6nlEB5wKvlfu+nbcj8RftHu5TLVzQLlq9j/NpJK7582RHcQcX/OISvviq
KxKvX5VRcO3jAl9n7yMTM5G4HitdvNTnvbzxHBnN9FH4O8nx2bHvXBBhMG8e
KBKFn9JpMs6f5IJCE8NgBdUovNsst8JhlgvStP0PUkEUbuEWwi66zAWvuyNf
iZyOwodCbH1GNriAr0Hw4mPzKNw2Xbsvk5IbSKY0la/PRuE/SvnVrRm4oSBh
8WTQuSjcuWkllZ+NG6y+7d9lsozCp4YGlgd5uME7aqTrrkkU7jVXZZkutIeX
LCf5j0fhi7TJLy0kuOG191p5v04UfkPoKh+nPDfQ8wg2DylG4VtqRgE9KtxQ
+fgGhYFwFB528sDnBA1uWDxcHXaQKQqndWDUNsK4gdu8J69pORK/e/3XQ2YD
bpjy+o+BaSQSZ41/u/n+NDc4J3IUSjZH4qkFBbYx5tzwqqe78kBRJM5fd5t0
7Dw30Laa12vERuJZPfYitA7ccCX4fLHD5Uj8yfb+H7c9ueHMeN5FZ8lIXJ57
A8CPG5YZP1R77kbgFfJDeTtB3CAi8mpjeigCf30u7dLNGG5IeXmxICs6Atf1
8m3RSuSGD7lL5Su2EXhjhKnUWjo30KytUvCqRuDtz1l++RVww+Dor8TZj+H4
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
            "]]}, "Charting`Private`Tag#2"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[2]], 
           Line[CompressedData["
1:eJwUV3c81e8XJyt7xiXzWheXSEMlz0l9VVIipBJRSVZZGamskE022SsrRFl5
rGyyU2YUkkJGVvnd31/39X6d85zzfp/zfj738xEzu6d7excVFZU6HRXV/39f
PDajV7qVoHageeXNzs4CauwT1bos6oq2pmUys34toJ2mGm9R0Wfor8ByjuDI
AnpRGyxCJxqHnjeFTT16vYDIC7dCdu4kI8YPSmSbFwtolC3p3/bHNPRau75A
2XcBWR93svkj8hJdpxL6fkFvAb3un8hYOZmPqhMYqXOOLKBNK62RpTuvkErr
HOsXoQV0qjNccu1jCZINUpDenvyF+rYsIhdFKtChL/Ykwo1f6EGzsOJCcSUi
bD52KVH9hQSe97f/PFmN+K/bjSPCL2QmCzQ/7mDUp/xMVK3jJ3LJZ674/bEe
/ffEz5yT9BNpRkzT/05pQMJxjXLB2/NI0KVOb+luI3o2KybL2T2Pak86Ly5s
vUd3fgbNqzrOI4bhSemfIq2INqKh1L74Bxqqfec0P9uKbveQ1J48/oFys2Ib
fhS3IWYt1rFczR/ogv0Fk7mTHei6k/Ipq4k5FM1YGT1z5wPyLW7h/kY9h7gS
W3YtfexFs7/3vr0vMou22N68vK/ah9QmazdHx2fQV8/0i4spfah1dYiYmDyD
3tx5nLRwtx9JV7+TJgjNoKvKB47+2hpAKWItPy05plFqW7LdD5FPKMDnz/jN
4Sm0ElsmOx70CfWePfXgZNAU0rjTPtW78Qnp/r39X6TqFJqn+aNf2fcZWeg/
nopPmEQqxy8cfeY3goaMWWrKLn1B3a+2d0kvjCPakhK+SZNR9KSNrKlkMoWq
j3BVvLLpRTnFb6XyoqZQiilB1r+6B/XGqtNIdkwhN/FwYwPmHiRxx7CacOQr
yuh4fGJO5wNqo/FRoOL+hlh97F+pt7Ui3uPDXB+appHmOer6hZR3qPDVs2Fr
hTmk1k+lxOn3Es9xzQVpms4hR43eym3NQiz9QFONFDmHChsV9uj6FOMUVebU
qY05lBzqHKSm8gZHtAaZX33/A73qMlWdfoDxg6nQpdNGP9H6YceAXcktuERj
MU0y9Ccq81XJUyxpxQsvL+rR1P9EaqfTrZUa2rDFfc63NdK/kHZT2ILfWAe+
+jfC/eDyL6S012yh070bJzO3e3P+t4j03u31U7rej9WOPzTyMF5EDae37jj2
9eMRW7mDC86LyLhuwcDszAAm9AZOd+QuokAPa+J+hUEcHqt11p9jCYVRLyac
+f4RK7Zti/2RWUJn96ilBOgN4a6t/M3bJ5eQH6/BLpOaIcxkwpp/8sEScnqv
OfQ6+BP2luxi2xleQplHKp80Cgxj4uXHMzarS+iMDMrVdhvGtf4KtSNsv5HE
Hu1Vw6FhvP0jxK7yxG+UwnpaYjR0BDuVaPc7Zf9G+TNd1+znRzHP1538r7W/
0VpGtFcpGsMle4qeXvpMyW85yXY7fAz/cuE4rMS6jHAXQxeT4ji+g3ri5u2X
UabFpQQR+QlMlbZWORy4jAz9one90Z7AsbSCI20Zy6hGdYvB124Ct7SaC78c
XEY5X6Nmu0smMElvO+320RWklGrzio78Bde+EWvUu7SCNn6sPDQ68wUb8p/+
dtJ6Bblxpr/+fvML9h8LlyYmraA9zk/Ns2K/4FkL6fwx6lXkcuREYfr6F+zR
rtXZKbCKamyybHPYJjFBwf5XtfIqKpVluT8pPonPLFcrJtxeRVYCCSpr5ybx
hP6kTsDjVST26DNPt/EkdilncHCNWUWayQeNxu9P4pePdMsut64imTPm+UkR
k1h9wnlQY3IV/eXM262dNok/q7/4c3BrFWUPDD44WDyJ7TPrCZI8a+gqXY+y
Lp7ETLtnj/DIr6Efvnt9MjsmcZol6zUajTUkId3yet+nSXy0c7/7b+M1lNBh
w7v0dRJbRjyq6Q5bQy1vDGYFNifxrtW0cfxyDfUnbIv70Ezh+MstVK/q11C5
41k5KZYpvL/yp1jS8Bq6Tt/wgJpnCrcJcp8MXqH0U1Pw5d07hc2eqNxyZ/2D
TlZ4TdwWm8KbX64/tZL6g17TjXEvSk3hiFPeWVfRH5RT/qCsTG4Ky2XnNJ81
/IPYIdT07b4p3MjYNati9weJeFhUre6fwkbWy4ykgD/olsoBG7uDU3iliyDH
l/4HlSkxkOQOT+EgJTUt+uo/aPxge7q4yhSWiLxps9r/B7X2KCZfo+DqNf+Q
rz//oC+TKeN9lHy9K4Wv+ujXkc+ivFLwoSk8X9XXXS+yjg7pPjX3PzCFfYQ3
lopV1pGz+IRhk9IUFvQU5k7VWUd/6FZmTitM4dKpkwfCLNfRYsnUBqvsFNbS
uKv/xHsdeRjte8gvOYW/5oQ8sE1cR23jGcZWIlPYnbk05nrZOkpr0X5Byz+F
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
gcGfyaK7rgeg/UZidaxRMlC17MG4vfwM6SobnC9PpcyP94kZkfAMRXzBt1mr
ZEBGc8Z0/hjl+cTXuVulRgZ6bDyGDv31RcTzn/PM6mTgmDJpcfCdLyopX1l6
2ywDv4Y7d0ke90W9oTKPzfplIMl2xVzvwFPEqfY8+u1PGSgyzvSfZvBGYfHm
zaaisnBUQcKp7407cn7g5eAuLgtywQ8JHcLuyFg3SSRGShaOvFtuP+f7EJGZ
Bp07yLJQ35XzZeOSG2p1/Y90+IgsUBNi39TPOaNdVySesejKwsTmBimI2QE5
8U1qvvWWhdwDxyLtAsyQ0fLftR5fWYhzZrp2Ws8UnfrAnz7/TBb+M3wrWSJ8
A3H56WyJhclCQ0euyqzlNVS4VpsXlCgL/nSLne8/6qDZgWQWszJZEE6O+67q
xYavRl7vYpmRhZ+VlotcZ82w4GumvVZzsqDscc5Y8t5NPN7z9k7rT1k4YPHn
MMvzW/gWOxe174osZPR+2pbrN8e2AU3KO9RysP6ZvT34qBX28tgXtyQoB0mx
63ZRzXb4VPLIN21ROWj7tXpzUsMeM9Q8218oLgdvdDzZOxrtcdDWVLulrBw0
jqtu36p2wNEPYv9NHZaD6NWknOPxTvilNfWtQV05WI5xPqPH6oqtAwuLDhjI
weh8wqFsR1eskHvtb8QVORjQmVc2/uyKS2bKorVvyIGdlKLszxQ3XG1m2dpi
IwctV6Td/hNwx489+Xil7eTA5HtDta2jOz6R0mj21FEOrBWvzM50uOOmUeHt
Ew/l4OjA0cA6l0e427BPocpfDkJsV9uHqx7jCGePh/xBcvBKxNbv/O4nWD9a
vsU5VA581aSDqC49wZ/7/EwPRMvB3U8JjRJTT/DXC6qRBelysF2X6SXm7IGz
bL5PMGfLQUEXff35aA98Nyha3jJXDr4qr+yJLvXAv1oXm6SK5aC6Gnm5/vLA
66cyN5Jr5GC/M9nZ+7Indq9K9m6sk4NCjmLLZRtPTLU/nvV7oxxonM0xTPD2
xAwioWL72yn1tT/sep7viQOinuUZdMnBo/da9ZOU72E2Fp+DD3vkINSm2cuy
1xPzbricbfwoB1UcOzeJq544/p5D3+xnOTgsMdOkS+eFhaZtrrOOyUFALvur
Kh4vnGJkMaP0RQ7uD8xevC7uhSX6zOwMvspB4NuQ2cNKXjjn7PUttxk5gLGa
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
PL2wwABLYuz99Dtz/H81yOTI
            "]]}, "Charting`Private`Tag#3"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[2]], 
           Line[CompressedData["
1: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
            "]]}, "Charting`Private`Tag#4"]}}, {}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[2]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[2]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"exp", "(", 
           RowBox[{
             RowBox[{"-", "3"}], " ", 
             TagBox["t", HoldForm]}], ")"}], " ", 
         RowBox[{"cos", "(", 
           FractionBox[
            TagBox["t", HoldForm], "4"], ")"}]}], 
       RowBox[{
         RowBox[{"exp", "(", 
           RowBox[{
             RowBox[{"-", "3"}], " ", 
             TagBox["t", HoldForm]}], ")"}], " ", 
         RowBox[{"sin", "(", 
           RowBox[{"2", " ", 
             TagBox["t", HoldForm]}], ")"}]}], 
       RowBox[{
         RowBox[{"exp", "(", 
           RowBox[{"-", 
             FractionBox[
              TagBox["t", HoldForm], "3"]}], ")"}], " ", 
         RowBox[{"cos", "(", 
           RowBox[{"2", " ", 
             TagBox["t", HoldForm]}], ")"}]}], 
       RowBox[{
         RowBox[{"exp", "(", 
           RowBox[{"-", 
             FractionBox[
              TagBox["t", HoldForm], "3"]}], ")"}], " ", 
         RowBox[{"sin", "(", 
           RowBox[{"2", " ", 
             TagBox["t", HoldForm]}], ")"}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9321906055294247`*^9, 3.932190619665149*^9}, {
   3.932190776684637*^9, 3.9321908003686714`*^9}, {3.932190901310423*^9, 
   3.93219093488302*^9}, 3.933224866187481*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"c2ebf6d5-a221-0e4d-b707-018039158d65"]
}, Open  ]],

Cell["\<\
Il grafico conferma la convergenza a zero dei modi, come assunto \
precedentemente.\
\>", "Text",
 CellChangeTimes->{{3.9321909417736473`*^9, 3.9321909778777447`*^9}, {
  3.9338319653014297`*^9, 
  3.9338319794955597`*^9}},ExpressionUUID->"7c1fc617-3d7e-834e-b05d-\
30d8e293aebf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Risposta libera", "Section",
 CellChangeTimes->{{3.932788955872808*^9, 3.932788959574144*^9}, {
  3.933143591007311*^9, 
  3.933143591770897*^9}},ExpressionUUID->"dd9a27f0-02a7-4249-8e02-\
3c2a1f63596e"],

Cell[TextData[{
 "Determinare la risposta libera nello stato del sistema, equivale a studiare \
il suo comportamento nella configurazione in cui: l\[CloseCurlyQuote]ingresso \
\[EGrave] nullo e lo stato iniziale \[EGrave] assegnato e noto. La risposta \
libera nello stato per un sistema LTI-TC \[EGrave] pari a: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["x", "TI"], 
          StyleBox["l", "TI"]], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[LongEqual]", 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            StyleBox["A", "TI"], 
            StyleBox["t", "TI"]}]], 
         SubscriptBox[
          StyleBox["x", "TI"], "0"], "\[LongEqual]", 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            StyleBox["A", "TI"], 
            StyleBox["t", "TI"]}]], 
         OverscriptBox[
          StyleBox["T", "TI"], "^"], 
         SubscriptBox[
          StyleBox["z", "TI"], "0"], "\[LongEqual]", 
         OverscriptBox[
          StyleBox["T", "TI"], "^"], 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            OverscriptBox["\[CapitalLambda]", "^"], 
            StyleBox["t", "TI"]}]], 
         SubscriptBox[
          StyleBox["z", "TI"], "0"]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "x_l(t)=e^{At}x_0=e^{At}\\hat{T}z_0=\\hat{T}e^{\\hat{\\Lambda}t}z_0", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "ae45a23e-ace0-3249-8d75-90ae66c4f1ce"],
 ".\nDunque, posso anche calcolare la risposta libera nello stato utilizzando \
",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["z", "TI"], "0"], TraditionalForm], "errors" -> {}, "input" -> 
     "z_0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "3aea275c-82e9-8040-b93d-1e8a15270b8a"],
 ", cio\[EGrave] lo stato iniziale ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["x", "TI"], "0"], TraditionalForm], "errors" -> {}, "input" -> 
     "x_0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "d2fbe5fd-7806-ea4a-91ce-9ea13b534e23"],
 " proiettato lungo le colonne di ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       OverscriptBox[
        StyleBox["T", "TI"], "^"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\hat{T}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "33c8687d-118f-734f-bb06-10c6f369f77d"],
 ", ovvero della matrice di cambiamento di base, e la matrice di \
Rotation-Scaling ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       OverscriptBox["\[CapitalLambda]", "^"], TraditionalForm], 
     "errors" -> {}, "input" -> "\\hat\\Lambda", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "280b3da2-3f70-3146-bf6f-209e31af9972"],
 "."
}], "Text",
 CellChangeTimes->{{3.932789050507393*^9, 3.932789054200924*^9}, {
   3.932790118871519*^9, 3.9327901440175095`*^9}, {3.932790197005783*^9, 
   3.93279027114505*^9}, 3.9327903377218704`*^9, {3.932790711156084*^9, 
   3.932790810980091*^9}, {3.932790849543724*^9, 3.9327908652633247`*^9}, {
   3.9327910055651703`*^9, 3.932791032095859*^9}, {3.9327919413080044`*^9, 
   3.932791946936966*^9}, {3.932792191071403*^9, 3.932792275724144*^9}, 
   3.932792371402588*^9, {3.9327930466185665`*^9, 3.9327930486736946`*^9}, {
   3.9327942155244217`*^9, 3.932794220659223*^9}, {3.9327949761602383`*^9, 
   3.932794981144993*^9}, {3.933224881767044*^9, 
   3.9332248822760296`*^9}},ExpressionUUID->"fd659302-cf29-1b40-a768-\
e9fa479cb74b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["x", "TI"], "0"], TraditionalForm], "errors" -> {}, "input" -> 
    "x_0", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "0", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"-", "2"}], "}"}], ",", 
    RowBox[{"{", "3", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"-", "2"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9327911729564*^9, 3.932791227998108*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"ed39931d-7935-224d-8815-0568ca5ada8c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "2"}], "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9327912289380817`*^9, 3.932810531109066*^9, 
  3.932873582104223*^9, 3.9332249004163117`*^9, 3.933831985135294*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"a8d80e66-eebe-7942-ac87-3d5b2dc9668c"]
}, Open  ]],

Cell[TextData[{
 "Calcolo della risposta libera come per definizione, cio\[EGrave] ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["x", "TI"], 
          StyleBox["l", "TI"]], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[LongEqual]", 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            StyleBox["A", "TI"], 
            StyleBox["t", "TI"]}]], 
         SubscriptBox[
          StyleBox["x", "TI"], "0"]}], TraditionalForm], "errors" -> {}, 
     "input" -> "x_l(t)=e^{At}x_0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "5a3276f5-2be5-dc44-aa17-ae605f3c57bc"],
 ". Non essendo lo stato combinazione lineare di nessuna delle colonne della \
matrice di cambiamento di base, nell\[CloseCurlyQuote]espansione modale della \
risposta libera mi aspetto che compaiano tutti i modi naturali del sistema."
}], "Text",
 CellChangeTimes->{{3.932792397541071*^9, 3.932792423745338*^9}, {
  3.932792653384241*^9, 3.932792723719721*^9}, {3.933224933922226*^9, 
  3.933224936771887*^9}},ExpressionUUID->"2eca2b9d-d035-9e43-98dc-\
0e6906a2a068"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["x", "TI"], 
        RowBox[{
          StyleBox["l", "TI"], "1"}]], TraditionalForm], "errors" -> {}, 
     "input" -> "x_{l1}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "[", "t_", "]"}], ":=", 
  RowBox[{"Expand", "[", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"MatrixExp", "[", 
      RowBox[{"A", " ", "t"}], "]"}], ".", 
     TemplateBox[<|"boxes" -> FormBox[
         SubscriptBox[
          StyleBox["x", "TI"], "0"], TraditionalForm], "errors" -> {}, 
       "input" -> "x_0", "state" -> "Boxes"|>,
      "TeXAssistantTemplate"]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.93279132460606*^9, 3.932791416265278*^9}, {
  3.9327914809017677`*^9, 3.932791518263401*^9}, {3.932791548993815*^9, 
  3.9327915510888157`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"cde1e3da-b94a-0941-8ee5-ff12de6a6a0c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["x", "TI"], 
        RowBox[{
          StyleBox["l", "TI"], "1"}]], TraditionalForm], "errors" -> {}, 
     "input" -> "x_{l1}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "[", "t", "]"}], "//", " ", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.932791562376784*^9, 3.932791584068188*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"45eada6a-72c7-0e49-8078-8817c17e9313"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox[
        RowBox[{"31761999", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "3"}], " ", "t"}]], " ", 
         RowBox[{"Cos", "[", 
          FractionBox["t", "4"], "]"}]}], "2568145"], "-", 
       FractionBox[
        RowBox[{"31761999", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "t"}], "/", "3"}]], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "2568145"], "-", 
       FractionBox[
        RowBox[{"1472190137", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "3"}], " ", "t"}]], " ", 
         RowBox[{"Sin", "[", 
          FractionBox["t", "4"], "]"}]}], "10272580"], "-", 
       FractionBox[
        RowBox[{"372104693", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "t"}], "/", "3"}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "23113305"]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"28657472", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "3"}], " ", "t"}]], " ", 
          RowBox[{"Cos", "[", 
           FractionBox["t", "4"], "]"}]}], "2568145"]}], "+", 
       FractionBox[
        RowBox[{"23521182", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "t"}], "/", "3"}]], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "2568145"], "-", 
       FractionBox[
        RowBox[{"207507256", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "3"}], " ", "t"}]], " ", 
         RowBox[{"Sin", "[", 
          FractionBox["t", "4"], "]"}]}], "2568145"], "-", 
       FractionBox[
        RowBox[{"7991314", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "t"}], "/", "3"}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "2568145"]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"12853166", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "3"}], " ", "t"}]], " ", 
          RowBox[{"Cos", "[", 
           FractionBox["t", "4"], "]"}]}], "2568145"]}], "+", 
       FractionBox[
        RowBox[{"20557601", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "t"}], "/", "3"}]], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "2568145"], "+", 
       FractionBox[
        RowBox[{"265900552", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "3"}], " ", "t"}]], " ", 
         RowBox[{"Sin", "[", 
          FractionBox["t", "4"], "]"}]}], "2568145"], "-", 
       FractionBox[
        RowBox[{"151125371", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "t"}], "/", "3"}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "7704435"]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"26323869", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "3"}], " ", "t"}]], " ", 
         RowBox[{"Cos", "[", 
          FractionBox["t", "4"], "]"}]}], "2568145"], "-", 
       FractionBox[
        RowBox[{"31460159", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "t"}], "/", "3"}]], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "2568145"], "-", 
       FractionBox[
        RowBox[{"3160905657", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "3"}], " ", "t"}]], " ", 
         RowBox[{"Sin", "[", 
          FractionBox["t", "4"], "]"}]}], "10272580"], "+", 
       FractionBox[
        RowBox[{"99224467", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "t"}], "/", "3"}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "23113305"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9327915859548073`*^9, 3.932792393695667*^9, 
  3.932873586006878*^9, 3.9332249052878327`*^9, 3.933831988767359*^9},
 CellLabel->
  "Out[34]//MatrixForm=",ExpressionUUID->"7a066672-88c0-db44-8ada-\
7ce2c2344ab1"]
}, Open  ]],

Cell[TextData[{
 "Proprio come aspettato compaiono tutti i modi naturali. Verifico il \
risultato calcolando la risposta libera a partire dalla matrice di \
cambiamento di base che genera la matrice di Rotation-Scaling, infatti \
partendo dalla relazione ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], 
         OverscriptBox[
          StyleBox["T", "TI"], "^"], "\[LongEqual]", 
         OverscriptBox[
          StyleBox["T", "TI"], "^"], 
         OverscriptBox["\[CapitalLambda]", "^"]}], TraditionalForm], 
     "errors" -> {}, "input" -> "A\\hat{T}=\\hat{T}\\hat{\\Lambda}", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "23e727ce-d5da-4d45-a27d-f28e699743b0"],
 ", si ottiene che la matrice di Rotation-Scaling \[EGrave] pari a ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         OverscriptBox["\[CapitalLambda]", "^"], "\[LongEqual]", 
         OverscriptBox[
          SuperscriptBox[
           StyleBox["T", "TI"], "-1"], "^"], 
         StyleBox["A", "TI"], 
         OverscriptBox[
          StyleBox["T", "TI"], "^"]}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\hat\\Lambda=\\hat{T^{-1}}A\\hat{T}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "96dc5b3e-28ed-dc4d-8278-a3cd4e73b2c5"],
 ".\nPer semplicit\[AGrave] di calcoli riutilizzo la matrice di cambiamento \
di base T, calcolata in precedenza cambiando la sua nomenclatura con ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       OverscriptBox[
        StyleBox["T", "TI"], "^"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\hat T", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "39088ea5-0116-5147-b8ba-0fc66efc659e"],
 "."
}], "Text",
 CellChangeTimes->{{3.93279244618684*^9, 3.932792497804567*^9}, {
   3.932792613514368*^9, 3.932792649879747*^9}, {3.932792726839609*^9, 
   3.932792814132616*^9}, {3.932792867447302*^9, 3.932792869118763*^9}, {
   3.9327929265293427`*^9, 3.932792967827482*^9}, {3.932793008078314*^9, 
   3.932793106932783*^9}, 3.932793143001274*^9, {3.933224942628504*^9, 
   3.9332250017825985`*^9}},ExpressionUUID->"c8ab7b35-99f4-8d4f-9c04-\
2709be3b58f8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  OverscriptBox["T", "^"], " ", "=", " ", "T"}]], "Input",
 CellChangeTimes->{{3.9327912553086643`*^9, 3.932791258795365*^9}, {
   3.932810124444113*^9, 3.932810125750263*^9}, 3.932810176359644*^9, 
   3.933224911962612*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"c812def7-2ff1-cb45-9ca1-6fe6b824ac31"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["583099", "1249755"], ",", 
     RowBox[{"-", 
      FractionBox["30808", "1249755"]}], ",", 
     FractionBox["3709", "7585"], ",", 
     RowBox[{"-", 
      FractionBox["11268", "7585"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["108768", "416585"], ",", 
     FractionBox["56192", "1249755"], ",", 
     RowBox[{"-", 
      FractionBox["5652", "7585"]}], ",", 
     FractionBox["54", "7585"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["420736", "1249755"]}], ",", 
     FractionBox["2104", "416585"], ",", 
     RowBox[{"-", 
      FractionBox["1641", "1517"]}], ",", 
     RowBox[{"-", 
      FractionBox["1854", "1517"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.932791265986643*^9, 3.932810126315593*^9, 
  3.9328101773641167`*^9, 3.932873589437299*^9, 3.9332249149687*^9, 
  3.933225010791628*^9, 3.933398768843029*^9, 3.9338319914252014`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"c3da4aea-16da-e547-b9fa-bc62b2e1aed9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  TemplateBox[<|"boxes" -> FormBox[
      OverscriptBox[
       StyleBox["T", "TI"], "^"], TraditionalForm], "errors" -> {}, "input" -> 
    "\\hat T", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "]"}]], "Input",
 CellChangeTimes->{{3.932812768473846*^9, 3.93281277193989*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"e6c88a90-7b1f-4d4c-9531-6fef798f9e77"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["583099", "1249755"], 
      RowBox[{"-", 
       FractionBox["30808", "1249755"]}], 
      FractionBox["3709", "7585"], 
      RowBox[{"-", 
       FractionBox["11268", "7585"]}]},
     {
      FractionBox["108768", "416585"], 
      FractionBox["56192", "1249755"], 
      RowBox[{"-", 
       FractionBox["5652", "7585"]}], 
      FractionBox["54", "7585"]},
     {
      RowBox[{"-", 
       FractionBox["420736", "1249755"]}], 
      FractionBox["2104", "416585"], 
      RowBox[{"-", 
       FractionBox["1641", "1517"]}], 
      RowBox[{"-", 
       FractionBox["1854", "1517"]}]},
     {"1", "0", "1", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.932812775818973*^9, 3.9332250137890587`*^9, 
  3.933831993491556*^9},
 CellLabel->
  "Out[36]//MatrixForm=",ExpressionUUID->"8e35462e-7929-004c-84bb-\
0bb3f20c759d"]
}, Open  ]],

Cell[TextData[{
 "Proietto lo stato iniziale lungo le colonne di ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       OverscriptBox[
        StyleBox["T", "TI"], "^"], TraditionalForm], "errors" -> {}, "input" -> 
     "\\hat T", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "d382d059-9c6e-4841-a149-e590e1820056"]
}], "Text",
 CellChangeTimes->{{3.932793183355648*^9, 
  3.93279323397637*^9}},ExpressionUUID->"a7023b68-1653-8f43-9717-\
2f569dabc1b3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["z", "TI"], "0"], TraditionalForm], "errors" -> {}, "input" -> 
    "z_0", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{
   RowBox[{"Inverse", "[", 
    OverscriptBox["T", "^"], "]"}], ".", 
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["x", "TI"], "0"], TraditionalForm], "errors" -> {}, "input" -> 
     "x_0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"]}]}]], "Input",
 CellChangeTimes->{{3.9327912802289047`*^9, 3.932791305189602*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"80019232-0d7a-6349-83a2-0a35793c9f49"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    FractionBox["26323869", "2568145"], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["3160905657", "10272580"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["31460159", "2568145"]}], "}"}], ",", 
   RowBox[{"{", 
    FractionBox["99224467", "23113305"], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9327913104368153`*^9, {3.932810524594999*^9, 3.932810546210228*^9}, 
   3.93287359244141*^9, 3.9332250178714848`*^9, 3.9338319962929955`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"d939a3c4-63a0-e34a-9ff2-14a664755628"]
}, Open  ]],

Cell["Calcolo la matrice di Rotation-Scaling", "Text",
 CellChangeTimes->{{3.93279326062146*^9, 
  3.9327932690912876`*^9}},ExpressionUUID->"de103337-479b-4243-b2e6-\
d11eacd065f9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      OverscriptBox["\[CapitalLambda]", "^"], TraditionalForm], 
    "errors" -> {}, "input" -> "\\hat\\Lambda", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", "\[CapitalLambda]"}]], "Input",
 CellChangeTimes->{{3.932791624722273*^9, 3.932791669721037*^9}, {
  3.932810133930912*^9, 3.932810140722814*^9}, {3.932810181117275*^9, 
  3.932810185654919*^9}, {3.932810358248857*^9, 3.932810368389179*^9}, {
  3.932810426179119*^9, 3.93281043142901*^9}, {3.9328105566290665`*^9, 
  3.932810584298689*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"7112edee-ebf7-f340-95ab-a3b80d6ceed2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     FractionBox["1", "4"], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], ",", 
     RowBox[{"-", "3"}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", 
      FractionBox["1", "3"]}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", 
      FractionBox["1", "3"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.932791674732723*^9, 3.932810141346674*^9, 
  3.9328104371182137`*^9, 3.9328105856263466`*^9, 3.93287359424946*^9, 
  3.933225020820734*^9, 3.9333988532146225`*^9, 3.933831998144045*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"9ddbf469-7bc1-914d-add3-41fb5f7f7f80"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  TemplateBox[<|"boxes" -> FormBox[
      OverscriptBox["\[CapitalLambda]", "^"], TraditionalForm], 
    "errors" -> {}, "input" -> "\\hat\\Lambda", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "]"}]], "Input",
 CellChangeTimes->{{3.932791697149397*^9, 3.932791704074557*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"9c299b16-4a11-0f4b-bcc8-f1132dbcf844"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "3"}], 
      FractionBox["1", "4"], "0", "0"},
     {
      RowBox[{"-", 
       FractionBox["1", "4"]}], 
      RowBox[{"-", "3"}], "0", "0"},
     {"0", "0", 
      RowBox[{"-", 
       FractionBox["1", "3"]}], "2"},
     {"0", "0", 
      RowBox[{"-", "2"}], 
      RowBox[{"-", 
       FractionBox["1", "3"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.932791705050616*^9, 3.932810441494026*^9, 
  3.933225023377275*^9, 3.933832000253353*^9},
 CellLabel->
  "Out[39]//MatrixForm=",ExpressionUUID->"c00200ad-792a-7a48-8385-\
9cd28976c191"]
}, Open  ]],

Cell[TextData[{
 "Calcolo la risposta libera nello stato tramite matrice di Rotation-Scaling \
e ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["z", "TI"], "0"], TraditionalForm], "errors" -> {}, "input" -> 
     "z_0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "864e478e-9cd5-0c4d-b755-3e980f830aca"]
}], "Text",
 CellChangeTimes->{{3.9327932769134274`*^9, 3.932793282965451*^9}, {
  3.932793414930588*^9, 
  3.9327934254729424`*^9}},ExpressionUUID->"6cc32fb5-fdc9-6e4d-9199-\
417e5706738a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["x", "TI"], 
        RowBox[{
          StyleBox["l", "TI"], "2"}]], TraditionalForm], "errors" -> {}, 
     "input" -> "x_{l2}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "[", "t_", "]"}], ":=", 
  RowBox[{"Expand", "[", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     OverscriptBox["T", "^"], ".", 
     RowBox[{"MatrixExp", "[", 
      RowBox[{
       TemplateBox[<|"boxes" -> FormBox[
           OverscriptBox["\[CapitalLambda]", "^"], TraditionalForm], 
         "errors" -> {}, "input" -> "\\hat\\Lambda", "state" -> "Boxes"|>,
        "TeXAssistantTemplate"], " ", "t"}], "]"}], ".", 
     TemplateBox[<|"boxes" -> FormBox[
         SubscriptBox[
          StyleBox["z", "TI"], "0"], TraditionalForm], "errors" -> {}, 
       "input" -> "z_0", "state" -> "Boxes"|>,
      "TeXAssistantTemplate"]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9327920748416824`*^9, 3.932792113857242*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"ae9fafdd-49b5-a142-bdc5-33bdf8479b2f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["x", "TI"], 
        RowBox[{
          StyleBox["l", "TI"], "2"}]], TraditionalForm], "errors" -> {}, 
     "input" -> "x_{l2}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "[", "t", "]"}], "//", " ", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.93279213599628*^9, 3.932792142513071*^9}, {
  3.932810262607327*^9, 3.93281026958004*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"e2e9964a-9c3c-d44c-a2ff-bc1c4aec3c7b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox[
        RowBox[{"31761999", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "3"}], " ", "t"}]], " ", 
         RowBox[{"Cos", "[", 
          FractionBox["t", "4"], "]"}]}], "2568145"], "-", 
       FractionBox[
        RowBox[{"31761999", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "t"}], "/", "3"}]], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "2568145"], "-", 
       FractionBox[
        RowBox[{"1472190137", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "3"}], " ", "t"}]], " ", 
         RowBox[{"Sin", "[", 
          FractionBox["t", "4"], "]"}]}], "10272580"], "-", 
       FractionBox[
        RowBox[{"372104693", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "t"}], "/", "3"}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "23113305"]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"28657472", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "3"}], " ", "t"}]], " ", 
          RowBox[{"Cos", "[", 
           FractionBox["t", "4"], "]"}]}], "2568145"]}], "+", 
       FractionBox[
        RowBox[{"23521182", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "t"}], "/", "3"}]], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "2568145"], "-", 
       FractionBox[
        RowBox[{"207507256", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "3"}], " ", "t"}]], " ", 
         RowBox[{"Sin", "[", 
          FractionBox["t", "4"], "]"}]}], "2568145"], "-", 
       FractionBox[
        RowBox[{"7991314", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "t"}], "/", "3"}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "2568145"]}]},
     {
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"12853166", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "3"}], " ", "t"}]], " ", 
          RowBox[{"Cos", "[", 
           FractionBox["t", "4"], "]"}]}], "2568145"]}], "+", 
       FractionBox[
        RowBox[{"20557601", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "t"}], "/", "3"}]], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "2568145"], "+", 
       FractionBox[
        RowBox[{"265900552", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "3"}], " ", "t"}]], " ", 
         RowBox[{"Sin", "[", 
          FractionBox["t", "4"], "]"}]}], "2568145"], "-", 
       FractionBox[
        RowBox[{"151125371", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "t"}], "/", "3"}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "7704435"]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"26323869", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "3"}], " ", "t"}]], " ", 
         RowBox[{"Cos", "[", 
          FractionBox["t", "4"], "]"}]}], "2568145"], "-", 
       FractionBox[
        RowBox[{"31460159", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "t"}], "/", "3"}]], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "2568145"], "-", 
       FractionBox[
        RowBox[{"3160905657", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "3"}], " ", "t"}]], " ", 
         RowBox[{"Sin", "[", 
          FractionBox["t", "4"], "]"}]}], "10272580"], "+", 
       FractionBox[
        RowBox[{"99224467", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "t"}], "/", "3"}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "23113305"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.93279215072961*^9, 3.9328101468227158`*^9, 
  3.9328104468294907`*^9, 3.93281059253328*^9, 3.932873600336151*^9, 
  3.9332250286224556`*^9, 3.9338320043758698`*^9},
 CellLabel->
  "Out[41]//MatrixForm=",ExpressionUUID->"6583dc67-e45e-2a4b-bd65-\
5e3ef2824891"]
}, Open  ]],

Cell["Come volevasi verificare i risultati sono i medesimi.", "Text",
 CellChangeTimes->{{3.932793443216175*^9, 3.9327934892649307`*^9}, {
  3.9327940651585197`*^9, 
  3.932794078831524*^9}},ExpressionUUID->"ffdae7a2-1873-f646-b075-\
e069bb345f2f"],

Cell["\<\
Verifica esaustiva per accertarsi che il risultato sia corretto \[EGrave] che \
la risposta libera converga a 0, componente per componente.\
\>", "Text",
 CellChangeTimes->{{3.932794184285721*^9, 3.932794205653334*^9}, {
  3.9327950463985634`*^9, 3.93279510444248*^9}, {3.9332250411035767`*^9, 
  3.9332250490033894`*^9}, {3.93322525643322*^9, 
  3.933225261689432*^9}},ExpressionUUID->"4ec19c47-3b0f-da4f-9a19-\
b54d35f00016"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["x", "TI"], 
         RowBox[{
           StyleBox["l", "TI"], "2"}]], TraditionalForm], "errors" -> {}, 
      "input" -> "x_{l2}", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], "[", "t", "]"}], ",", " ", 
   RowBox[{"t", " ", "\[Rule]", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.932795112637953*^9, 3.93279516593026*^9}, 
   3.932876853611143*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"ebabbde7-6946-2448-84aa-72c0c6713add"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9327951720545464`*^9, 3.932810598023735*^9, 
  3.933225293069048*^9, 3.9338320078559933`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"01eb1192-65cf-7e4e-ba98-760cdfca6cda"]
}, Open  ]],

Cell[TextData[{
 "La risposta libera nell\[CloseCurlyQuote]uscita \[EGrave] pari al prodotto \
tra la matrice di uscita C e la risposta libera nello stato: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["y", "TI"], 
          StyleBox["l", "TI"]], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[LongEqual]", 
         StyleBox["C", "TI"], 
         SubscriptBox[
          StyleBox["x", "TI"], 
          StyleBox["l", "TI"]], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> "y_l(t)=Cx_l(t)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "3932e592-7dac-ae46-af51-e65a4f1bd1c6"]
}], "Text",
 CellChangeTimes->{{3.932795231037998*^9, 3.932795237498621*^9}, {
  3.932795855644928*^9, 3.932795863033603*^9}, {3.932795984240965*^9, 
  3.9327960076657715`*^9}, {3.93279741397237*^9, 
  3.932797459616923*^9}},ExpressionUUID->"8766c005-0e61-5141-bea2-\
5f9a5b66207f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["y", "TI"], 
        StyleBox["l", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
     "y_l", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "[", "t_", "]"}], ":=", 
  RowBox[{"Expand", "[", 
   RowBox[{"Simplify", "[", 
    RowBox[{"C1", ".", 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["x", "TI"], 
           RowBox[{
             StyleBox["l", "TI"], "2"}]], TraditionalForm], "errors" -> {}, 
        "input" -> "x_{l2}", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], "[", "t", "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9327952546822243`*^9, 3.9327952559817047`*^9}, 
   3.932795533297188*^9, {3.932795682953974*^9, 3.932795792948021*^9}, 
   3.932795850624443*^9, {3.932797499798212*^9, 3.9327975687942696`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"e805f967-f07e-894f-8383-a97248c7fdf9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["y", "TI"], 
       StyleBox["l", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
    "y_l", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.932797587205961*^9, 3.932797595499069*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"0ad8a39d-5b28-0d4e-80e2-854b27d41842"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{"31098528", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["t", "4"], "]"}]}], "2568145"], "-", 
    FractionBox[
     RowBox[{"7985223", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "t"}], "/", "3"}]], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "t"}], "]"}]}], "2568145"], "+", 
    FractionBox[
     RowBox[{"153686784", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", "t"}]], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["t", "4"], "]"}]}], "2568145"], "+", 
    FractionBox[
     RowBox[{"29958291", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "t"}], "/", "3"}]], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t"}], "]"}]}], "2568145"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.9327975968239994`*^9, 3.932810609964634*^9, 
  3.93287360543839*^9, 3.933225309167829*^9, 3.933832010191757*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"1bc9d6b0-3974-0446-a97f-04038aae0adb"]
}, Open  ]],

Cell["Grafico della risposta libera nell\[CloseCurlyQuote]uscita", "Text",
 CellChangeTimes->{{3.932797612096367*^9, 
  3.9327976354307384`*^9}},ExpressionUUID->"835e632c-b518-114f-915a-\
4956bae8a75e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["y", "TI"], 
         StyleBox["l", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
      "y_l", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.932797639869041*^9, 3.932797662807448*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"38bad3db-004b-1f4a-88ee-af52854f1bc0"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
Bkod3+eTkN/7QfmWHw/tkbXMqVEmwcv7h1RvVgLidrHKDquQ8GlJvf1L1QTU
dVu0tU+VhJB3JwYdCuORPzySlFAnocsiZu2TB3Ho1gkl/wMkCVv7flQ/aGAj
seKh/W16JAh3KHXZ911D1QYxs/qtSGho/uOnvtYbSS1ylg08xMT8E4ey4Rw6
2rxdR9KGhOKnbsf3HfFAoy6/T1FHSAiay6kmN5xCKrG2zT7HSVDs2RgllXYI
hX5YXzhzlgR2Xc6AXrMd3n6m+vDiayRoy9e1zO8OxhPvew0rI0jYJKrndKwq
BJfqi1Pno0hY1Kev8oF/GausMBf9GEtCknpB6nLbMCxe2VIqSGLmeX7pR2/J
Vfx+Rf9C4DNxqpC35WQMjguVHB/OISFuZMjk6INYbDpAdeXkkVCbPvUycgsb
P6k8/2BBAQmHOevzykfYmH92tlPzPyTA8SC1+kNx2P2ZdNkZzOBvWdSx/GsC
Xk9sLFhdztR7a739PZGIO1Otk5oqSOh5Uq9k5JeIrdwz3HSrSMjmqxeriyfh
rbLrVojUMfzeUQn+uCoZj4aZCN+vJ6FyCbms+2gyLhp0GzjVQELqSaEAdkYy
XlP1z7PXb5h+S2vIZyu4WNRji2d6CwmPZ5x9I2e4uKL1yJF9bSRcqp+7O3BD
CvYzDDIW+kTC7FpB0QLXFNwv+0ze5QsJV1PffPpen4IF4T3z5TpJILz0tbbO
pGD7ofm/67tIMDU7J6vESsVNVWa12t9IsJcJ5BRdScUxpMfdnl4SXiou1bAo
ScVGvPjrqT9I2K9cfTmqNRU/8Hh/ftYACTiMMPlPLQ1nyjkov/xNwgn5YMmh
0jSsS6uzHP6QsOLxdS3VxjTctGtk49gYs8+7X6wV+tOw6PlwU+UpElyCy5Kt
1vBwdvReywd/SdgR18pK0uXhrfzlx/bNkLAgo7+Za87D7q/zPf3nULDLTWHw
mx8Pi3075y8lTIH/lLLhxlge5k9vDRfMpUD7Vb2fyXUe3iYjwt42j4Krk0uV
lEp4+L36q5QmUQrkhcVbyst52HMH94arGAWm/z02UW3gYXFr+9uzxCkwvqmm
bvGRh3PPrv8vaSFT30hVb1cvD0P4rzINCQoUrhwwmzfCwy28RzUVkhT80Zza
GPuXh73uhDUdkqLg0kOx9i9z0/GiGrNP/UsoqPjRT89amI4Fn5d9C5WhwPHz
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
wkyHwA==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
Bkod3+eTkN/7QfmWHw/tkbXMqVEmwcv7h1RvVgLidrHKDquQ8GlJvf1L1QTU
dVu0tU+VhJB3JwYdCuORPzySlFAnocsiZu2TB3Ho1gkl/wMkCVv7flQ/aGAj
seKh/W16JAh3KHXZ911D1QYxs/qtSGho/uOnvtYbSS1ylg08xMT8E4ey4Rw6
2rxdR9KGhOKnbsf3HfFAoy6/T1FHSAiay6kmN5xCKrG2zT7HSVDs2RgllXYI
hX5YXzhzlgR2Xc6AXrMd3n6m+vDiayRoy9e1zO8OxhPvew0rI0jYJKrndKwq
BJfqi1Pno0hY1Kev8oF/GausMBf9GEtCknpB6nLbMCxe2VIqSGLmeX7pR2/J
Vfx+Rf9C4DNxqpC35WQMjguVHB/OISFuZMjk6INYbDpAdeXkkVCbPvUycgsb
P6k8/2BBAQmHOevzykfYmH92tlPzPyTA8SC1+kNx2P2ZdNkZzOBvWdSx/GsC
Xk9sLFhdztR7a739PZGIO1Otk5oqSOh5Uq9k5JeIrdwz3HSrSMjmqxeriyfh
rbLrVojUMfzeUQn+uCoZj4aZCN+vJ6FyCbms+2gyLhp0GzjVQELqSaEAdkYy
XlP1z7PXb5h+S2vIZyu4WNRji2d6CwmPZ5x9I2e4uKL1yJF9bSRcqp+7O3BD
CvYzDDIW+kTC7FpB0QLXFNwv+0ze5QsJV1PffPpen4IF4T3z5TpJILz0tbbO
pGD7ofm/67tIMDU7J6vESsVNVWa12t9IsJcJ5BRdScUxpMfdnl4SXiou1bAo
ScVGvPjrqT9I2K9cfTmqNRU/8Hh/ftYACTiMMPlPLQ1nyjkov/xNwgn5YMmh
0jSsS6uzHP6QsOLxdS3VxjTctGtk49gYs8+7X6wV+tOw6PlwU+UpElyCy5Kt
1vBwdvReywd/SdgR18pK0uXhrfzlx/bNkLAgo7+Za87D7q/zPf3nULDLTWHw
mx8Pi3075y8lTIH/lLLhxlge5k9vDRfMpUD7Vb2fyXUe3iYjwt42j4Krk0uV
lEp4+L36q5QmUQrkhcVbyst52HMH94arGAWm/z02UW3gYXFr+9uzxCkwvqmm
bvGRh3PPrv8vaSFT30hVb1cvD0P4rzINCQoUrhwwmzfCwy28RzUVkhT80Zza
GPuXh73uhDUdkqLg0kOx9i9z0/GiGrNP/UsoqPjRT89amI4Fn5d9C5WhwPHz
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
wkyHwA==
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
Bkod3+eTkN/7QfmWHw/tkbXMqVEmwcv7h1RvVgLidrHKDquQ8GlJvf1L1QTU
dVu0tU+VhJB3JwYdCuORPzySlFAnocsiZu2TB3Ho1gkl/wMkCVv7flQ/aGAj
seKh/W16JAh3KHXZ911D1QYxs/qtSGho/uOnvtYbSS1ylg08xMT8E4ey4Rw6
2rxdR9KGhOKnbsf3HfFAoy6/T1FHSAiay6kmN5xCKrG2zT7HSVDs2RgllXYI
hX5YXzhzlgR2Xc6AXrMd3n6m+vDiayRoy9e1zO8OxhPvew0rI0jYJKrndKwq
BJfqi1Pno0hY1Kev8oF/GausMBf9GEtCknpB6nLbMCxe2VIqSGLmeX7pR2/J
Vfx+Rf9C4DNxqpC35WQMjguVHB/OISFuZMjk6INYbDpAdeXkkVCbPvUycgsb
P6k8/2BBAQmHOevzykfYmH92tlPzPyTA8SC1+kNx2P2ZdNkZzOBvWdSx/GsC
Xk9sLFhdztR7a739PZGIO1Otk5oqSOh5Uq9k5JeIrdwz3HSrSMjmqxeriyfh
rbLrVojUMfzeUQn+uCoZj4aZCN+vJ6FyCbms+2gyLhp0GzjVQELqSaEAdkYy
XlP1z7PXb5h+S2vIZyu4WNRji2d6CwmPZ5x9I2e4uKL1yJF9bSRcqp+7O3BD
CvYzDDIW+kTC7FpB0QLXFNwv+0ze5QsJV1PffPpen4IF4T3z5TpJILz0tbbO
pGD7ofm/67tIMDU7J6vESsVNVWa12t9IsJcJ5BRdScUxpMfdnl4SXiou1bAo
ScVGvPjrqT9I2K9cfTmqNRU/8Hh/ftYACTiMMPlPLQ1nyjkov/xNwgn5YMmh
0jSsS6uzHP6QsOLxdS3VxjTctGtk49gYs8+7X6wV+tOw6PlwU+UpElyCy5Kt
1vBwdvReywd/SdgR18pK0uXhrfzlx/bNkLAgo7+Za87D7q/zPf3nULDLTWHw
mx8Pi3075y8lTIH/lLLhxlge5k9vDRfMpUD7Vb2fyXUe3iYjwt42j4Krk0uV
lEp4+L36q5QmUQrkhcVbyst52HMH94arGAWm/z02UW3gYXFr+9uzxCkwvqmm
bvGRh3PPrv8vaSFT30hVb1cvD0P4rzINCQoUrhwwmzfCwy28RzUVkhT80Zza
GPuXh73uhDUdkqLg0kOx9i9z0/GiGrNP/UsoqPjRT89amI4Fn5d9C5WhwPHz
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
wkyHwA==
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.932797665182635*^9, 3.93281061277321*^9, 
  3.933225317734892*^9, 3.9338320145122337`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"81df49cc-490d-404c-8303-2b2941060255"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
3. Studio della configurazione degli stati iniziali che attivano sulla \
risposta libera alcuni modi naturali ed altri no\
\>", "Section",
 CellChangeTimes->{{3.932797732429241*^9, 3.932797751508608*^9}, {
  3.933143599530382*^9, 
  3.933143600039192*^9}},ExpressionUUID->"a0e4216d-8cfb-a74b-a152-\
fb5835604851"],

Cell[TextData[{
 "La risposta libera nello stato \[EGrave] una combinazione lineare \
dipendente dai modi naturali del sistema, perci\[OGrave] scegliendo un \
particolare stato iniziale che \[EGrave] \[OpenCurlyDoubleQuote]allineato\
\[CloseCurlyDoubleQuote] lungo la direzione di un autovalore, sulla risposta \
libera si accenderanno solo i modi associati a \
quell\[CloseCurlyQuote]autovalore. Se invece scegliessi combinazioni lineari \
dei modi naturali, si attiverebbero solo i modi presenti in quella \
combinazione lineare. Operativamente, si pone come stato iniziale una \
combinazione lineare delle colonne della matrice T relative agli stato che \
voglio visualizzare. Analizzo la configurazione che attiva i modi naturali \
corrispondenti alla coppia di autovalori ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"-", "3"}], "+", 
    FractionBox["\[ImaginaryI]", "4"]}], ",", 
   RowBox[{
    RowBox[{"-", "3"}], "-", 
    FractionBox["\[ImaginaryI]", "4"]}]}]], "Output",
  CellChangeTimes->{{3.93218174739272*^9, 3.932181763317114*^9}, 
    3.93278935035861*^9, 3.932810065074888*^9},ExpressionUUID->
  "495313d4-6e84-644d-a45f-0bb1b413ca48"],
 "."
}], "Text",
 CellChangeTimes->{
  3.932810776871168*^9, {3.932810811472135*^9, 3.932810812369148*^9}, 
   3.932810967440996*^9, {3.932811080314218*^9, 3.932811280509373*^9}, {
   3.932811905551258*^9, 3.932811979404663*^9}, {3.9332253499362793`*^9, 
   3.933225360010221*^9}, {3.9333982479548225`*^9, 
   3.9333982481118126`*^9}},ExpressionUUID->"6710f3a8-d88f-8e4f-a55f-\
d2a63f32a393"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["x", "TI"], "1"], TraditionalForm], "errors" -> {}, "input" -> 
    "x_1", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"1", "/", "2"}], 
    RowBox[{
     TemplateBox[<|"boxes" -> FormBox[
         OverscriptBox[
          StyleBox["T", "TI"], "^"], TraditionalForm], "errors" -> {}, 
       "input" -> "\\hat T", "state" -> "Boxes"|>,
      "TeXAssistantTemplate"], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"1", "/", "2"}], 
    RowBox[{
     TemplateBox[<|"boxes" -> FormBox[
         OverscriptBox[
          StyleBox["T", "TI"], "^"], TraditionalForm], "errors" -> {}, 
       "input" -> "\\hat T", "state" -> "Boxes"|>,
      "TeXAssistantTemplate"], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9328119959813747`*^9, 3.932812005317789*^9}, {
  3.932812069635103*^9, 3.932812136132015*^9}, {3.9328127126074905`*^9, 
  3.932812726686975*^9}, {3.932812878999857*^9, 3.932812881399475*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"0e86518f-3344-5c47-98ff-9818cd5f4652"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["184097", "833170"], ",", 
   FractionBox["191248", "1249755"], ",", 
   RowBox[{"-", 
    FractionBox["207212", "1249755"]}], ",", 
   FractionBox["1", "2"]}], "}"}]], "Output",
 CellChangeTimes->{{3.932812108539398*^9, 3.932812136906784*^9}, 
   3.932812738733767*^9, 3.932812948500208*^9, 3.9328736173954277`*^9, 
   3.9332253651393394`*^9, 3.933398778095167*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"ee8d3844-1aef-4841-8a63-0110a081c094"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["x", "TI"], 
        RowBox[{
          StyleBox["l", "TI"], "3"}]], TraditionalForm], "errors" -> {}, 
     "input" -> "x_{l3}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "[", "t_", "]"}], ":=", 
  RowBox[{"Expand", "[", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"MatrixExp", "[", 
      RowBox[{"A", " ", "t"}], "]"}], ".", 
     TemplateBox[<|"boxes" -> FormBox[
         SubscriptBox[
          StyleBox["x", "TI"], "1"], TraditionalForm], "errors" -> {}, 
       "input" -> "x_1", "state" -> "Boxes"|>,
      "TeXAssistantTemplate"]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.932812150853569*^9, 3.932812156043484*^9}, {
  3.932812367947344*^9, 3.932812368446211*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"3df3c95b-6a56-1947-9419-e37466f6e358"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["x", "TI"], 
        RowBox[{
          StyleBox["l", "TI"], "3"}]], TraditionalForm], "errors" -> {}, 
     "input" -> "x_{l3}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "[", "t", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.932812504575815*^9, 3.932812533725012*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"ce9da1f9-ef8b-db49-bf5e-17dc9c227030"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{"184097", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "3"}], " ", "t"}]], " ", 
          RowBox[{"Cos", "[", 
           FractionBox["t", "4"], "]"}]}], "833170"], "+", 
        FractionBox[
         RowBox[{"613907", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "3"}], " ", "t"}]], " ", 
          RowBox[{"Sin", "[", 
           FractionBox["t", "4"], "]"}]}], "2499510"]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"191248", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "3"}], " ", "t"}]], " ", 
          RowBox[{"Cos", "[", 
           FractionBox["t", "4"], "]"}]}], "1249755"], "+", 
        FractionBox[
         RowBox[{"135056", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "3"}], " ", "t"}]], " ", 
          RowBox[{"Sin", "[", 
           FractionBox["t", "4"], "]"}]}], "1249755"]}]},
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"207212", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "3"}], " ", "t"}]], " ", 
           RowBox[{"Cos", "[", 
            FractionBox["t", "4"], "]"}]}], "1249755"]}], "-", 
        FractionBox[
         RowBox[{"213524", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "3"}], " ", "t"}]], " ", 
          RowBox[{"Sin", "[", 
           FractionBox["t", "4"], "]"}]}], "1249755"]}]},
      {
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "3"}], " ", "t"}]], " ", 
         RowBox[{"Cos", "[", 
          FractionBox["t", "4"], "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "3"}], " ", "t"}]], " ", 
         RowBox[{"Sin", "[", 
          FractionBox["t", "4"], "]"}]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.932812517159241*^9, 3.93281253510144*^9}, 
   3.9328127432464924`*^9, 3.932812951787388*^9, 3.9328736210138464`*^9, 
   3.9332253704947624`*^9},
 CellLabel->
  "Out[54]//MatrixForm=",ExpressionUUID->"f2ba5545-f2ae-6642-badc-\
bdb96631d8e0"]
}, Open  ]],

Cell[TextData[{
 "Verifico proiettando lo stato lungo le colonne di ",
 Cell[BoxData[
  TemplateBox[<|"boxes" -> FormBox[
      OverscriptBox[
       StyleBox["T", "TI"], "^"], TraditionalForm], "errors" -> {}, "input" -> 
    "\\hat T", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"]], "Input",
  CellChangeTimes->{{3.9328119959813747`*^9, 3.932812005317789*^9}, {
   3.932812069635103*^9, 3.932812136132015*^9}, {3.9328127126074905`*^9, 
   3.932812726686975*^9}, {3.932812878999857*^9, 3.932812881399475*^9}},
  ExpressionUUID->"5d4efda7-685f-7247-9cdb-c4a34c081073"]
}], "Text",
 CellChangeTimes->{{3.9333986233512073`*^9, 
  3.933398661404026*^9}},ExpressionUUID->"3f7ada19-ee10-0f4b-965b-\
2f528ee6504a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["z", "TI"], "1"], TraditionalForm], "errors" -> {}, "input" -> 
    "z_1", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{
   RowBox[{"Inverse", "[", 
    TemplateBox[<|"boxes" -> FormBox[
        OverscriptBox[
         StyleBox["T", "TI"], "^"], TraditionalForm], "errors" -> {}, "input" -> 
      "\\hat T", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], "]"}], ".", 
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["x", "TI"], "1"], TraditionalForm], "errors" -> {}, "input" -> 
     "x_1", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"]}]}]], "Input",
 CellChangeTimes->{{3.933398666654026*^9, 3.933398716695235*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"a247d601-4569-5946-bdd8-574f979b988d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "2"], ",", 
   FractionBox["1", "2"], ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.933398719260561*^9, 3.9333987799701614`*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"ff1797c4-931c-d44a-8ab6-be62af32e0e3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["x", "TI"], 
        RowBox[{
          StyleBox["l", "TI"], "3", 
          StyleBox["z", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "x_{l3z}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "[", "t_", "]"}], ":=", 
  RowBox[{"Expand", "[", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     OverscriptBox["T", "^"], ".", 
     RowBox[{"MatrixExp", "[", 
      RowBox[{
       TemplateBox[<|"boxes" -> FormBox[
           OverscriptBox["\[CapitalLambda]", "^"], TraditionalForm], 
         "errors" -> {}, "input" -> "\\hat\\Lambda", "state" -> "Boxes"|>,
        "TeXAssistantTemplate"], " ", "t"}], "]"}], ".", 
     TemplateBox[<|"boxes" -> FormBox[
         SubscriptBox[
          StyleBox["z", "TI"], "1"], TraditionalForm], "errors" -> {}, 
       "input" -> "z_1", "state" -> "Boxes"|>,
      "TeXAssistantTemplate"]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{3.933398793941151*^9, 3.9333988356520844`*^9},
 CellLabel->"In[73]:=",ExpressionUUID->"60e079f6-7969-4e4e-b64c-14aafb0a497d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["x", "TI"], 
        RowBox[{
          StyleBox["l", "TI"], "3", 
          StyleBox["z", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "x_{l3z}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "[", "t", "]"}], " ", "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.93339886881896*^9, 3.93339887370426*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"fae75599-6ee7-1a49-a0f0-177ff4e82686"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        FractionBox[
         RowBox[{"184097", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "3"}], " ", "t"}]], " ", 
          RowBox[{"Cos", "[", 
           FractionBox["t", "4"], "]"}]}], "833170"], "+", 
        FractionBox[
         RowBox[{"613907", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "3"}], " ", "t"}]], " ", 
          RowBox[{"Sin", "[", 
           FractionBox["t", "4"], "]"}]}], "2499510"]}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"191248", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "3"}], " ", "t"}]], " ", 
          RowBox[{"Cos", "[", 
           FractionBox["t", "4"], "]"}]}], "1249755"], "+", 
        FractionBox[
         RowBox[{"135056", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "3"}], " ", "t"}]], " ", 
          RowBox[{"Sin", "[", 
           FractionBox["t", "4"], "]"}]}], "1249755"]}]},
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"207212", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "3"}], " ", "t"}]], " ", 
           RowBox[{"Cos", "[", 
            FractionBox["t", "4"], "]"}]}], "1249755"]}], "-", 
        FractionBox[
         RowBox[{"213524", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "3"}], " ", "t"}]], " ", 
          RowBox[{"Sin", "[", 
           FractionBox["t", "4"], "]"}]}], "1249755"]}]},
      {
       RowBox[{
        RowBox[{
         FractionBox["1", "2"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "3"}], " ", "t"}]], " ", 
         RowBox[{"Cos", "[", 
          FractionBox["t", "4"], "]"}]}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "3"}], " ", "t"}]], " ", 
         RowBox[{"Sin", "[", 
          FractionBox["t", "4"], "]"}]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.93339887417301*^9},
 CellLabel->
  "Out[74]//MatrixForm=",ExpressionUUID->"52e93052-60d3-6d4e-b3fd-\
e58d1394e5e6"]
}, Open  ]],

Cell[TextData[{
 "Come volevasi verificare. Analizzo adesso la configurazione che attiva i \
modi naturali corrispondenti alla coppia di autovalori ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    FractionBox["1", "3"], "+", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "3"]}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}]}]], "Output",
  CellChangeTimes->{{3.93218174739272*^9, 3.932181763317114*^9}, 
    3.93278935035861*^9, 3.932810065074888*^9},ExpressionUUID->
  "adc73d4b-cb5a-2f46-910c-86d171147613"]
}], "Text",
 CellChangeTimes->{{3.9328125769314747`*^9, 3.932812580254652*^9}, 
   3.9328128066026173`*^9, {3.933225375226742*^9, 3.933225382056326*^9}, {
   3.9333988811917515`*^9, 
   3.933398894209181*^9}},ExpressionUUID->"d7d505b7-3c00-a540-92c0-\
0ed37f2a942e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["x", "TI"], "2"], TraditionalForm], "errors" -> {}, "input" -> 
    "x_2", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", " ", 
  RowBox[{
   RowBox[{"5", 
    RowBox[{
     TemplateBox[<|"boxes" -> FormBox[
         OverscriptBox[
          StyleBox["T", "TI"], "^"], TraditionalForm], "errors" -> {}, 
       "input" -> "\\hat T", "state" -> "Boxes"|>,
      "TeXAssistantTemplate"], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "3"}], "]"}], "]"}]}], "+", 
   RowBox[{"3", 
    RowBox[{
     TemplateBox[<|"boxes" -> FormBox[
         OverscriptBox[
          StyleBox["T", "TI"], "^"], TraditionalForm], "errors" -> {}, 
       "input" -> "\\hat T", "state" -> "Boxes"|>,
      "TeXAssistantTemplate"], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "4"}], "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.932812961509878*^9, 3.932812995473839*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"f13e7767-43fe-4844-bb44-5a7b861a6785"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["15259", "7585"]}], ",", 
   RowBox[{"-", 
    FractionBox["28098", "7585"]}], ",", 
   RowBox[{"-", 
    FractionBox["13767", "1517"]}], ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.932812997809362*^9, 3.933225385922306*^9, 
  3.9333989946281643`*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"dbb9f36e-4e50-d94b-8db3-ff8b1ec513db"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["x", "TI"], 
        RowBox[{
          StyleBox["l", "TI"], "4"}]], TraditionalForm], "errors" -> {}, 
     "input" -> "x_{l4}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "[", "t_", "]"}], ":=", 
  RowBox[{"Expand", "[", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"MatrixExp", "[", 
      RowBox[{"A", " ", "t"}], "]"}], ".", 
     TemplateBox[<|"boxes" -> FormBox[
         SubscriptBox[
          StyleBox["x", "TI"], "2"], TraditionalForm], "errors" -> {}, 
       "input" -> "x_2", "state" -> "Boxes"|>,
      "TeXAssistantTemplate"]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{3.932813007926384*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"34b6d0c6-336d-5d4d-a128-c980fdcded27"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["x", "TI"], 
        RowBox[{
          StyleBox["l", "TI"], "4"}]], TraditionalForm], "errors" -> {}, 
     "input" -> "x_{l4}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "[", "t", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.932813024544367*^9, 3.9328130310745373`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"6522fa63-66c7-8b40-90f1-a9e339d2e213"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"15259", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "t"}], "/", "3"}]], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "t"}], "]"}]}], "7585"]}], "+", 
        FractionBox[
         RowBox[{"67467", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "t"}], "/", "3"}]], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "t"}], "]"}]}], "7585"]}]},
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"28098", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "t"}], "/", "3"}]], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "t"}], "]"}]}], "7585"]}], "-", 
        FractionBox[
         RowBox[{"17226", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "t"}], "/", "3"}]], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "t"}], "]"}]}], "7585"]}]},
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"13767", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "t"}], "/", "3"}]], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "t"}], "]"}]}], "1517"]}], "+", 
        FractionBox[
         RowBox[{"4347", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "t"}], "/", "3"}]], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "t"}], "]"}]}], "1517"]}]},
      {
       RowBox[{
        RowBox[{"5", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "t"}], "/", "3"}]], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "t"}], "/", "3"}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.932813039139436*^9, 3.933225389976888*^9},
 CellLabel->
  "Out[57]//MatrixForm=",ExpressionUUID->"0afffe71-854a-914c-9be7-\
857ea2962bb4"]
}, Open  ]],

Cell[TextData[{
 "Anche in questo caso verifico proiettando lo stato lungo le colonne di ",
 Cell[BoxData[
  TemplateBox[<|"boxes" -> FormBox[
      OverscriptBox[
       StyleBox["T", "TI"], "^"], TraditionalForm], "errors" -> {}, "input" -> 
    "\\hat T", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"]], "Input",
  CellChangeTimes->{{3.9328119959813747`*^9, 3.932812005317789*^9}, {
   3.932812069635103*^9, 3.932812136132015*^9}, {3.9328127126074905`*^9, 
   3.932812726686975*^9}, {3.932812878999857*^9, 3.932812881399475*^9}},
  ExpressionUUID->"18fb529d-48e6-eb41-ae12-fe0e15906b5e"]
}], "Text",
 CellChangeTimes->{{3.933398907695841*^9, 
  3.9333989342003326`*^9}},ExpressionUUID->"b341afad-dee0-ba4e-926b-\
db0412fee00a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["z", "TI"], "2"], TraditionalForm], "errors" -> {}, "input" -> 
    "z_2", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{
   RowBox[{"Inverse", "[", 
    TemplateBox[<|"boxes" -> FormBox[
        OverscriptBox[
         StyleBox["T", "TI"], "^"], TraditionalForm], "errors" -> {}, "input" -> 
      "\\hat T", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], "]"}], ".", 
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["x", "TI"], "2"], TraditionalForm], "errors" -> {}, "input" -> 
     "x_2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"]}]}]], "Input",
 CellChangeTimes->{3.9333989463432407`*^9},
 CellLabel->"In[78]:=",ExpressionUUID->"7bc0b28c-5595-604e-a63d-57d3d9417c84"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "5", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.933398997815668*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"6abd7c84-6e4e-614c-bc45-00ccab812321"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["x", "TI"], 
        RowBox[{
          StyleBox["l", "TI"], "4", 
          StyleBox["z", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "x_{l4z}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "[", "t_", "]"}], ":=", 
  RowBox[{"Expand", "[", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     OverscriptBox["T", "^"], ".", 
     RowBox[{"MatrixExp", "[", 
      RowBox[{
       TemplateBox[<|"boxes" -> FormBox[
           OverscriptBox["\[CapitalLambda]", "^"], TraditionalForm], 
         "errors" -> {}, "input" -> "\\hat\\Lambda", "state" -> "Boxes"|>,
        "TeXAssistantTemplate"], " ", "t"}], "]"}], ".", 
     TemplateBox[<|"boxes" -> FormBox[
         SubscriptBox[
          StyleBox["z", "TI"], "2"], TraditionalForm], "errors" -> {}, 
       "input" -> "z_2", "state" -> "Boxes"|>,
      "TeXAssistantTemplate"]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{3.9333989287445526`*^9},
 CellLabel->"In[79]:=",ExpressionUUID->"f5c32c5f-43c2-c246-b9fa-31e8c1523035"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["x", "TI"], 
        RowBox[{
          StyleBox["l", "TI"], "4", 
          StyleBox["z", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "x_{l4z}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "[", "t", "]"}], " ", "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{3.933398975128166*^9},
 CellLabel->"In[80]:=",ExpressionUUID->"aca6cc20-623c-c243-9559-3e1a0f95b09e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"15259", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "t"}], "/", "3"}]], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "t"}], "]"}]}], "7585"]}], "+", 
        FractionBox[
         RowBox[{"67467", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "t"}], "/", "3"}]], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "t"}], "]"}]}], "7585"]}]},
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"28098", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "t"}], "/", "3"}]], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "t"}], "]"}]}], "7585"]}], "-", 
        FractionBox[
         RowBox[{"17226", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "t"}], "/", "3"}]], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "t"}], "]"}]}], "7585"]}]},
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"13767", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "t"}], "/", "3"}]], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "t"}], "]"}]}], "1517"]}], "+", 
        FractionBox[
         RowBox[{"4347", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "t"}], "/", "3"}]], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "t"}], "]"}]}], "1517"]}]},
      {
       RowBox[{
        RowBox[{"5", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "t"}], "/", "3"}]], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "t"}], "/", "3"}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.9333989804719143`*^9, 3.933399001940628*^9}},
 CellLabel->
  "Out[80]//MatrixForm=",ExpressionUUID->"0a6c7a7d-5fc7-ae4d-8d38-\
e8fcfd53ed24"]
}, Open  ]],

Cell["Come volevasi dimostrare.", "Text",
 CellChangeTimes->{{3.9333990051936665`*^9, 
  3.9333990147430515`*^9}},ExpressionUUID->"c8464b78-9c94-ee48-b0c3-\
a84e0b834b79"]
}, Open  ]],

Cell[CellGroupData[{

Cell["4. Funzione di trasferimento, i suoi poli e zeri", "Section",
 CellChangeTimes->{{3.9328130812570953`*^9, 3.932813091926708*^9}, {
  3.933143603719862*^9, 
  3.933143604219198*^9}},ExpressionUUID->"d00ec35d-b710-044d-85c3-\
82d6b8a6a7a1"],

Cell[TextData[{
 "La funzione di trasferimento di un sistema LTI-TC \[EGrave] quella funzione \
di variabile complessa ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["s", "TI"], TraditionalForm], "errors" -> {}, "input" -> "s", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "64beb3c6-6fd4-3f42-a9bc-13b873dfe8f6"],
 " tale che moltiplicata algebricamente per la L-Trasformata dell\
\[CloseCurlyQuote]ingresso restituisce la L-Trasformata della risposta \
forzata. \[CapitalEGrave] definita come ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["G", "TI"], 
         RowBox[{"(", 
           StyleBox["s", "TI"], ")"}], "\[LongEqual]", 
         FractionBox[
          RowBox[{
            SubscriptBox[
             StyleBox["Y", "TI"], 
             StyleBox["f", "TI"]], "(", 
            StyleBox["s", "TI"], ")"}], 
          RowBox[{
            StyleBox["U", "TI"], "(", 
            StyleBox["s", "TI"], ")"}]]}], TraditionalForm], "errors" -> {}, 
     "input" -> "G(s)={Y_f(s)\\over U(s)}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "29301bfc-802d-8645-ac1e-2e93d3bcaecf"],
 ", ovvero il rapporto tra L-Trasformata della risposta forzata e \
L-Trasformata dell\[CloseCurlyQuote]ingresso. Esplicitando la L-Trasformata \
della risposta forzata come: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["Y", "TI"], 
          StyleBox["f", "TI"]], 
         RowBox[{"(", 
           StyleBox["s", "TI"], ")"}], "\[LongEqual]", 
         RowBox[{"[", 
           RowBox[{
             StyleBox["C", "TI"], 
             SuperscriptBox[
              RowBox[{"(", 
                RowBox[{
                  StyleBox["s", "TI"], 
                  SubscriptBox[
                   StyleBox["I", "TI"], 
                   StyleBox["n", "TI"]], "-", 
                  StyleBox["A", "TI"]}], ")"}], "-1"], 
             StyleBox["B", "TI"], "+", 
             StyleBox["D", "TI"]}], "]"}], "\[CenterDot]", 
         StyleBox["U", "TI"], 
         RowBox[{"(", 
           StyleBox["s", "TI"], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> "Y_f(s)=[C(sI_n-A)^{-1}B+D]\\cdot U(s)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "db1c2b21-cd89-2c4c-a818-43dc3d8e20f6"],
 " la funzione di trasferimento \[EGrave] pari a ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["G", "TI"], 
         RowBox[{"(", 
           StyleBox["s", "TI"], ")"}], "\[LongEqual]", 
         StyleBox["C", "TI"], 
         SuperscriptBox[
          RowBox[{"(", 
            RowBox[{
              StyleBox["s", "TI"], 
              SubscriptBox[
               StyleBox["I", "TI"], 
               StyleBox["n", "TI"]], "-", 
              StyleBox["A", "TI"]}], ")"}], "-1"], 
         StyleBox["B", "TI"], "+", 
         StyleBox["D", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "G(s)=C(sI_n-A)^{-1}B+D", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4bb8ae39-4922-4147-a505-8ab62c391180"],
 ". Nel caso di sistema proprio, ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["G", "TI"], 
         RowBox[{"(", 
           StyleBox["s", "TI"], ")"}], "\[LongEqual]", 
         StyleBox["C", "TI"], 
         SuperscriptBox[
          RowBox[{"(", 
            RowBox[{
              StyleBox["s", "TI"], 
              SubscriptBox[
               StyleBox["I", "TI"], 
               StyleBox["n", "TI"]], "-", 
              StyleBox["A", "TI"]}], ")"}], "-1"], 
         StyleBox["B", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "G(s)=C(sI_n-A)^{-1}B", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "052652e2-e796-0c44-a8da-10a9e5797df6"],
 ".\n"
}], "Text",
 CellChangeTimes->{{3.932813113480331*^9, 3.932813152903488*^9}, {
  3.932813577751396*^9, 3.9328135977045135`*^9}, {3.932813642247404*^9, 
  3.932813649817142*^9}, {3.932813974603489*^9, 3.932813980293604*^9}, {
  3.932814127847805*^9, 3.932814160075764*^9}, {3.932814194468254*^9, 
  3.932814195409159*^9}, {3.932814283524845*^9, 3.932814343375858*^9}, {
  3.932814575468675*^9, 3.932814608890415*^9}, {3.9332254488031273`*^9, 
  3.933225449414612*^9}, {3.933399421703684*^9, 3.9333994352065544`*^9}, {
  3.933399516896702*^9, 3.933399539682833*^9}, {3.933399586375572*^9, 
  3.933399590269131*^9}},ExpressionUUID->"dcdb867a-0ec2-b24f-bb2d-\
dee3e1da58cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"G", "[", "s_", "]"}], ":=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"C1", ".", 
    RowBox[{"Inverse", "[", 
     RowBox[{
      RowBox[{"s", " ", 
       RowBox[{"IdentityMatrix", "[", "4", "]"}]}], "-", "A"}], "]"}], ".", 
    "B"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.932814635095836*^9, 3.9328147074636*^9}, {
  3.932815444225073*^9, 3.932815445118847*^9}, {3.932815734368396*^9, 
  3.932815737746239*^9}, {3.9336599699858484`*^9, 3.933659971173271*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"225cf170-a298-284e-afe6-d04270845559"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"G", "[", "s", "]"}]], "Input",
 CellChangeTimes->{{3.932814781841975*^9, 3.932814782867411*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"8786a45e-7262-e142-a99b-ebb643fed56f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   FractionBox["432", 
    RowBox[{"5365", "+", 
     RowBox[{"4422", " ", "s"}], "+", 
     RowBox[{"2473", " ", 
      SuperscriptBox["s", "2"]}], "+", 
     RowBox[{"960", " ", 
      SuperscriptBox["s", "3"]}], "+", 
     RowBox[{"144", " ", 
      SuperscriptBox["s", "4"]}]}]], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.932814785545336*^9, 3.93281545084465*^9, 
  3.932873626743604*^9, 3.9329575675945663`*^9, 3.932986258600516*^9, 
  3.932989816699911*^9, 3.933046582130949*^9, 3.9330754707149677`*^9, 
  3.933134512749407*^9, 3.9331620142961407`*^9, 3.9332195168747177`*^9, 
  3.933223735826163*^9, 3.9332254279262943`*^9, 3.9334867283127217`*^9, 
  3.933832023636261*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"311f4f2b-3888-6141-a3a5-49f643d258a1"]
}, Open  ]],

Cell[TextData[{
 "Un polo \[EGrave] un numero complesso \[Rho] tale che: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox["lim", 
          RowBox[{
            StyleBox["s", "TI"], "\[Rule]", "\[Rho]"}]], 
         StyleBox["G", "TI"], 
         RowBox[{"(", 
           StyleBox["s", "TI"], ")"}], "\[LongEqual]", "\[Infinity]"}], 
       TraditionalForm], "errors" -> {}, "input" -> 
     "\\text{lim}_{s\\rightarrow\\rho}G(s)=\\infty", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "752011fa-7bb4-0540-9321-268085b20af9"],
 ", inoltre i poli sono le radici del denominatore della funzione di \
trasferimento ed anche un sottoinsieme dello spettro di A.\nUno zero \
\[EGrave] un numero complesso \[Zeta]  tale che: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["G", "TI"], 
         RowBox[{"(", "\[Zeta]", ")"}], "\[LongEqual]", "0"}], 
       TraditionalForm], "errors" -> {}, "input" -> "G(\\zeta)=0", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2f0681ec-8019-6c45-9cb2-9f0b72682d0d"],
 ", dunque gli zeri rappresentano le radici del numeratore della funzione di \
trasferimento."
}], "Text",
 CellChangeTimes->{{3.932815897996443*^9, 3.93281590788278*^9}, {
   3.932815944096409*^9, 3.932816005345531*^9}, {3.932816038299963*^9, 
   3.932816090578317*^9}, {3.932816213776434*^9, 3.932816219709215*^9}, {
   3.932816297313738*^9, 3.932816323635481*^9}, {3.932816541519708*^9, 
   3.932816615741035*^9}, 3.932816804899874*^9, {3.93281692133494*^9, 
   3.932816935304985*^9}, {3.9328169739824467`*^9, 
   3.932817087755186*^9}},ExpressionUUID->"7dc8024e-527d-374d-97ce-\
98611c2c0d36"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PoliFdt", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Denominator", "[", 
      RowBox[{"G", "[", "s", "]"}], "]"}], "==", "0"}], ",", "s"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.932817153488018*^9, 3.932817173325023*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"bb4906a1-61e7-7140-ab3d-ccbf73a2889e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"s", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "3"}], "-", 
      FractionBox["\[ImaginaryI]", "4"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "3"}], "+", 
      FractionBox["\[ImaginaryI]", "4"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "3"]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "3"]}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.93281717439872*^9, 3.932873629399086*^9, 
  3.9332195238626213`*^9, 3.933225489767622*^9, 3.9338320260739174`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"a8367510-5133-c34e-a9c2-317613664753"]
}, Open  ]],

Cell["In questo caso i poli coincidono con gli autovalori di A", "Text",
 CellChangeTimes->{{3.932817182704271*^9, 3.932817213005663*^9}, {
   3.933219528592457*^9, 3.933219562112664*^9}, 
   3.934352426313097*^9},ExpressionUUID->"cac62118-a558-c644-aac2-\
c32563f0fa86"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ZeriFdt", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Numerator", "[", 
      RowBox[{"G", "[", "s", "]"}], "]"}], "==", "0"}], ",", "s"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.932817253359236*^9, 3.9328172675449257`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"bf886817-e6b0-d04c-a6d3-2ac0d43e10e6"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.9328172722641144`*^9, 3.9328736315437307`*^9, 
  3.9332195682742043`*^9, 3.933225495153288*^9, 3.933832027800497*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"243a377c-e827-b246-8a11-fe592cafaaaa"]
}, Open  ]],

Cell["Verifico i calcoli tramite funzioni built-in di Mathematica", "Text",
 CellChangeTimes->{{3.932817288827751*^9, 3.932817311410074*^9}, {
  3.9333999328773384`*^9, 
  3.9333999366742077`*^9}},ExpressionUUID->"d7139afd-5034-9b44-838c-\
442343cac216"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalSigma]", "=", 
  RowBox[{"StateSpaceModel", "[", 
   RowBox[{"{", 
    RowBox[{"A", ",", "B", ",", "C1"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.932817343540525*^9, 3.932817377102455*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"9d4d1800-5e1e-9c48-9862-1069f85a6f17"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["9403", "288"], 
   FractionBox["3847", "144"], 
   RowBox[{"-", 
     FractionBox["2933", "72"]}], 
   RowBox[{"-", 
     FractionBox["10747", "288"]}], 
   FractionBox["1", "2"], "1", 
   RowBox[{"-", "1"}], "0", 
   RowBox[{"-", "1"}], "0", "2", 
   RowBox[{"-", "1"}], 
   RowBox[{"-", "1"}], "0", "0", 
   FractionBox["8827", "288"], 
   FractionBox["3847", "144"], 
   RowBox[{"-", 
     FractionBox["2789", "72"]}], 
   RowBox[{"-", 
     FractionBox["10747", "288"]}], 
   FractionBox["1", "2"], 
   RowBox[{"-", "3"}], 
   RowBox[{"-", "3"}], "3", "3", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3, $CellContext`stname4}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 4, 1, {}, {False, False}, False, Automatic, None, 
    Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5}, {#6, #7, #8, #9, #10}, {#11, #12, #13, \
#14, #15}, {#16, #17, #18, #19, #20}, {#21, #22, #23, #24, #25}}, 
        AllowedDimensions -> {5, 5}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, DefaultBaseStyle -> 
        "SystemsModelGrid00"], ")"}], #26, 
     ButtonBox[
      GraphicsBox[{
        RectangleBox[{0, 0}, DefaultBaseStyle -> "SystemsModelSuperscript"], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", DefaultBaseStyle -> 
          "SystemsModelSuperscript"], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 9}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{11, 14}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 19}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 5}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{10, 10}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{15, 15}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{20, 20}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{21, 24}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{25, 25}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#26}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellChangeTimes->{3.932817381181933*^9, 3.9328736394912386`*^9, 
  3.9332255177250385`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"245ad06f-4026-fd47-b1b6-620fc7030eb5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TransferFunctionModel", "[", "\[CapitalSigma]", "]"}]], "Input",
 CellChangeTimes->{{3.932817390522611*^9, 3.932817397611391*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"7aad92a8-8806-e444-a656-b7d397332318"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{
    FractionBox["3", 
     RowBox[{
       FractionBox["5365", "144"], "+", 
       FractionBox[
        RowBox[{"737", " ", "\[FormalS]"}], "24"], "+", 
       FractionBox[
        RowBox[{"2473", " ", 
          SuperscriptBox["\[FormalS]", "2"]}], "144"], "+", 
       FractionBox[
        RowBox[{"20", " ", 
          SuperscriptBox["\[FormalS]", "3"]}], "3"], "+", 
       SuperscriptBox["\[FormalS]", "4"]}]], 
    InterpretationBox["\[InvisibleSpace]", None], {
    TransferFunctionModel, {
     False, False, {False, False}}, $Failed, {{Control`CommonDump`$DUMMY$}, {
      Control`CommonDump`$DUMMY$}}, InterpretationBox[#, 
      TransferFunctionModel[{{{3}}, Rational[5365, 144] + 
        Rational[737, 24] \[FormalS] + Rational[2473, 144] \[FormalS]^2 + 
        Rational[20, 3] \[FormalS]^3 + \[FormalS]^4}, \[FormalS]], AutoDelete -> 
      True, Editable -> True, BaseStyle -> 
      "TransferFunctionModelMinimal"]& , \[FormalS], 1, 1, 
     Control`CountStates[
      TransferFunctionModel[{{{3}}, Rational[5365, 144] + 
        Rational[737, 24] \[FormalS] + Rational[2473, 144] \[FormalS]^2 + 
        Rational[20, 3] \[FormalS]^3 + \[FormalS]^4}, \[FormalS]]], 1, {}, {
     False, False}, False, Automatic, None, Automatic}, {}},
   "TransferFunctionModelFull",
   BaseStyle->{NumberMarks -> False},
   DisplayFunction->(TagBox[
     SubsuperscriptBox[
      RowBox[{"(", 
        GridBox[{{#}}, AllowedDimensions -> {1, 1}, 
         GridBoxDividers -> {
          "Rows" -> {False, {False}, False}, 
           "Columns" -> {False, {False}, False}}, DefaultBaseStyle -> 
         "SystemsModelGrid00"], ")"}], #2, 
      ButtonBox[
       GraphicsBox[{
         RectangleBox[{0, 0}, DefaultBaseStyle -> "SystemsModelSuperscript"], 
         InsetBox[
          StyleBox[
          "\[ScriptCapitalT]", DefaultBaseStyle -> 
           "SystemsModelSuperscript"], {0.5, 0.5}]}, ImageSize -> 20], 
       ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
         ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
       None], MultilineFunction -> None], 
     EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
           FrontEnd`Value[
            FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
       True}]]& ),
   InterpretationFunction->(
    RowBox[{"TransferFunctionModel", "[", "Unevaluated", "[", 
      RowBox[{"{", 
        RowBox[{"{", 
          TemplateSlotSequence[{1, 1}, ","], "}"}], "}"}], "]", ",", 
      "\[FormalS]", ",", "SamplingPeriod", "->", 
      RowBox[{#2}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
   Tooltip->TransferFunctionModel],
  TransferFunctionModel[{{{3}}, Rational[5365, 144] + 
    Rational[737, 24] \[FormalS] + Rational[2473, 144] \[FormalS]^2 + 
    Rational[20, 3] \[FormalS]^3 + \[FormalS]^4}, \[FormalS]],
  AutoDelete->True,
  BaseStyle->"TransferFunctionModelMinimal",
  Editable->True]], "Output",
 CellChangeTimes->{3.932817399920889*^9, 3.9328736480932245`*^9, 
  3.933225518206497*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"611d4ca1-229f-1c4b-b0fb-d67ea608f6e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TransferFunctionPoles", "[", "\[CapitalSigma]", "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.932817429097103*^9, 3.932817444614036*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"64c16123-6792-f547-81ac-419b07699812"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "3"}], "-", 
    FractionBox["\[ImaginaryI]", "4"]}], ",", 
   RowBox[{
    RowBox[{"-", "3"}], "+", 
    FractionBox["\[ImaginaryI]", "4"]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "3"]}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "3"]}], "+", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.9328174453009624`*^9, 3.932873671065349*^9, 
  3.9332255183054695`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"dafb456f-3e0d-c443-ae62-1e1a4bc46336"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TransferFunctionZeros", "[", "\[CapitalSigma]", "]"}]], "Input",
 CellChangeTimes->{{3.932817463463678*^9, 3.932817472341736*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"1893b7c7-47a7-1a4d-8cdc-79d8db99d515"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"{", "}"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.932817473116129*^9, 3.93287367808148*^9, 
  3.9332255209213448`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"f416f17f-f2fd-bf4a-b609-ead79d01f1fe"]
}, Open  ]],

Cell["Come volevasi verificare i risultati sono corretti.", "Text",
 CellChangeTimes->{{3.932817476358282*^9, 
  3.932817489789755*^9}},ExpressionUUID->"06e165e6-e392-074b-824a-\
f687e12d49d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["5. Risposta al gradino unitario", "Section",
 CellChangeTimes->{{3.932817975226541*^9, 3.9328179796673603`*^9}, {
  3.9331436095744724`*^9, 
  3.933143610327463*^9}},ExpressionUUID->"12466a94-1073-0a44-9963-\
b8d1bc3b7120"],

Cell[CellGroupData[{

Cell["5.1 Calcolo risposta al gradino unitario", "Subsection",
 CellChangeTimes->{{3.933226031719351*^9, 
  3.9332260410949707`*^9}},ExpressionUUID->"3c24433d-24b0-8949-95c8-\
eb71ab7e29a9"],

Cell[TextData[{
 "Il gradino unitario \[EGrave] un segnale di tipo polinomiale, right-sided \
definito tramite notazione piecewise: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"1", 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[LongEqual]"}], TraditionalForm], 
     "errors" -> {}, "input" -> "1(t)=", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "b5be1579-7771-6143-9f5b-b689412ebcc6"],
 Cell[BoxData[
  FormBox[
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {"1", 
          RowBox[{"t", 
           TemplateBox[<|"boxes" -> FormBox[
               RowBox[{"\[GreaterEqual]", "0"}], TraditionalForm], 
             "errors" -> {}, "input" -> "\\ge 0", "state" -> "Boxes"|>,
            "TeXAssistantTemplate"]}]},
         {"0", 
          RowBox[{"t", " ", "<", " ", "0"}]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True], TraditionalForm]],ExpressionUUID->
  "6113a083-f7be-2040-afa4-5439dba1ea68"],
 ". Per determinare la risposta al gradino unitario, si utilizzer\[AGrave] la \
risposta forzata, che \[EGrave] pari al prodotto tra funzione di \
trasferimento e la L-Trasformata dell\[CloseCurlyQuote]ingresso. In questo \
caso l\[CloseCurlyQuote]ingresso \[EGrave] il gradino unitario quindi si \
utilizzer\[AGrave] la L-Trasformata del gradino unitario pari a ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       FractionBox["1", 
        StyleBox["s", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
     "1\\over s", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "a5f334f9-5f06-0244-912b-1c1d54c9b4c0"],
 ", ricavata dalla L-Trasformata dell\[CloseCurlyQuote]esponenziale, \
considerando ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["a", "TI"], "\[LongEqual]", "0"}], TraditionalForm], 
     "errors" -> {}, "input" -> "a=0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "5cb02972-3ba9-5e45-8aa6-062c0aa28225"],
 ": ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["L", "TI"], 
         RowBox[{"[", 
           SuperscriptBox[
            StyleBox["e", "TI"], 
            RowBox[{
              StyleBox["a", "TI"], 
              StyleBox["t", "TI"]}]], "]"}], "\[LongEqual]", 
         FractionBox["1", 
          RowBox[{
            StyleBox["s", "TI"], "-", 
            StyleBox["a", "TI"]}]]}], TraditionalForm], "errors" -> {}, 
     "input" -> "L[e^{at}]={1\\over s-a}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "5d036388-9aad-774c-8342-daf993f6b4d3"],
 "."
}], "Text",
 CellChangeTimes->{{3.932873710433588*^9, 3.932874057323309*^9}, {
  3.932874121845783*^9, 3.9328741749363537`*^9}, {3.93287427979755*^9, 
  3.932874331249191*^9}, {3.932877393252666*^9, 
  3.93287745736166*^9}},ExpressionUUID->"4caaf8d6-800d-5d4d-b8d6-\
33bd979a0ad3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"U", "[", "s", "]"}], "=", 
  RowBox[{"LaplaceTransform", "[", 
   RowBox[{"1", ",", "t", ",", "s"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.93287434027017*^9, 3.9328743861917477`*^9}, {
  3.933136991577521*^9, 3.933137010303362*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"cdbf23b7-d161-aa42-a6d3-fd454e99e5ed"],

Cell[BoxData[
 FractionBox["1", "s"]], "Output",
 CellChangeTimes->{3.932874389105375*^9, 3.932878320744901*^9, 
  3.932962306935222*^9, 3.9329862522344093`*^9, 3.93313701114276*^9, 
  3.933162026560425*^9, 3.9332256324846325`*^9, 3.933486733660759*^9, 
  3.9338320311125526`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"6fc98092-8e23-ef45-93b4-3e2271e2175f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["Y", "TI"], 
        StyleBox["f", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
     "Y_f", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "[", "s_", "]"}], ":=", 
  RowBox[{
   RowBox[{"G", "[", "s", "]"}], 
   RowBox[{"U", "[", "s", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.932874396772175*^9, 3.932874419739452*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"b7f7c719-aa3c-874b-ab67-fa690a61bc7c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["Y", "TI"], 
       StyleBox["f", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
    "Y_f", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "[", "s", "]"}]], "Input",
 CellChangeTimes->{{3.932874426662489*^9, 3.9328744411904488`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"dd1e7a3b-e6e5-f741-ab83-442a3aca86da"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   FractionBox["432", 
    RowBox[{"s", " ", 
     RowBox[{"(", 
      RowBox[{"5365", "+", 
       RowBox[{"4422", " ", "s"}], "+", 
       RowBox[{"2473", " ", 
        SuperscriptBox["s", "2"]}], "+", 
       RowBox[{"960", " ", 
        SuperscriptBox["s", "3"]}], "+", 
       RowBox[{"144", " ", 
        SuperscriptBox["s", "4"]}]}], ")"}]}]], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.932874445178093*^9, 3.932878324051616*^9, 3.932879509778858*^9, 
   3.9328802519305706`*^9, 3.932962310025585*^9, {3.932986262162716*^9, 
   3.932986267266741*^9}, {3.932986377214721*^9, 3.932986381668009*^9}, 
   3.933162030251915*^9, 3.933162085158577*^9, 3.9332256365545387`*^9, 
   3.933225907547863*^9, 3.933486736563848*^9, 3.933832034365118*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"25cbd851-f799-3a43-92f1-1eddaa20de3d"]
}, Open  ]],

Cell[TextData[{
 "La risposta forzata ottenuta \[EGrave] per\[OGrave] nel dominio della \
variabile complessa ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["s", "TI"], TraditionalForm], "errors" -> {}, "input" -> "s", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "a95406a8-e0cc-b24e-984e-f3d05ba83c1d"],
 " e non nel dominio del tempo. Per ottenere la risposta forzata nel dominio \
del tempo, occorre antitrasformare il risultato ottenuto. Dato che la \
risposta forzata \[EGrave] esprimibile come combinazione lineare del \
contributo dell\[CloseCurlyQuote]ingresso pi\[UGrave] la combinazione lineare \
dei modi naturali, si utilizzer\[AGrave] la scomposizione in fratti semplici \
e la formula elementare di Heaviside per passare al dominio del tempo. La \
scomposizione in fratti semplici in questo caso oltre a considerare i poli \
della funzione di trasferimento, considera un polo aggiuntivo legato all\
\[CloseCurlyQuote]ingresso pari a ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        RowBox[{
          StyleBox["s", "TI"], "\[LongEqual]", "0"}], TraditionalForm], 
      "errors" -> {}, "input" -> "s=0", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], "."}], TraditionalForm]],ExpressionUUID->
  "46c9e032-cf37-ad48-a97c-20a3aca48ddb"],
 "\nLa formula elementare di Heaviside \[EGrave] pari a: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["F", "TI"], 
         RowBox[{"(", 
           StyleBox["s", "TI"], ")"}], "\[LongEqual]", 
         FractionBox[
          RowBox[{
            SubscriptBox[
             StyleBox["n", "TI"], 
             StyleBox["f", "TI"]], "(", 
            StyleBox["s", "TI"], ")"}], 
          RowBox[{
            RowBox[{"(", 
              RowBox[{
                StyleBox["s", "TI"], "-", 
                SubscriptBox[
                 StyleBox["p", "TI"], "1"]}], ")"}], 
            RowBox[{"(", 
              RowBox[{
                StyleBox["s", "TI"], "-", 
                SubscriptBox[
                 StyleBox["p", "TI"], "2"]}], ")"}], "...", 
            RowBox[{"(", 
              RowBox[{
                StyleBox["s", "TI"], "-", 
                SubscriptBox[
                 StyleBox["p", "TI"], 
                 StyleBox["n", "TI"]]}], ")"}]}]], "\[LongEqual]", 
         FractionBox[
          SubscriptBox[
           StyleBox["C", "TI"], "1"], 
          RowBox[{"(", 
            RowBox[{
              StyleBox["s", "TI"], "-", 
              SubscriptBox[
               StyleBox["p", "TI"], "1"]}], ")"}]], "+", 
         FractionBox[
          SubscriptBox[
           StyleBox["C", "TI"], "2"], 
          RowBox[{"(", 
            RowBox[{
              StyleBox["s", "TI"], "-", 
              SubscriptBox[
               StyleBox["p", "TI"], "2"]}], ")"}]], "+", "...", "+", 
         FractionBox[
          SubscriptBox[
           StyleBox["C", "TI"], 
           StyleBox["n", "TI"]], 
          RowBox[{"(", 
            RowBox[{
              StyleBox["s", "TI"], "-", 
              SubscriptBox[
               StyleBox["p", "TI"], 
               StyleBox["n", "TI"]]}], ")"}]]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "F(s)={n_f(s)\\over (s-p_1)(s-p_2)...(s-p_n)}={C_1\\over \
(s-p_1)}+{C_2\\over (s-p_2)}+...+{C_n\\over (s-p_n)}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "01b05e3f-0764-7c46-9eab-95bffc940677"],
 " dove l\[CloseCurlyQuote]i-esimo coefficiente ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["C", "TI"], 
        StyleBox["i", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
     "C_i", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "0e1028ba-a937-4a42-8fcd-670617e7c005"],
 " \[EGrave] pari a: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["C", "TI"], 
          StyleBox["i", "TI"]], "\[LongEqual]", 
         SubscriptBox["lim", 
          RowBox[{
            StyleBox["s", "TI"], "\[Rule]", 
            SubscriptBox[
             StyleBox["p", "TI"], 
             StyleBox["i", "TI"]]}]], 
         RowBox[{"(", 
           RowBox[{
             StyleBox["s", "TI"], "-", 
             SubscriptBox[
              StyleBox["p", "TI"], 
              StyleBox["i", "TI"]]}], ")"}], 
         StyleBox["F", "TI"], 
         RowBox[{"(", 
           StyleBox["s", "TI"], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> "C_i=\\text{lim}_{s\\rightarrow p_i}(s-p_i)F(s)", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "3b4c624d-8947-d448-be98-3faad2fcd9da"],
 ".\nLa scomposizione in fratti semplici risulta essere la seguente:"
}], "Text",
 CellChangeTimes->{{3.932874485863723*^9, 3.932874606765077*^9}, {
  3.93287466510309*^9, 3.932874794998598*^9}, {3.9328748481807384`*^9, 
  3.932874926076257*^9}, {3.932875151349754*^9, 3.932875236521314*^9}, {
  3.932875329037576*^9, 3.932875380890671*^9}, {3.932875488524421*^9, 
  3.932875547721271*^9}, {3.932875593067367*^9, 3.932875758633728*^9}, {
  3.932875879376262*^9, 3.932875943855696*^9}, {3.932876014221985*^9, 
  3.932876055230444*^9}, {3.932876101591747*^9, 3.932876135574774*^9}, {
  3.932876174866049*^9, 3.932876180832166*^9}, {3.932876522646169*^9, 
  3.9328765238044167`*^9}, {3.933225669169628*^9, 
  3.933225722002857*^9}},ExpressionUUID->"62bb1757-b704-004b-93ef-\
ef3d79f07614"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fs", "=", 
  RowBox[{
   FractionBox[
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["C", "TI"], "1"], TraditionalForm], "errors" -> {}, "input" -> 
      "C_1", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], "s"], "+", 
   FractionBox[
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["C", "TI"], "2"], TraditionalForm], "errors" -> {}, "input" -> 
      "C_2", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], 
    RowBox[{"s", "+", "3", "+", 
     FractionBox["\[ImaginaryI]", "4"]}]], "+", 
   FractionBox[
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["C", "TI"], "3"], TraditionalForm], "errors" -> {}, "input" -> 
      "C_3", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], 
    RowBox[{"s", "+", "3", "-", 
     FractionBox["\[ImaginaryI]", "4"]}]], "+", 
   FractionBox[
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["C", "TI"], "4"], TraditionalForm], "errors" -> {}, "input" -> 
      "C_4", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], 
    RowBox[{"s", "+", 
     FractionBox["1", "3"], "+", 
     RowBox[{"2", " ", "\[ImaginaryI]"}]}]], "+", 
   FractionBox[
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["C", "TI"], "4"], TraditionalForm], "errors" -> {}, "input" -> 
      "C_4", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], 
    RowBox[{"s", "+", 
     FractionBox["1", "3"], "-", 
     RowBox[{"2", " ", "\[ImaginaryI]"}]}]]}]}]], "Input",
 CellChangeTimes->{{3.93287619377133*^9, 3.932876310559055*^9}, {
  3.932877222909441*^9, 3.932877240799719*^9}, {3.9338320799502563`*^9, 
  3.933832083577711*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"211fdaf2-c428-404d-a65a-0f64837fb114"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SubscriptBox["C", "1"], "s"], "+", 
  FractionBox[
   SubscriptBox["C", "2"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "+", 
      FractionBox["\[ImaginaryI]", "4"]}], ")"}], "+", "s"}]], "+", 
  FractionBox[
   SubscriptBox["C", "3"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "-", 
      FractionBox["\[ImaginaryI]", "4"]}], ")"}], "+", "s"}]], "+", 
  FractionBox[
   SubscriptBox["C", "4"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", "3"], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], "+", "s"}]], "+", 
  FractionBox[
   SubscriptBox["C", "4"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", "3"], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], "+", "s"}]]}]], "Output",
 CellChangeTimes->{
  3.9328763186417*^9, 3.932877247225374*^9, 3.932878326336647*^9, 
   3.9329623117409487`*^9, 3.9329862698221607`*^9, 3.933162033472204*^9, 
   3.933225723909059*^9, {3.933486739160223*^9, 3.9334867491678047`*^9}, 
   3.9338320375086136`*^9, 3.9338320846204777`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"1160231a-7256-0d44-a38e-ca13188d7c34"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["C", "TI"], "1"], TraditionalForm], "errors" -> {}, "input" -> 
    "C_1", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"s", 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["Y", "TI"], 
           StyleBox["f", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
        "Y_f", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], "[", "s", "]"}]}], ",", " ", 
    RowBox[{"s", " ", "\[Rule]", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9328767506911945`*^9, 3.932876808651029*^9}, {
  3.93287684126622*^9, 3.932876861368713*^9}, {3.932876907813558*^9, 
  3.932876932851253*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"708f46f0-7d65-d34a-82dd-7e4b33443d7b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   FractionBox["432", "5365"], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.9328769345747*^9, 3.932878328372999*^9, 
  3.932962219583046*^9, 3.932962314235927*^9, 3.932986272342558*^9, 
  3.9331620353399467`*^9, 3.9332257271035366`*^9, 3.9334867474194517`*^9, 
  3.933832100411171*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"dbbc4ffa-603d-3949-95ee-bf617cf4c1fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["C", "TI"], "2"], TraditionalForm], "errors" -> {}, "input" -> 
    "C_2", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"s", "+", "3", "+", 
       FractionBox["\[ImaginaryI]", "4"]}], ")"}], 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["Y", "TI"], 
           StyleBox["f", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
        "Y_f", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], "[", "s", "]"}]}], ",", " ", 
    RowBox[{"s", " ", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "3"}], "-", 
      FractionBox["\[ImaginaryI]", "4"]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.9328769478955784`*^9, {3.932876997632173*^9, 3.932877044216915*^9}, {
   3.932968120308614*^9, 3.932968128732965*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"d5e6e876-cff5-804c-9b16-5b749ce591ef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["2692224", "74476205"]}], "-", 
    FractionBox[
     RowBox[{"2612736", " ", "\[ImaginaryI]"}], "14895241"]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.932877047768835*^9, 3.932878330003544*^9, 3.93296222123529*^9, 
   3.932962316302507*^9, {3.9329682272047577`*^9, 3.932968256002718*^9}, 
   3.9329862749316*^9, 3.9331620372700977`*^9, 3.933225728959301*^9, 
   3.9334867514550347`*^9, 3.933832102693775*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"50c7e339-6316-9740-bde5-61a434b055b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["C", "TI"], "3"], TraditionalForm], "errors" -> {}, "input" -> 
    "C_3", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"s", "+", "3", "-", 
       FractionBox["\[ImaginaryI]", "4"]}], ")"}], 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["Y", "TI"], 
           StyleBox["f", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
        "Y_f", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], "[", "s", "]"}]}], ",", " ", 
    RowBox[{"s", " ", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "3"}], "+", 
      FractionBox["\[ImaginaryI]", "4"]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.93287705669932*^9, 3.932877072922907*^9}, {
  3.932877259829925*^9, 3.93287726787615*^9}, {3.932877583730575*^9, 
  3.9328775928483505`*^9}, {3.932877755633518*^9, 3.932877761251055*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"936cdd1e-44ee-ba4e-863a-0f580ba22e20"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["2692224", "74476205"]}], "+", 
    FractionBox[
     RowBox[{"2612736", " ", "\[ImaginaryI]"}], "14895241"]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.932877078601395*^9, 3.932877273080341*^9, 
  3.932877596287815*^9, 3.932877763338001*^9, 3.932878332573318*^9, 
  3.932962222687441*^9, 3.9329623184719048`*^9, 3.9329862773120594`*^9, 
  3.9331620391146564`*^9, 3.933225730946005*^9, 3.933486753571689*^9, 
  3.933832104393051*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"8602390d-b2f8-6b48-ae67-353bc940e9d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["C", "TI"], "4"], TraditionalForm], "errors" -> {}, "input" -> 
    "C_4", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"s", "+", 
       FractionBox["1", "3"], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["Y", "TI"], 
           StyleBox["f", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
        "Y_f", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], "[", "s", "]"}]}], ",", " ", 
    RowBox[{"s", " ", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "3"]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.93287709584927*^9, 3.932877103755319*^9}, {
  3.93287714856954*^9, 3.932877153621187*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"ef8ec033-af01-924c-83f5-a6c4ad8cb4f7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["390744", "95021365"]}], "-", 
    FractionBox[
     RowBox[{"3134052", " ", "\[ImaginaryI]"}], "95021365"]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9328771550069065`*^9, 3.932878334133225*^9, 
  3.932962224278656*^9, 3.932962320163124*^9, 3.932986279130754*^9, 
  3.933162040739153*^9, 3.9332257325122185`*^9, 3.933486755201203*^9, 
  3.9338321055334663`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"3d37807e-94df-194a-88d0-d24aff71286e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["C", "TI"], "5"], TraditionalForm], "errors" -> {}, "input" -> 
    "C_5", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"s", "+", 
       FractionBox["1", "3"], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["Y", "TI"], 
           StyleBox["f", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
        "Y_f", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], "[", "s", "]"}]}], ",", " ", 
    RowBox[{"s", " ", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "3"]}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.932877160186743*^9, 3.932877179931114*^9}, {
  3.932877285349666*^9, 3.932877289163943*^9}, {3.932877604848799*^9, 
  3.932877611180717*^9}, {3.932877647931443*^9, 3.932877655894083*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"ba7b94f3-514a-c947-b30e-9ea816269618"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["390744", "95021365"]}], "+", 
    FractionBox[
     RowBox[{"3134052", " ", "\[ImaginaryI]"}], "95021365"]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.932877292036104*^9, 3.932877668570741*^9, 
  3.9328783359472027`*^9, 3.932962225796226*^9, 3.932962321708809*^9, 
  3.932986281201626*^9, 3.933162042549177*^9, 3.933225734790062*^9, 
  3.93348675707107*^9, 3.9338321063637924`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"9c531f2c-1030-5f43-8761-d8a4a8545a2d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["fs"], "Input",
 CellChangeTimes->{{3.933832118874811*^9, 3.933832119020134*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"ace1496b-1d6c-7e4b-9236-7a0f96ceb5c9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["432", 
     RowBox[{"5365", " ", "s"}]], "-", 
    FractionBox[
     RowBox[{
      FractionBox["390744", "95021365"], "+", 
      FractionBox[
       RowBox[{"3134052", " ", "\[ImaginaryI]"}], "95021365"]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "3"], "-", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], "+", "s"}]], "-", 
    FractionBox[
     RowBox[{
      FractionBox["390744", "95021365"], "+", 
      FractionBox[
       RowBox[{"3134052", " ", "\[ImaginaryI]"}], "95021365"]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "3"], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], "+", "s"}]], "-", 
    FractionBox[
     RowBox[{
      FractionBox["2692224", "74476205"], "-", 
      FractionBox[
       RowBox[{"2612736", " ", "\[ImaginaryI]"}], "14895241"]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"3", "-", 
        FractionBox["\[ImaginaryI]", "4"]}], ")"}], "+", "s"}]], "-", 
    FractionBox[
     RowBox[{
      FractionBox["2692224", "74476205"], "+", 
      FractionBox[
       RowBox[{"2612736", " ", "\[ImaginaryI]"}], "14895241"]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"3", "+", 
        FractionBox["\[ImaginaryI]", "4"]}], ")"}], "+", "s"}]]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.933832119781931*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"141bc6f9-a223-bc4b-ba26-7392c2d42f5e"]
}, Open  ]],

Cell[TextData[{
 "Ricordando di nuovo che la L-Trasformata dell\[CloseCurlyQuote]esponenziale \
\[EGrave]: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["L", "TI"], 
         RowBox[{"[", 
           SuperscriptBox[
            StyleBox["e", "TI"], 
            RowBox[{
              StyleBox["a", "TI"], 
              StyleBox["t", "TI"]}]], "]"}], "\[LongEqual]", 
         FractionBox["1", 
          RowBox[{
            StyleBox["s", "TI"], "-", 
            StyleBox["a", "TI"]}]]}], TraditionalForm], "errors" -> {}, 
     "input" -> "L[e^{at}]={1\\over s-a}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "25a35ead-06f5-d041-b7c8-9a37d63950f3"],
 ", passo al dominio del tempo con le antitrasformate dei singoli addendi \
della scomposizione."
}], "Text",
 CellChangeTimes->{{3.932877861362781*^9, 3.93287791996563*^9}, {
  3.932878125908814*^9, 3.932878177756174*^9}, {3.93287821285967*^9, 
  3.932878229854641*^9}},ExpressionUUID->"9b2d3d6a-92b2-244e-8e1b-\
b0266f715dd7"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox["1", 
          StyleBox["s", "TI"]], "\[Rule]", "1", 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> "{1\\over s}\\rightarrow 1(t)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "a3f9fd43-2b27-3b4c-af97-86a5cfa0fd65"],
 ",  ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox["1", 
          RowBox[{
            StyleBox["s", "TI"], "+", "3", "+", 
            FractionBox[
             StyleBox["i", "TI"], "4"]}]], "\[Rule]", 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            RowBox[{"(", 
              RowBox[{"-3", "-", 
                FractionBox[
                 StyleBox["i", "TI"], "4"]}], ")"}], 
            StyleBox["t", "TI"]}]], "1", 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "{1\\over s+3+{i\\over 4}}\\rightarrow e^{(-3-{i\\over 4})t}1(t)", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "05f7cf2c-3568-8d4a-82d7-56672260c61c"],
 ",  ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox["1", 
          RowBox[{
            StyleBox["s", "TI"], "+", "3", "-", 
            FractionBox[
             StyleBox["i", "TI"], "4"]}]], "\[Rule]", 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            RowBox[{"(", 
              RowBox[{"-3", "+", 
                FractionBox[
                 StyleBox["i", "TI"], "4"]}], ")"}], 
            StyleBox["t", "TI"]}]], "1", 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "{1\\over s+3-{i\\over 4}}\\rightarrow e^{(-3+{i\\over 4})t}1(t)", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "bb6bb421-05f6-544b-8ed1-cdab1df47722"],
 ",  ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox["1", 
          RowBox[{
            StyleBox["s", "TI"], "+", 
            FractionBox["1", "3"], "+", "2", 
            StyleBox["i", "TI"]}]], "\[Rule]", 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            RowBox[{"(", 
              RowBox[{"-", 
                FractionBox["1", "3"], "-", "2", 
                StyleBox["i", "TI"]}], ")"}], 
            StyleBox["t", "TI"]}]], "1", 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "{1\\over s+{1\\over 3}+2i}\\rightarrow e^{(-{1\\over 3}-2i)t}1(t)", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "9e3577e8-7368-8d46-8ee3-a6945ad64080"],
 ", ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox["1", 
          RowBox[{
            StyleBox["s", "TI"], "+", 
            FractionBox["1", "3"], "-", "2", 
            StyleBox["i", "TI"]}]], "\[Rule]", 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            RowBox[{"(", 
              RowBox[{"-", 
                FractionBox["1", "3"], "+", "2", 
                StyleBox["i", "TI"]}], ")"}], 
            StyleBox["t", "TI"]}]], "1", 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "{1\\over s+{1\\over 3}-2i}\\rightarrow e^{(-{1\\over 3}+2i)t}1(t)", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c0aaadf4-bc7b-ef48-a351-8d69f3af9a12"],
 "\nLa risposta forzata nel dominio del tempo sar\[AGrave]:"
}], "Text",
 CellChangeTimes->{
  3.932878353923363*^9, {3.932878437580728*^9, 3.932878448114857*^9}, {
   3.932878564154644*^9, 3.93287856748455*^9}, {3.932878627040704*^9, 
   3.9328786286401367`*^9}, {3.932878661487274*^9, 3.932878661775286*^9}, {
   3.932878794736006*^9, 3.9328788082693977`*^9}, {3.9329616893643513`*^9, 
   3.932961697955623*^9}},ExpressionUUID->"ad3bc36d-a509-3f42-832c-\
dbd2ee6c2bbe"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["Y", "TI"], 
        StyleBox["f", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
     "Y_f", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["C", "TI"], "1"], TraditionalForm], "errors" -> {}, "input" -> 
      "C_1", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], 
    RowBox[{"UnitStep", "[", "t", "]"}]}], "+", 
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["C", "TI"], "2"], TraditionalForm], "errors" -> {}, "input" -> 
      "C_2", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "-", 
        FractionBox["\[ImaginaryI]", "4"]}], ")"}], "t"}], "]"}], 
    RowBox[{"UnitStep", "[", "t", "]"}]}], "+", 
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["C", "TI"], "3"], TraditionalForm], "errors" -> {}, "input" -> 
      "C_3", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "+", 
        FractionBox["\[ImaginaryI]", "4"]}], ")"}], "t"}], "]"}], 
    RowBox[{"UnitStep", "[", "t", "]"}]}], "+", 
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["C", "TI"], "4"], TraditionalForm], "errors" -> {}, "input" -> 
      "C_4", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "3"]}], "-", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", "t"}], "]"}], 
    RowBox[{"UnitStep", "[", "t", "]"}]}], "+", 
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["C", "TI"], "5"], TraditionalForm], "errors" -> {}, "input" -> 
      "C_5", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "3"]}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}], " ", ")"}], "t"}], "]"}], 
    RowBox[{"UnitStep", "[", "t", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.93287881700542*^9, 3.932878905944393*^9}, {
   3.932878976653015*^9, 3.932879080585705*^9}, {3.932879114686388*^9, 
   3.932879131443866*^9}, {3.932879182816587*^9, 3.932879187249861*^9}, {
   3.9328793600929737`*^9, 3.9328793785199585`*^9}, {3.932879413069714*^9, 
   3.932879437575888*^9}, 3.932879482636446*^9, 3.933225807543838*^9},
 CellLabel->"In[61]:=",ExpressionUUID->"71d8d371-9127-0848-85b3-8741f8c4fbef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["Y", "TI"], 
       StyleBox["f", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
    "Y_f", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.93287913964114*^9, 3.93287914717486*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"9061cee1-ac98-af41-8854-4b2b705ae96a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{"432", " ", 
      RowBox[{"UnitStep", "[", "t", "]"}]}], "5365"], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["2692224", "74476205"], "+", 
       FractionBox[
        RowBox[{"2612736", " ", "\[ImaginaryI]"}], "14895241"]}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "-", 
         FractionBox["\[ImaginaryI]", "4"]}], ")"}], " ", "t"}]], " ", 
     RowBox[{"UnitStep", "[", "t", "]"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["2692224", "74476205"], "-", 
       FractionBox[
        RowBox[{"2612736", " ", "\[ImaginaryI]"}], "14895241"]}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         FractionBox["\[ImaginaryI]", "4"]}], ")"}], " ", "t"}]], " ", 
     RowBox[{"UnitStep", "[", "t", "]"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["390744", "95021365"], "+", 
       FractionBox[
        RowBox[{"3134052", " ", "\[ImaginaryI]"}], "95021365"]}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "3"]}], "-", 
         RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", "t"}]], " ", 
     RowBox[{"UnitStep", "[", "t", "]"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["390744", "95021365"], "-", 
       FractionBox[
        RowBox[{"3134052", " ", "\[ImaginaryI]"}], "95021365"]}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "3"]}], "+", 
         RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", "t"}]], " ", 
     RowBox[{"UnitStep", "[", "t", "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.932879147916353*^9, 3.9328793836103573`*^9, 
  3.932879485890342*^9, 3.932962334001856*^9, 3.9329863154516277`*^9, 
  3.933162049078455*^9, 3.933225755151291*^9, 3.93348676431084*^9, 
  3.9338321345712185`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"ae02dcfe-afc2-9447-9b8f-cccdb964dd81"]
}, Open  ]],

Cell["\<\
Si pu\[OGrave] verificare il risultato attraverso funzione antitrasformata di \
Laplace di Mathematica \
\>", "Text",
 CellChangeTimes->{{3.932879193546864*^9, 3.932879238947571*^9}, {
  3.932880107024217*^9, 
  3.932880107604641*^9}},ExpressionUUID->"c62746f6-9a6e-6b4d-9129-\
d70600efa104"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["Y", "TI"], 
        RowBox[{
          StyleBox["f", "TI"], "2"}]], TraditionalForm], "errors" -> {}, 
     "input" -> "Y_{f2}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "[", "t_", "]"}], ":=", 
  RowBox[{"Expand", "[", 
   RowBox[{"InverseLaplaceTransform", "[", 
    RowBox[{
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["Y", "TI"], 
           StyleBox["f", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
        "Y_{f}", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], "[", "s", "]"}], ",", "s", ",", "t"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.932879266126375*^9, 3.932879344175981*^9}, {
  3.932879488313511*^9, 3.932879492466539*^9}, {3.9328799702356167`*^9, 
  3.932879973044796*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"e1c6d23b-f7af-c44d-a6bc-ae3bbb9329ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["Y", "TI"], 
       RowBox[{
         StyleBox["f", "TI"], "2"}]], TraditionalForm], "errors" -> {}, 
    "input" -> "Y_{f2}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.932879324325403*^9, 3.932879329636961*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"9bddd12e-8710-a242-b6e3-c0133012d494"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["432", "5365"], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["2692224", "74476205"], "+", 
       FractionBox[
        RowBox[{"2612736", " ", "\[ImaginaryI]"}], "14895241"]}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "-", 
         FractionBox["\[ImaginaryI]", "4"]}], ")"}], " ", "t"}]]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["2692224", "74476205"], "-", 
       FractionBox[
        RowBox[{"2612736", " ", "\[ImaginaryI]"}], "14895241"]}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         FractionBox["\[ImaginaryI]", "4"]}], ")"}], " ", "t"}]]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["390744", "95021365"], "+", 
       FractionBox[
        RowBox[{"3134052", " ", "\[ImaginaryI]"}], "95021365"]}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "3"]}], "-", 
         RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", "t"}]]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["390744", "95021365"], "-", 
       FractionBox[
        RowBox[{"3134052", " ", "\[ImaginaryI]"}], "95021365"]}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "3"]}], "+", 
         RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", "t"}]]}]}], "}"}],
   "}"}]], "Output",
 CellChangeTimes->{{3.932879330505959*^9, 3.932879346824665*^9}, {
   3.9328794988311973`*^9, 3.932879514666118*^9}, 3.93298632523942*^9, {
   3.932986362377571*^9, 3.932986389321331*^9}, {3.933162054707175*^9, 
   3.933162089837679*^9}, {3.933225762678385*^9, 3.9332257755986195`*^9}, 
   3.9332258602165527`*^9, {3.933225892328739*^9, 3.9332259198529797`*^9}},
 CellLabel->"Out[91]=",ExpressionUUID->"da824ed3-1ac8-694d-b760-a144fbf2cfd8"]
}, Open  ]],

Cell["\<\
Tuttavia la risposta forzata \[EGrave] combinazione lineare di termini reali. \
I termini complessi e coniugati della risposta forzata nel dominio del tempo \
devono essere convertiti in reali.\
\>", "Text",
 CellChangeTimes->{{3.9328795479870872`*^9, 3.9328796331746416`*^9}, {
  3.933225947236019*^9, 
  3.9332259479115295`*^9}},ExpressionUUID->"6ccf11e2-7b89-1740-865b-\
ac9bef44813c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["C", "TI"], "23"], TraditionalForm], "errors" -> {}, "input" -> 
    "C_{23}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"ComplexExpand", "[", 
    RowBox[{
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["C", "TI"], "2"], TraditionalForm], "errors" -> {}, 
        "input" -> "C_2", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "-", 
          FractionBox["\[ImaginaryI]", "4"]}], ")"}], "t"}]]}], "+", 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["C", "TI"], "3"], TraditionalForm], "errors" -> {}, 
        "input" -> "C_3", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          FractionBox["\[ImaginaryI]", "4"]}], ")"}], "t"}]]}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.932879638693817*^9, 3.932879711964628*^9}, {
  3.932962192214824*^9, 3.9329622048564625`*^9}, {3.932968086592491*^9, 
  3.932968088226839*^9}},
 CellLabel->
  "In[265]:=",ExpressionUUID->"3e426fd6-63e6-6543-8792-d1bd18cfc286"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"6912", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", "t"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"779", " ", 
         RowBox[{"Cos", "[", 
          FractionBox["t", "4"], "]"}]}], "+", 
        RowBox[{"3780", " ", 
         RowBox[{"Sin", "[", 
          FractionBox["t", "4"], "]"}]}]}], ")"}]}], "74476205"]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.932879717931568*^9, 3.932962235707823*^9, 
  3.932962337759626*^9, 3.932968095013824*^9, 3.932986337598079*^9, 
  3.9329863932929974`*^9, 3.933162093906265*^9, 3.933225951031737*^9, 
  3.933486767703783*^9},
 CellLabel->
  "Out[265]=",ExpressionUUID->"34e7bfd3-ed95-774f-b13b-091584c44945"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["C", "TI"], "45"], TraditionalForm], "errors" -> {}, "input" -> 
    "C_{45}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"ComplexExpand", "[", 
    RowBox[{
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["C", "TI"], "4"], TraditionalForm], "errors" -> {}, 
        "input" -> "C_4", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "3"]}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], "t"}]]}], "+", 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["C", "TI"], "5"], TraditionalForm], "errors" -> {}, 
        "input" -> "C_5", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "3"]}], "+", 
          RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], "t"}]]}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.932879728929775*^9, 3.9328797516277504`*^9}, {
  3.932962237274925*^9, 3.9329622435434303`*^9}},
 CellLabel->
  "In[266]:=",ExpressionUUID->"41c567bd-737f-7e41-b227-ca94fec07d73"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"648", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "t"}], "/", "3"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1206", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "+", 
        RowBox[{"9673", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}]}], "95021365"]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9328797535401*^9, 3.9329622477482777`*^9, 
  3.932962339818869*^9, 3.932986339599216*^9, 3.932986395319952*^9, 
  3.9331620960725136`*^9, 3.933225953277354*^9, 3.933486769183777*^9},
 CellLabel->
  "Out[266]=",ExpressionUUID->"59e38767-f6e8-484c-89d2-07bdc3cb263d"]
}, Open  ]],

Cell["\<\
In definitiva la risposta al gradino unitario nel dominio del tempo \[EGrave]:\
\>", "Text",
 CellChangeTimes->{{3.932879757596819*^9, 3.93287981247188*^9}, {
  3.9328817966126575`*^9, 
  3.932881797674143*^9}},ExpressionUUID->"78360e06-07e3-cb48-a37e-\
9e84895a8b6c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["Y", "TI"], 
        RowBox[{
          StyleBox["f", "TI"], "3"}]], TraditionalForm], "errors" -> {}, 
     "input" -> "Y_{f3}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "[", "t_", "]"}], ":=", 
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["C", "TI"], "1"], TraditionalForm], "errors" -> {}, "input" -> 
     "C_1", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "+", 
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["C", "TI"], "23"], TraditionalForm], "errors" -> {}, "input" -> 
     "C_{23}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "+", 
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["C", "TI"], "45"], TraditionalForm], "errors" -> {}, "input" -> 
     "C_{45}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"]}]}]], "Input",
 CellChangeTimes->{{3.932879824619448*^9, 3.932879868076191*^9}, {
  3.932879983632704*^9, 3.93287998997806*^9}, {3.932880024768772*^9, 
  3.932880048874857*^9}, {3.9328823193774967`*^9, 3.932882325941822*^9}, {
  3.932962248856507*^9, 3.932962266373485*^9}},
 CellLabel->
  "In[267]:=",ExpressionUUID->"9971bdcb-a8d9-e644-b2b0-f9261cddf0e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["Y", "TI"], 
       RowBox[{
         StyleBox["f", "TI"], "3"}]], TraditionalForm], "errors" -> {}, 
    "input" -> "Y_{f3}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.932880057378259*^9, 3.932880067257242*^9}, {
  3.932880206631721*^9, 3.9328802097970257`*^9}, {3.932880304624525*^9, 
  3.932880306998169*^9}},
 CellLabel->
  "In[268]:=",ExpressionUUID->"4b940f4c-67e6-da42-9e25-e1c34660ae4c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["432", "5365"], "-", 
    FractionBox[
     RowBox[{"6912", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", "t"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"779", " ", 
         RowBox[{"Cos", "[", 
          FractionBox["t", "4"], "]"}]}], "+", 
        RowBox[{"3780", " ", 
         RowBox[{"Sin", "[", 
          FractionBox["t", "4"], "]"}]}]}], ")"}]}], "74476205"], "-", 
    FractionBox[
     RowBox[{"648", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "t"}], "/", "3"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1206", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "+", 
        RowBox[{"9673", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}]}], "95021365"]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9328800679085407`*^9, 3.932880210620647*^9, 
  3.932880307581859*^9, 3.932882328655531*^9, 3.932962279134527*^9, 
  3.932962346360075*^9, 3.932986344758772*^9, 3.933162100643045*^9, 
  3.9332259585466404`*^9, 3.9334867733582916`*^9},
 CellLabel->
  "Out[268]=",ExpressionUUID->"2dfdd75e-78ae-264a-b4c0-37f6f0f3b206"]
}, Open  ]],

Cell["Grafico della risposta al gradino unitario", "Text",
 CellChangeTimes->{{3.932881085829338*^9, 
  3.9328810925567703`*^9}},ExpressionUUID->"27d9a386-2be1-9943-9fc8-\
ce09f99a73e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["Y", "TI"], 
         RowBox[{
           StyleBox["f", "TI"], "3"}]], TraditionalForm], "errors" -> {}, 
      "input" -> "Y_{f3}", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9328810976523895`*^9, 3.932881137169964*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"0f77c1e1-80f0-4745-b385-67b96d8c1014"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
LuVpvJOZw/WYp/Dizu8KYDH+4BrHTxxvJtF/on8owPaMV8tXsZfjPa9//6UA
ZfnDO0exX0to3Hu4rAAoqmH12S9cP22EtqyuKkDdHEPI5nkaevh4Kd10QwGy
Twi+scO+TKksYGclw/HRwhK2BRoavpCy8/xmMmx+pWZkin2k2L/2JScZ/NIu
FqdhS+3WfuMtQIYNbYVemUWcj/ylzd4Kk6G9hyv5LPZ8LeGzkhgZos4kKMdj
WzJ+Ox8qSQYu0szdNuzWQ42zn4lkeGzq3PwHe9udrMt7SGRYyYh/J/sb16fX
N//dJ5OB+7t8uT42K6/jzR8UMtxnWbvshu1xQo9LX5UM8ccVBCOwBxOU4h9v
JUPwxS/3s7EPDrJLrmuQIXYiarkau0ByJstiNxlS3zUeeoMtatupUrqXDPv9
ta8PYYdmFdC4EBnyOMdzx7F/TNzTctpPhgfKnS0z2BbKnk0Nh8hATFP/9AO7
wd3EQFKfDE/Grvz877lKyfYeHwMylE+osUxgJ/wWtOw2JgMpWJD4CZuwZ2lE
5QQZZhVYdd9iuwb0ud42I0PGde6AF9gfXlYsfD1FBtc1q9Yn2MCU4q91lgwf
PY5R72Ln6fozJdqQQeupXakHtmC4ZcSvc2Qo3thrbYwd2LlPwMCRDLw/c3dS
sCd5pVNzXMjgnpeKGLBNThLkGNzJcDtLOagHr/eLxK95ZzzJ8Fkpfv0xtuLH
hm3l3mSom95dfxE7ViqriteXDBLhqW92YTtkO7Q3B5LBYdlmtAbvf9fkYRPi
DTKcpwf8vYqtqaI06HeTDPz6bVe2Y/OUfp9SiyTD6u4Ptak4vvyWXnuG3yND
+Aur5CPYo3sKVkZjsS88+vMbx2dFncfmlGQylO3Us9qPLctsErP4gAw8F92v
jOB4jjy8XdT4IRmUhfu2BmPbvvmtyPyEDEw8B0pL8PlgH/LTc6eR4cDJ5Nc/
ZnG8+zzlukfH+/OARz4Q25a/v7uwCn/vp7YOduwKvR1nf9WRwSDbXkZiBn9f
2ZyndycZpizXa6Xxea2/a5/qN04GWzWDiGJ8/meU7tukTpFBkKJhJYot0lwv
XzNDhhiD6rVAnC/cV6WK/s3j8+ApXHsA5xMJp4GmoA0yJDH3atOG//vvW0Y/
bokoQlVhf9Pujzi/DwWUPhFXhD6CqmnwIK43Ps9826QUwT7u7942nN8UCtiY
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
WCAwcOHD/Cn0/2yKuIY=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
LuVpvJOZw/WYp/Dizu8KYDH+4BrHTxxvJtF/on8owPaMV8tXsZfjPa9//6UA
ZfnDO0exX0to3Hu4rAAoqmH12S9cP22EtqyuKkDdHEPI5nkaevh4Kd10QwGy
Twi+scO+TKksYGclw/HRwhK2BRoavpCy8/xmMmx+pWZkin2k2L/2JScZ/NIu
FqdhS+3WfuMtQIYNbYVemUWcj/ylzd4Kk6G9hyv5LPZ8LeGzkhgZos4kKMdj
WzJ+Ox8qSQYu0szdNuzWQ42zn4lkeGzq3PwHe9udrMt7SGRYyYh/J/sb16fX
N//dJ5OB+7t8uT42K6/jzR8UMtxnWbvshu1xQo9LX5UM8ccVBCOwBxOU4h9v
JUPwxS/3s7EPDrJLrmuQIXYiarkau0ByJstiNxlS3zUeeoMtatupUrqXDPv9
ta8PYYdmFdC4EBnyOMdzx7F/TNzTctpPhgfKnS0z2BbKnk0Nh8hATFP/9AO7
wd3EQFKfDE/Grvz877lKyfYeHwMylE+osUxgJ/wWtOw2JgMpWJD4CZuwZ2lE
5QQZZhVYdd9iuwb0ud42I0PGde6AF9gfXlYsfD1FBtc1q9Yn2MCU4q91lgwf
PY5R72Ln6fozJdqQQeupXakHtmC4ZcSvc2Qo3thrbYwd2LlPwMCRDLw/c3dS
sCd5pVNzXMjgnpeKGLBNThLkGNzJcDtLOagHr/eLxK95ZzzJ8Fkpfv0xtuLH
hm3l3mSom95dfxE7ViqriteXDBLhqW92YTtkO7Q3B5LBYdlmtAbvf9fkYRPi
DTKcpwf8vYqtqaI06HeTDPz6bVe2Y/OUfp9SiyTD6u4Ptak4vvyWXnuG3yND
+Aur5CPYo3sKVkZjsS88+vMbx2dFncfmlGQylO3Us9qPLctsErP4gAw8F92v
jOB4jjy8XdT4IRmUhfu2BmPbvvmtyPyEDEw8B0pL8PlgH/LTc6eR4cDJ5Nc/
ZnG8+zzlukfH+/OARz4Q25a/v7uwCn/vp7YOduwKvR1nf9WRwSDbXkZiBn9f
2ZyndycZpizXa6Xxea2/a5/qN04GWzWDiGJ8/meU7tukTpFBkKJhJYot0lwv
XzNDhhiD6rVAnC/cV6WK/s3j8+ApXHsA5xMJp4GmoA0yJDH3atOG//vvW0Y/
bokoQlVhf9Pujzi/DwWUPhFXhD6CqmnwIK43Ps9826QUwT7u7942nN8UCtiY
2OUVIfHvL/Xj/TT0XqxxS9RWReAJTSg7hvOl6uIunftHFOG45iF57rc0NJYj
E5cRoAhj7zaLN9bj+YZ+XWEKUgT0rL2ktw6fR7tMa6cQRdhgu1k08RLHo7SM
8tZwRfgucpWTvRb3P4nEhoZERbCk9obrV+H8c1v651iJIsw2J+e+wPWgxlHS
QGVKEcQ301HbY5zPD30qjp5RhPQH+89/eoTrm1zalt9zinCOFGW8kElDfV8k
Rl4sKcL61dVkmYd4fHMJP2NmJXC/NyF85wGONz3xXC9pJXAuDJiNiMf3f0VR
5kpTJZgxnFpLw/2WpZXCkxELJYhsMF6euo3zX9z2I9yWSpDMyhGxC5u2YRh9
zg6/z9A2sg/Xw54PNyS4LyrBFr/2WOUQXL9uzmicC1MC08/+LIqBOD9UrfRF
RSiBMvly371r/93/Wf0r7ipBOPNE1EoAzj+WMvVc8UpwpES/ohv3cybbzQwr
MpVALtDO/cFVfB6+vjzPVa0E5l/DXKMv09DpLZ1su2uVoEmzYocItqzh4DO7
eiVobG4VfeRNQyUVi7/orUqQ6H5vT80lGuq+pxRo14OfK2WJsHvRUErzTpmo
PiXQWbRbeOSJ78erB5rog0pQH560sg973sGKneurElgYnb/n50FDfNr3E+iz
StB8QZ6T+yLuxy493PPtpxJkK4y5V7jjfP70+RDnohIIPshkO4+tLtQma/dX
CUbL2MeaLuD6cKS3OfKfEvzO91Xyxa4L+uZEJ1CAquCQS8U+NrNWwLmJAiOk
fRYZbji+ZdlNdrFToNuDEn4Ge9h8y29bLgqwLaQvi2J7NG7dSxegQIaRXGSa
Kw1Fpzi02hIpEGf8/N5L3P/6XLlxKUCOAquzael3sa1M0qUTFShw3Pjqe2ts
FfYPPq9VKKDMvvM5G7bA+C+5CTUKSFqyHh92pqG/9VxdDNspsDsxQ6QK+9XV
Q4q79uDfNyvyemMXmdr2HNei4PvBOe2T2ElbrwW5IQrwP1iP3Il9nStZ5fZ+
CtCUZ/6KYTtM0fozD1GAwM55mwHbsLkrtEaPAhNfldSn8X1MI3NGve8oBXor
/y32YItfY/v0y4gCDwVVeuqxGU+R7nCaUEBaQPd1EfaUBuwgm1LgZMKrj5nY
XbyWX3UsKKBhJ8MQj10x4xNleYYC3DrZmuHYGW339/hYUSCAnHIrGPtWVuFY
jC1eH4ttI37Y7kEdMfn2FGCMijK6gm1qObGv1ZEC1YKVLZewtXYzTX91oQBi
KNL/z3KC0glrFyjgdORMrzc2+0/N/Vs8KaCwFOPoi/2rw+zHVm8K2IHo+jXs
/ideKQY+FDjfmJVwE/tlyF1dRz8KtDz8oHoPO8c6bz74Gv7+PNSUgn13b0v6
gyAKRN+1PpmLfXnLtyP0EApwrmcN0bEtF/4tvbtFAauPF06/wj74VvTxzB0K
MNhv6hjCVn62w3hTFAUKLAuU57H5bx9flYmmQNG+e1c34/VfsbvwROs+BR5Z
txTLYg9r3zlhnkCBZ4o27/ZhFyzVPYt8gNcrPb3qKnZ895D5kwwKbFnmCkzB
DihYZmp4RIH2wssSL7CPOqhb/smlAN+gxKdNOJ627Tdg48+nwI+8gmU1bDEp
J5pKIQVmlz59PYU92ZvBaVdGgaoD4jyl2G+LqysCKihQfmazwTfs8qg++8Rq
CoQGmeoJ4PgOPcTz4nU9BQTkt3n4YcuUBV7Y9YYCPt8P8Z/F54EtJkXU5B2O
X//OL8nYP93Km916KKAWXWHYj11L+iH5aJACevHH/57C5+103Nk3nBMUgM4d
Mh74vEqUsou7TlNA50T565fYX97RHV/NUkAmlE+TD593ex5+hluLFGBxeXCg
Ets9vGX7BoMytDDOXZTE+eJGkFryLwllCP04uaCO88/BjKExY6Iy2GfULydj
b6q9s61AThlUNP5YMeN8Fbk60uFCUQajyskdn7ATriStj+xShkOHSafSfWjo
qRuD/QcTZTjwfCfdAudDt4iCIg0zZXhE9W3swVbNO/Mv9pQyvLuQ03oc58+S
ibIEYxtl2GJFe2CE82uNncurtgvKkC9zqtoE9zddFu9Vq8OUYb1JozsQ5+fl
g9krGbXK4AzaaTsj8X5WZ4Q01SvDC/ODi1XYhG0pXFNN+P3syQ4oCs9f+p7M
tg5l6Pr56rbeXXxfX/HVb+pTxvf3dPKZaBra/twgefKnMnREDehfi8PrI7S4
e6ucCuwSuzcYg+vNfMSPBlMFFRivqy/mScPxzDhl4KekAjOR6SxR2AFzn2wa
1VQg7nwh36103G++ag0z1VKBkMVuHU9cv3KvpfZfNVWBOdaBU4pZNDQytt+3
4bYKdLvtubyeh/uxjDePKBEqkNnA8tjtGc7HFqc7Y++qgOSA7tMBbKsOT9lz
8SqwpqmqXpSP61HRw9dMj1Ug0rW+wQj3Y3tcVP645qiAiuGYUSl2klyFTM9T
FfAzcE4ULqQhs4S3V7KKVKBPd/LYAHa3/zrxUK0KGI8Bn3ExDW3dEX70eb0K
nIq1VX6KHf1D6IpQM55/gf80A67fRrbUjrEOFSj4bWJYiN2ua3n51oAKWDvU
266U4vssX9Wr1kUVMI0PG9crx/HdcWhRbVkFbE9FH4jEDgp9J5W0qgLe7BT5
N9jafyYvOTFS4UxUmochnYaqhrZIbealQo9zCKsm7hdFEx7reQpQYfFuzHlP
bF9jtUsDwlRw698DT7B3Nui2PZWkggtV7zx3JY6fJ5e9jihTIcKW42w7Np8t
Q1qJKhXSrgre/o3tIRbVKraNCrtHgxSl8f1ENSpL4vtuKiyldHRdwI7SVT98
QosKI4SAvljsmY1qz2pEBZ3m7abl2Hle71sidKmg9VOhfBl7s4r1rwV9Koi6
tyRvqaYhp7FpcUtDKigd3fFbA7s1/Ypu0zEq5AZ2tx3DVrBg9FQ5SYVfHdxC
rtg3+e6mxplTYctTt8EQ7NF20Za101RoJgWJpmI/2rdVvNOWCi0RFzc1YzcY
sYes2lOheHDm1gfsb9Yj00pOVCgzzKONYzN61phYuFLB2eZ8zG9suRvxVbfc
qbDJY1KSqQaf5/vusmWeVIjNZj/Dg22fdTh8xJsKCV8K9cWwQ8uI83y+VLiU
2jYth53VsnIK/Kmg+/k4UsFu6uuudw+kgp2kqd527NHJZ0ppwVSwV5hk3YPN
/Dc0piOUCkOs1IB92CQOq5WV21RIXjj+FP4bX2KXrWIEFcLUYu7t/298Ku8r
s7tU0JhXVz/w3/jaU+o3Y6gwbhgS+d/zbOOGpNI4KjgKjWf/9/ctNqmEb4lU
sKxvuPbf+8c9vZ14U6lgYHpX6L/xWUMMu7TTqWB08JX7f/NTiFPYfSGTCiam
G+H/zV83eyMjNYsK4rdbXUnYDuX9m9qfUOHzQiO/OPat1uKLy3lUiKFlBvNi
5/SH9ykUUOFTo0gV83/jT51DpsVUaB3+/uIPXt/xv1pPQmhUYPScvDuFzcop
zFNCx/FkN646iE2WnLsyXEWFKzxtGa+w9VTbPnPXUkFV3G+E/l+8oEzdffVU
qDdfWM3CzrU9IZzSSoW8t3ql/thtXiqBbe1UsLh80Ow89mQIy/hSJxWGhw99
MMRWzKGXnejB8faZ8Yr4f++nR0ve6KOCpwElhfDf+9ucbxYNUuH7H9WsURyv
T6fFTbm+UqGbyHnpKXb76mLN3lEqNL5L0grHnuZ8Q3KZoMK5EZffztgUtaDF
llkqGCrlaCv8F/+XRu8H/aXCW56Ky7H4PLWHvlgt+EcFH0avDRfs6fiEc58I
qnD46bvI/djKFXrbNTepgtHcwRc/8HnNX8vvXhBQhT/OX+r3Yj+/eZnPkaoK
LdPLH/LK//v/CWdv3FRXBRaZO2uXsVUWDy483q4Kb6uqzwB2np1g7/Ae7L0P
u7vL8Hqh0qTTuqpw/Gr44g8ajteVn9JG1qoQuWD6hBXno5QLbqo7YlTBxPCo
wyucDwdJJzNOxKlCiPaFR8HYokN7eb0SVeHxblX/Pf/lyyMc8wVpqkB64cyT
+xzfF8h5ZYp5qnB072eJYJxvo79OaEk0qoLLc8EH8jhf3zY9d5TptypUkJ2C
jLLxeTUesjy/rArjAt7jKzi/1+ibureuqoImhds4G3t+3+GYCEY14Jey2bWG
+x9LBeU+AV41eHcg/m0e7n+2/Zm3Iymrwa/bNee5cb34nHTD75Atft6eRWRL
xfed2NWIJ/ZqcCNnYqIqBffvUd5pm53UYAOey7hj6wc71HW6q8GRhbbl3mTc
3zgfYTULUIP6zvDbz5JoKFyTP9YhUQ3MBG1SPRLw+dKIeNyWogZFE7PDyth1
qsxllHQ1gEu/miZwP/VbdqnvR5Ya7GVi9rLFtuEYlPQpUYO7hc2Zlrg+7hjK
fHq7Uw3CRrbqeMfSEK+q03JhlxrY+VCMtbFnrqse7n+P52v5mHkzdpZc9aji
oBrktb1zfRiD5+/aI90+rgbi7JeO9+H6+7MmxX1+Sg2Sk1bqc7Bfc9u+EJtV
gwufMkavYIeWzJ52XVADh6C1g6LYfwOYjrIS1CG45Xe0wz18PrIdvFIY1MHj
JK14L/aHN6+SVZnU4WqoaBQfdgkxetKMVR3qBv18XuL679IkcesJpzoYGezY
RsK2mL3+fC+3OnRwE2AD3xd0hUd63vKoA+XVR+6P2LJOT+WW+dXB9tvp+Tjs
AY6d9Xqi6iD2pHiYD7tFI3lySEwdWA2vblrA9w/a2TUeTwl1kGHIXOjBji5s
sEqWVgf2fcmSqdiB/fK3qDLqQDcXtbyO7cZw53m9rDrUFlnY2mPrnTBem5JX
B8NzovXq2DsDSuQCyepgYMYmIYJNyhY6yq+kDu6tMdqE/+47fz4ma6qog+Od
34PdEbh/SHHaFbFNHYyPN3sFY+c0dlhJa6jDC7jFeRE7bkb1VukOdQjfIuB+
FttD+3fPx914PT/yhWlhWzlarF3UVAe2YXWgYhtEV8sxa6mDJ/eVl1LYit+C
vVSQOviX+/AzYwtzjCXXgTo02T8e+xOO64GGXv3J/epAqnkfOIM9b/lscvKA
OkSaPf/0FXv4JjfvtUPq0KzXydCP/abAcxffYXU4pvpq+s3/KrTzeC62KADg
ihQRlZRsSSkpzcxVtuSI5BFCsiZryFJCFCJJ9uxEyJpHkTVJEcUrpZQiy8tL
kdJiDYl3fn9+P/OZmXvnnHvO3PkMuq6zwypfi4KAXTtTm9FFbAqhitoUNMmE
ctWjU6XTbz3XocAsQndvDXpiXDP/oi4Fl3zS7peh9R+MXVPUx/hPrJa4yTo/
LDPxxyEK1lTPON5AcxppR+UbUnAz+0JcLtpWdOqixWEK8v/rvHYd/WAo22/l
EbzerFh4Jnp9ua5niwkFGv0njTPQ3v4zJwLMKFjO083G8kvNfFtigcfj7SJY
3r7SwHzYkgJ2Ra5R1vlhPXMGWVY4/pgHJBv9Mb/wL2NrCoIWuRvkoTFx1Zbb
UrB2alqrEJ2uxKb40I4Cjn55oVvoKY6blI8DBW5msw3laMMXJlt3OFLgpbxU
9S665Cr7hgEnCgaqReIb0Fz2pWuvnqBAxO1nzT9oe1kLPn1XCozCd5a3oxum
OZcucadgXfd5/x60SFP5fO1JCkS/nhMcRPtGW02d8sD8E685P4reubH6U68X
BQr64pXcGO+IEZu++DMUyBHt8+vQg9W8b7R8KXgNNfxb0Jk6Do8q/TC+37nD
NNGza1bWnQigwMG+wtkEbdxfV7EhENfPoBSvM5rHWyA3KpiCiqaC+JhIVn9s
SNsXQgEcU/HIQTdxucZPX6Kgtr6C+w7r/63Mpgv24RRQmlyOH9DDLaet98Ti
+K64xqnhetCIFzMdi6OgL0JztQX6uuVT/cIECvjIN/BGm45KqAqkUJCVl5tS
jG5e3y46kkGBpG/8jDhrvX/yX5OTRQF523V9LzqgdCuvaTYFmRX2A0fRchpB
c015FPwghXQmOsdtZ096MQW/3S2qNmM9CWyITtW5S8GxA9HH9LD+fOlrSJyp
paDm4dkpL/SR3+OxN+oo2N09s5CO3r7bPJy9gQIXlVybr+iuYqlz95px7f1K
Fr+C9Y5JqbeQ6aAgMlUo8DPWz0G3UbHlPyjotjyi+wrrsUHkJuG7Pyl4lvmj
bDHW67pCk7WOYxRMHRxQIeiEgft8TZMU/NNi15iIxoXD5jdHgbDRU2UzrP9p
GpIfvnDRINbZ+vFTSqWqrrBx/tNNNOwd8BCdx/6S+lG2wUKKBskknTIZ7Ecf
by3rGdlCwz72wa1maH+o4+eToSGBp6SuAn3TQdLfiKbBWNFJyxH3T9y3Rw17
VWi4uuNBeDPul46cbXVzU6WBpykyZRSdsy8/bB5oMMl8flIE90+Kb0wfbNCg
oXTp67MeaKfZemkHbTRHTeu6LHy/1ohh+36EBt5qwlhgv1y1wkk40JSGYuvL
qsFoq0613fzmNHAn5y/6Gz3lPOnCHKVhKe/xrEm01BXLzjN2NNTpDIlHZmN/
ebetZOEkDXyaXUoF2I9f5nA8ifWgQWXtFp5/0CKu/w5IeNLgktQeNIyumI8T
0jhDw7o7/odksJ9/kJwJCfOnwcxo6akitJp7i8XKcDy/VXcqCfv/bNew5qMI
GsDSbrACXanOw/hE0SCu5m7ejpYSMljWd4WGwbStrdz4PsHzqLuyMJmGDf9x
1vqgm2X/ZFmk0qCafLIyDh14VTxyRRoNzzYv2VGMHnO3t/HKwOPShsm96C6h
77yQR0Pj5DYlxYJK1fgQ/pmxfBoOZQQL6qN1fjAf82/g89o84mqPfvDIp3Z5
MQ2h7sdDo9G+O9PyH9zE532tQSsbTafVxXqU0HAsqP5iZQHr/8dFjp1lNLTJ
XLZ9h7bqljSMqKCBy6htyVf02v2aKipVNHR9qt4wh45YH7k6t4YGG8WyOpEb
2G8eCzS419Ow+NTVcBP0Nkq+WOIh5k8Tz6A9eiDNLLmjkYbtnUZ3PdBHTmW6
KjXT4KN56lE4mr+nweRbCw0Go1Zziegn+wf2XX9Cw9qvRsVZ6D3CW4U4n9Ow
oPKPewV66pI2x902Gl49jb9Yhy796frD5SUNZ+dm+B6jnSyudIu9wuvXMwLP
0Rubyx63v6bhKb9vbAe6l+q4HfKGBvMJ7ks96KT0qXT5ThqkXJix/9B6nEKX
v3TRoOCs3DWEXuahfDqjmwaLVl/5b+jGnqNHD/Vi/h9U5x9D+2kGabH/S8MF
vxnbKbRcWQ6pfk/DztKFnbPo78KPxZz/w/jP1fv8QReGDnGJDNDwfGuRElth
parNKNdk20caVuWQs4vR6y23918YxPGd7CQc6I5mvVa5zzRckxJ0WYKOoT2q
h4Yx3/q9xTnRB64lZKd9xXzfFmzAMtvS6ijdbzT0/G5dxHKtR5cP2w8a7P4e
pljne/bO2lb8pGHqzZn37OjtB0T1jo/h+BwFVrDuP1imqig0QYOmj9P9BRxv
lojtpmeTGA8tse9zaCUiI2v7i4Z2oS+9M+iOvybkp6exftSHWrHm7259Xy1m
loawgEhP1vNZ5hOqs2mOho/mCSLf0TnR+sa1f/C4gIr5MCu+eeuOHVrAfBeQ
2fGRlU/tRaf9FzMQdutkUhea+7On/yoOBk4Ii25/hc6b3xNauISBQts681Z0
l8yLqx3LGIhKyAtm5cPpfam5J7gZqOWxDqhE85jZ3GLjYUDOaWzVTTSEjjds
52PghXv+yjR097W6p438DHQuNvKPRXtVXOowXcWAtNxoSCgrXv1rP4esYaD6
rbInK39XKu/h6xNmoMPIvGcf+qbBEiFPUQZmB5sP7kZrOrVt5BJnwGvrF1tp
9Lkk6927NjIw8epb0Ar0hx8hR6O3MtA4diujA9eTP6eeo+Q2BkySg/QeowVF
13rclWHgXFJgcRVaW/vvkE+yDHjqj7glocvznher7GJg8IctZYC+aCY4+00N
59NQF1eL9ULs1Hv2EHUGyK7NgQXomtBC3vX7Gbjz7pB0PHqkQklCU4sB9uAj
NU7owyuOaWXqMeCWLdu/Cr2p6UayngUD/brfjCyxnrVtn87rtWSgN0CEZz/a
N1mr4oQVA7ss1yXtQLc6D78ItWGgRaJPdB7r5Wl+Ga56RwbehkZLZ6Drj5b4
7fRioPT99Y0dWG/Npyut+aMZUCv96bYD6zWH7ZKTmTEMlHHEO65Cl7QaB2yP
ZeACf6rxL6zvi7KmrmolMPBfMVn9kPX9bb/C66CrDPyp2kIOoyfj7+0fzWdA
SHbFr7PYT2J3NG579YABviS33qfYjwoVLLiCGxjYwMdNl6Dr1SeG6EYGrsp3
Z8ahv5tJ5cc9xniu7npqitYJjRA3eMZAYiP3pc/Y7zjfGwq8fMdAwi7nwBVo
0S9fxwJ7ML5nAn6OY3+Umwxp39nHgHVrXNQ7tN3yOzFX+hmY623+Kx/dIC/M
pT/EQEbvkom9aL/YgT/PJxj4sI10+2E/jk/37w2YYkBd77ebPbqoYM29HdMM
HPv7jLIuuqvugG/0bwaGSu+FiqN3DxePHVxMIP2C1EQz7g9/qnkNtfIRcGN/
2CqBXqbL2+y3koDxfRujFWhx04I8mdUEHk++F/+N+0c99y6bSEECPxPrwt+g
i9P29GqLEriUKHg7Gn18nKP9yTYClVcqKpajrYo02iy3EwhW6m78g+8TR2xC
Wn/sIDCjfkzgJ1rzBXvzGppAZ09K4Bu0VPHiezbyBDgnCgJy0WK2+2omFAgE
TdUUpKAFhYKrLisR8F/NIRCF5ry86PYtFQKm4b/veaM/2bLlz6gTqD/dvP8g
ulcIcqL2Eyhu4knah+54GZglfoDAsbab0oroR3sXru7XJpBx30hyC7pucm9K
lw6BNWZBYWLoypvnE110CdzaYEgE0Xnr52PiDhGY8l9pzom+1q4StckQxye7
4u08vj8lhgWE3zEisFmnLeUXOmRq7mLfEQINOqkjw2j/W3sunDIlsGxpeuAA
2sve/zy7OQHJD4amfWj7V799pY8SaPGu6m5HW4Yrn6mzImAuoR7yDH0Y/Dz1
rQmUvtPxbEEf/FV76oMNga8WtTca0Rols27edgTG7p6ReIDe46DksswBr291
vP8uWk7knFP6cQI7+Fw/VqE3RczYPnQm8DRF/l4JWkRN0fqwC4F136uii9EC
075Hh1wJsJncyytE85TWmJ9zJ+CcK8pWgOY4Pm3Ce4qAg9DtrFz0nIiC8XUP
Atm+6hez0ROvfQyJJ4Fv8/lFWeiRiDv6zV4EXrvmrslED6j9Omh2hsAB7iWP
rqG7p3drj/gQOFEcV5WOflV65kDgWQLWVbxf0tBPj1drrPIjoCypbMNyo+iU
Wr4/gemId+tZru3YpapwnkDcxgJBlssjvfe0BhKQeGxxmOWifVWKVhcIrJ8u
f81yzszE7tFgApE/bRJZ90u7LScXEkIgMFUkmTWeeEcvem0oAcfExK4MdIRY
pWzRZQKpWmctWPMJfjMuoxJOoOtfHzHWfM9FEemXEQTYDypLsJ7HaXVPKbso
AlXGrnb56BOz5ZJT0QRWpJZ9vIG2LRvbEH6FwMXI0rwitGuw0Zx2HIHRGoqN
FQ9vo8pOngQCHj79hWXo85vWVLQlEviusDuTFb+wSe+Y2GQCGzUK3rPiG9/8
1tkwlQBTn+3Kin96ivx+gTSMV22yRhO6RHHmd0oGAXVNwdfP0TXc5p1mWQSk
RtzCXqMf9tSWC2fjejQ0C32H7gjwd87KI/DspoPZIHrm4cLbgmICft382uyY
/4sTrMudbhHYqtBJL0fz2D+M3lZKoHzyX8vVrPXLeVGjpJxAU1fn2U1oDW3O
8qq7BNy5v9X+hdYTdoz2uUcgSVCv0AhtMtLipHifwNl7f14dRZ+ICRe/30CA
Xrq57zQ69hVP9KMWAvLeW0qy0Gm5bk6hTwg0Gl0/WYzO9WpT12olYDM44ngH
XS0YO9vaRiCm6vrMC1Y9MF/t9PoNgTIFr3B2rE9bBoTUPwzgfIznkjzRVOU5
sbxPBBLkwDIYrXSpZ8ZhiEC0paxOHPrglozbw18IeE4aZ5WiT7tsEBsdxfoY
XMv5He2/58JM+TgBmWbV6T/oS7wfOrwmCWiPj3Oz6mlqaW7k9DSBTGHxWFl0
ThCHY+0s1tvxUjZVdLGBwz7/OQKfQ3Nj9Fnf7zY2i+6dx/i2L1G0Rj8Yl5pZ
WCAwcOHD/Cn0/2yKuIY=
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
LuVpvJOZw/WYp/Dizu8KYDH+4BrHTxxvJtF/on8owPaMV8tXsZfjPa9//6UA
ZfnDO0exX0to3Hu4rAAoqmH12S9cP22EtqyuKkDdHEPI5nkaevh4Kd10QwGy
Twi+scO+TKksYGclw/HRwhK2BRoavpCy8/xmMmx+pWZkin2k2L/2JScZ/NIu
FqdhS+3WfuMtQIYNbYVemUWcj/ylzd4Kk6G9hyv5LPZ8LeGzkhgZos4kKMdj
WzJ+Ox8qSQYu0szdNuzWQ42zn4lkeGzq3PwHe9udrMt7SGRYyYh/J/sb16fX
N//dJ5OB+7t8uT42K6/jzR8UMtxnWbvshu1xQo9LX5UM8ccVBCOwBxOU4h9v
JUPwxS/3s7EPDrJLrmuQIXYiarkau0ByJstiNxlS3zUeeoMtatupUrqXDPv9
ta8PYYdmFdC4EBnyOMdzx7F/TNzTctpPhgfKnS0z2BbKnk0Nh8hATFP/9AO7
wd3EQFKfDE/Grvz877lKyfYeHwMylE+osUxgJ/wWtOw2JgMpWJD4CZuwZ2lE
5QQZZhVYdd9iuwb0ud42I0PGde6AF9gfXlYsfD1FBtc1q9Yn2MCU4q91lgwf
PY5R72Ln6fozJdqQQeupXakHtmC4ZcSvc2Qo3thrbYwd2LlPwMCRDLw/c3dS
sCd5pVNzXMjgnpeKGLBNThLkGNzJcDtLOagHr/eLxK95ZzzJ8Fkpfv0xtuLH
hm3l3mSom95dfxE7ViqriteXDBLhqW92YTtkO7Q3B5LBYdlmtAbvf9fkYRPi
DTKcpwf8vYqtqaI06HeTDPz6bVe2Y/OUfp9SiyTD6u4Ptak4vvyWXnuG3yND
+Aur5CPYo3sKVkZjsS88+vMbx2dFncfmlGQylO3Us9qPLctsErP4gAw8F92v
jOB4jjy8XdT4IRmUhfu2BmPbvvmtyPyEDEw8B0pL8PlgH/LTc6eR4cDJ5Nc/
ZnG8+zzlukfH+/OARz4Q25a/v7uwCn/vp7YOduwKvR1nf9WRwSDbXkZiBn9f
2ZyndycZpizXa6Xxea2/a5/qN04GWzWDiGJ8/meU7tukTpFBkKJhJYot0lwv
XzNDhhiD6rVAnC/cV6WK/s3j8+ApXHsA5xMJp4GmoA0yJDH3atOG//vvW0Y/
bokoQlVhf9Pujzi/DwWUPhFXhD6CqmnwIK43Ps9826QUwT7u7942nN8UCtiY
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
WCAwcOHD/Cn0/2yKuIY=
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.932881140634214*^9, 3.932882331285606*^9, 
  3.933225961343221*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"fc59b083-f944-f04f-81a9-39078b0cbbb4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.2 Scomposizione risposta", "Subsection",
 CellChangeTimes->{{3.933225987077696*^9, 
  3.9332259952174034`*^9}},ExpressionUUID->"0d474937-e0b5-5c4e-bf30-\
fe11f123414a"],

Cell[TextData[{
 "La risposta forzata \[EGrave] composta da: risposta a regime o steady state \
response, che descrive il valore a cui la risposta forzata convergere e \
risposta transitoria, presente solo se i modi naturali convergono. \nLa \
risposta a regime \[EGrave] pari al contributo dato \
dall\[CloseCurlyQuote]ingresso, ottenuto prendendo il gradino unitario e \
scalandolo di un fattore, interpretato come fattore di distorsione sul \
gradino. La risposta a regime \[EGrave] definita come segue: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox["lim", 
          RowBox[{
            StyleBox["s", "TI"], "\[Rule]", "0"}]], 
         StyleBox["s", "TI"], 
         SubscriptBox[
          StyleBox["Y", "TI"], 
          StyleBox["f", "TI"]], 
         RowBox[{"(", 
           StyleBox["s", "TI"], ")"}], "\[LongEqual]", 
         SubscriptBox["lim", 
          RowBox[{
            StyleBox["s", "TI"], "\[Rule]", "0"}]], 
         StyleBox["s", "TI"], 
         StyleBox["G", "TI"], 
         RowBox[{"(", 
           StyleBox["s", "TI"], ")"}], 
         FractionBox["1", 
          StyleBox["s", "TI"]], "\[LongEqual]", 
         StyleBox["G", "TI"], 
         RowBox[{"(", "0", ")"}]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\text{lim}_{s\\rightarrow 0} s Y_f(s)=\\text{lim}_{s\\rightarrow 0} s \
G(s){1\\over s}=G(0)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "50954db6-a561-4c41-8c7e-d3235790e830"],
 " che in questo caso coincide con ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["C", "TI"], "1"], TraditionalForm], "errors" -> {}, "input" -> 
     "C_1", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "b9bb35c8-aa52-a34e-b262-1c12ee3cc0a7"],
 " che sar\[AGrave] il fattore di distorsione."
}], "Text",
 CellChangeTimes->{{3.932881190313263*^9, 3.932881319881965*^9}, {
  3.932881355369819*^9, 3.932881467586025*^9}, {3.932881507206566*^9, 
  3.93288164561322*^9}, {3.93288170467502*^9, 3.932881711408748*^9}, {
  3.933163681459287*^9, 3.9331637117799854`*^9}, {3.933163782883227*^9, 
  3.933163790531035*^9}, {3.9331638747507725`*^9, 3.933163890782692*^9}, {
  3.933226098359011*^9, 
  3.933226105194597*^9}},ExpressionUUID->"79161613-cc61-2a40-b05c-\
4bc66a37da9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RispRegime", "=", " ", 
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["C", "TI"], "1"], TraditionalForm], "errors" -> {}, "input" -> 
    "C_1", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"]}]], "Input",
 CellChangeTimes->{{3.932881716459247*^9, 3.93288172380739*^9}, {
  3.932882413553841*^9, 3.932882428683668*^9}, {3.9328825326861973`*^9, 
  3.932882535177263*^9}, {3.9331637151940536`*^9, 3.933163775902611*^9}, {
  3.9331638950621037`*^9, 3.933163897668705*^9}},
 CellLabel->
  "In[269]:=",ExpressionUUID->"bca2ef47-68e1-e944-976e-f925ea20071a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   FractionBox["432", "5365"], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.932882446838718*^9, 3.932882536783043*^9, 
  3.932968020095764*^9, 3.933162103904798*^9, 3.9331638994607162`*^9, 
  3.933226107546068*^9, 3.9334867767338333`*^9},
 CellLabel->
  "Out[269]=",ExpressionUUID->"f494dfd9-c53a-b243-8724-8d2e982d08dd"]
}, Open  ]],

Cell["\<\
La risposta transitoria \[EGrave] data in questo caso, dagli ultimi quattro \
termini della risposta al gradino unitario.\
\>", "Text",
 CellChangeTimes->{3.933163764800783*^9, 
  3.9334866389184265`*^9},ExpressionUUID->"7d59c9b3-2f9c-bb4e-928b-\
78193ee9b524"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RispTransitoria", "=", 
  RowBox[{
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["Y", "TI"], 
         RowBox[{
           StyleBox["f", "TI"], "3"}]], TraditionalForm], "errors" -> {}, 
      "input" -> "Y_{f3}", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], "[", "t", "]"}], "-", 
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["C", "TI"], "1"], TraditionalForm], "errors" -> {}, "input" -> 
     "C_1", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"]}]}]], "Input",
 CellChangeTimes->{{3.932881732502974*^9, 3.9328817595080147`*^9}, {
   3.932882453394829*^9, 3.932882453753132*^9}, 3.932882491695007*^9, {
   3.932882539291284*^9, 3.9328825424466534`*^9}},
 CellLabel->
  "In[270]:=",ExpressionUUID->"732f22b4-5ec5-9349-bd84-2002c0e323e4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"6912", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "3"}], " ", "t"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"779", " ", 
          RowBox[{"Cos", "[", 
           FractionBox["t", "4"], "]"}]}], "+", 
         RowBox[{"3780", " ", 
          RowBox[{"Sin", "[", 
           FractionBox["t", "4"], "]"}]}]}], ")"}]}], "74476205"]}], "-", 
    FractionBox[
     RowBox[{"648", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "t"}], "/", "3"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1206", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "+", 
        RowBox[{"9673", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}]}], "95021365"]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.932882544011278*^9, 3.932968021730777*^9, 
  3.933162106065859*^9, 3.933226109261982*^9, 3.9334867787171783`*^9},
 CellLabel->
  "Out[270]=",ExpressionUUID->"296ef637-a4ba-3344-be9c-7191f20bdbf2"]
}, Open  ]],

Cell[TextData[{
 "La risposta transitoria \[EGrave] tale perch\[EAcute] si esaurisce nel \
tempo per ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        RowBox[{
          StyleBox["t", "TI"], "\[Rule]", "\[Infinity]"}], TraditionalForm], 
      "errors" -> {}, "input" -> "t\\rightarrow\\infty", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], "."}], TraditionalForm]],ExpressionUUID->
  "540c46ed-af76-3641-9895-b673f77c66b0"],
 " Infatti si pu\[OGrave] verificare che il limite per  ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["t", "TI"], "\[Rule]", "\[Infinity]"}], TraditionalForm], 
     "errors" -> {}, "input" -> "t\\rightarrow\\infty", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "05c08bf5-c36b-d84b-9677-d45735b14849"],
 ", della risposta transitoria \[EGrave] pari a zero"
}], "Text",
 CellChangeTimes->{{3.9334866426244698`*^9, 
  3.933486683930502*^9}},ExpressionUUID->"09e4f25f-22ef-ab4f-b3ec-\
3ec276544aab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{"RispTransitoria", ",", 
   RowBox[{"t", "\[Rule]", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9334866482201424`*^9, 3.9334866520102997`*^9}, {
  3.933486784771042*^9, 3.933486834954027*^9}},
 CellLabel->
  "In[271]:=",ExpressionUUID->"aa2c6dd9-b8b8-1e46-8978-8b9a5944454b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "0", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.933486836292961*^9},
 CellLabel->
  "Out[271]=",ExpressionUUID->"af5ccccf-79ab-5646-94ee-6fa94c67320e"]
}, Open  ]],

Cell["\<\
Grafico dellla risposta forzata evidenziando la risposta a regime e la \
risposta transitoria.\
\>", "Text",
 CellChangeTimes->{{3.9328821924350753`*^9, 
  3.932882215837391*^9}},ExpressionUUID->"57f1137b-6db5-2b4b-bc33-\
3e3a6c84efb2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["Y", "TI"], 
           RowBox[{
             StyleBox["f", "TI"], "3"}]], TraditionalForm], "errors" -> {}, 
        "input" -> "Y_{f3}", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], "[", "t", "]"}], ",", "RispRegime", ",", 
     "RispTransitoria"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", " ", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Risposta forzata\>\"", ",", " ", "\"\<Risposta a regime\>\"", ",", 
      " ", "\"\<Risposta transitoria\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.932882223206619*^9, 3.932882272390526*^9}, {
  3.932882365825969*^9, 3.932882383488506*^9}, {3.932882472476707*^9, 
  3.932882484021807*^9}, {3.9328825483271904`*^9, 3.932882555078691*^9}, {
  3.932968003281779*^9, 3.932968015516334*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"23caca91-d2c3-e049-9701-326541710dfe"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    InterpretationBox[{
      TagBox[{{{}, {}, 
         TagBox[{
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           Opacity[1.], 
           LineBox[CompressedData["
1:eJwc2Xk4lVsXAPBjTOY5s4PD4XBQaZLspUGUoZShkimZE1KERFQyFDILKSTJ
eDimZCZSEhlSKbNIIRHx7fvdf+7ze97j3fvde+219rpXxu6iyXlGAoFgxUIg
/PfvtEA71q32qdqE//9jr9X0nmhgTryKMNxEZSb3bbTUhhCJd7DrXq7OkrW5
Y8uL2PtjsXlDqzcbaafVRUmzEJOxk55phztqq8zZ391wzMBe5NEPCtD+xJ2+
vtb3CHtFRMk4SpuUs3nn39Vs7BSDZ7Mp2m77Ll/4I/0UEYI0Px1uy9Eu7RnO
WjyQjwjDbxYEREu0/7oaDP1yLESEugq6kGW19kOGoTt/DhUjgo1628NPjdoH
O2Pkl/pKEIEYX6482aE9mXS4ftGZhp93bOXgfa8daf/PcmG1DD/njL/tPqCt
rl66/CuKjt83nv8zfVj7/apT3E/pSjyfQ5IO5mPaV1ql1OeKqxChLXqvxN9p
bbH7PR2zB2oQYfcu2uuun9q1VuGOM70vEOHgdfNi2qK2HQWYvju+RIRFNoOl
nSvajKt+bxcD6hCBF23TdVjX7hk2lVw8VI8IPYKug4qMKKdF3XWBuwERmNVF
LENZkG8+R+V8H3ZJRke04WZ0JHacdf5hIyKw5t+LiORCEr71J385NyHCgxtH
Gkl86MfZB49+bmtGhOyTbB4tAqjugM/PuVVs11+JEYXCKFbJRHuuqQURfsxH
24+KInseauSPqFZEmNITN3eWRDt/bxqcNWtDQTO+TecziWjTx2/kWelXKGh2
MiClShb11724PDP5ChGa6cxhjPIoLyep8XtxOyKkqzV6+JNRQOQlvu9+HYjg
dT85hUxBRl5G1tMHXiPC2DY9o81URLRQej7F2YmCBJjcXPnU0fw+5tXJXmwr
y1Co3ooSNlclTDi+RUGF5YcrXXYgms8Rr0siXYiAHMKeee1CD6Z3iS4EYFMK
dY4+2IPcu/gd5w+9QwQyL5F6ShuZHyBwe+W9Q0GdHspnfQBB+SztF3c3Ilhz
nDnUq4P4H7Qx/urrRkELmcO1rw+iVe7ypx5a71HdexdrD0ddNBr8+NjPh+9R
UJFeTMgWPVTuGJg+59yD4OWNA8xVR1HGoOuhi296ECHBy+bOc0MUZnhq5se2
XgRrrvsyKozR6e0amj9WexEx6nHFGw4TdCBH5usFmw8I+k+w6+88gVREecJm
m7C/Of9OvHASra9P9c5E9SGboNyyciZzlNme4fldegAFsZKWB3os0WJSGeVL
5AAiyp7O/nzPCuk6dox0rwwg9UqURFS1QTNMf0yr3g+i6Aw5IlHIDqFuTp4C
+IiC9vfc1BA+h2IfyrZlPv+Ijh3PFgkl2qPd+4w079weQsfSi7ZYHHdAERz2
CwGLQ6hO5zKvhK8j+jxwNd/D9hOqC7itl5LrhEKvZEtZ7P2M6qga/zTJrqir
cI2RPPcFx//QJzZjD8SPNltxqQ4jvT5DlgF2T7RXIU7ztv0wImht+jvX4Ynu
Lj5d8Hs3jCx41XSkrC4hjZje83bPvqKKt/qb4huvICtfm/1DX78ip+8C+fQ8
H3Tb+ruUmcg31K/8ycst0RcNUhn69W9+Qz9/XmjKDfZD19tVjmy1HkF6os2n
t6QEotxiusKz+BFE+NvqcLXgOupO2s8k/3oEdYXqVxnYByGSo0WNyJ5RVPdO
mJf3djBqZwpVJQiMIU6l9FWduRC0OM3N4ac/ho7xjI+GR4ciye7kiYXrYyhf
3/hvhcZN5PGw8OHEzBgKmC+Rabx5Cwnv+8j/tmUcja6KHfc5cgcByWFO7984
slCx0HrPGI6cOX51NGyfQATNfeIcteGoZoD1ZvnDCSSxPT2PZV8ksruy7U+a
3yQqal8hDVreQwWFdz66qU6jg223wZv3Pprmn448YjuNGM8aHpD1v4/IV45o
K8ZNo91PV8sWx++jh1ocmSMr06hfsbvuX30cin0V6XC6+TvS+nxDw/JmAroy
cu/XYctZ1PPruOMP7RSUwdERwnfoJ6KfnltL2p6JtPf5WwZZ/UTxJnoXrHwz
0ZC78o45n59IlP/O9+AXmUikO2L8dd5P5LfzdPug3iMUk2SgH8b7Cx1pNmBK
PvcYhci/4d74+Ast6vhOWj/JRo7oXfKM1wKamZcXErXIQ4RHS1UfIxYQwYHl
VdejPJTELDHUnrWAlOWmXR7M5qG2Vw5STz8soNdMlroOIc+Q4sm1R+c1F5Hq
p28fQwrz0aQTOf8zw29k/kDl+9dNhcgl9lptV/QSGt/+2Ty6pxgx/n705eXT
JbTY+yVtfrkYpZi3EQobllDM4eQwTckS1C4hcCBqcQndsmNduXK+BCk/yW3V
t/iDQgtHjEMXS9BM9fuuBullJKAzdZKVk4bcx5RGaAUrKAmEbGii5WjYaoCt
/tUKSt537fulveXoRH+YaufoCnpg3/5izrIc7e6YuDom9hftMjtNEMkoR0zF
2bzCt/8iP/XFI9xEOkoKkNH2sV5Flf6nOysEKhD7Ute5EL9VRH5VLtOiXoGu
XQy6cy9+FdVMH00NMqxAdnZfep50rCJvkk/9ys0KpKKX5tq/aw1pXLkjMTFf
geoFRJP38P5DZOMEVe6aSqQR1VZ7SPkfSrmVGBn/vhLlsPqOHtf9h6787ON+
OV2JIlc+qLkE/EM5BgWnlrZUIbMvcS0pk//QemX1n4kLVajN4uBMDtM68t5z
9bDXjSq0t3uBr1RqHbm5D4+kJFQhYrPJ2Y6T66ho75Jb84sqNJ3Hu7hat44S
xA4/ubypGlmS6kTZhtbRlNMtuUmRavQ27SIS/LOOfO19di0pVSNa9JtwFeoG
8kURsqNHqtH1K5EyZ5M3ULuB8BQhrBrNz+097EzbQEs3wsf1E6qRvfN3t8tv
N9DgMb5plaxqJK8qP9TCSICcyojoutpqxC4TSv6ymwCBS6TtEnPVqE0rRi3w
EAFcK1N7fVeq0S2L9F2SJgQIaHc7EMBUgxijKw6fcSVAnBBXgo9wDap71mz8
14cAJ2Vyoy5K16DA1m7z5FACpMyqXuFWrEF/12cc+9IIEFa/fE5ndw2qEPt7
8UoeAd4Xuyb0ohp0ZecmXyE6AZhXZQX5Dteg+QsyYSe6CLDiHXox8GQNKrqj
Gj0/RAAzOeO4otM1yD17b1LMFAEE5hJiw21q0Pch09y3jAzwL2fh9U7XGpS3
bFfkzsMAdboJzps9apCToEcFlwQDDELbw1DvGqSgfq0uX5EBulzT83J9a9Do
0fC2ozsYIFjpYMPlgBr0yDGxa1qHAWZcl+Rnrtcgm5Cs/jtGDBCZti7MGVKD
pDKKhxXPMEDBhecDvTdr0FBV7WSrIwOIBZuW6YfVoJQPHT8dvBnAZJPuomN4
DbKY719mCWaARY3mEfXIGiTMPU7IjmIAu8fsPVlRNahHaYHtYAoDaCbsEWm6
W4NiDxH4RnIYYFjhDOu9ezXomC2X6I1SBggzs/jDEl2DuK+JycjUMQDnpkVd
JezXSWSlutcMwP2x6cQK/n04TWOr9QADxP5TvX4FW69LZ8/6GJ7vu7PUTPx+
1hkjnbR5BvAK39d8FY/ftMlSX2uDAbKfeRcR8PxuyDkf/8jBCMGXzp7ZiecP
6MopPxFG+Evd0BDH37d+OsRWVJ4RPnhuKizE319zJdq5YisjCOo17lu8UYP8
YtM8zbUZYXifiMUUXr/dBXlXl44wQo7tNZ97eH2XXtGD480ZwVt5ccsEXn/a
WNMdDXtGQMcZKn7i/fFi6I5578EIBrez+/Px/qlLfkn2usYIe6lm/8TdatDz
kytPixIYwUqp003Irga5ebCWGD9mhMGsG+0PLWsQJVKg6kchIxwtFTD5alaD
chqp7SqvGKGGoCMVeqQG2X/R7O7oZYR39ANhE/heKbt6eNDlGyMc3v/FgXFf
DUrfZjedu8oIs89/jtqo1iBLo4vzh9mYQNFdvzpboQaJuQT8HRdkgrK4n5ey
pGpQQmYCu7wqE/SUd/F2c9Wgu7wdlEwbJuCXJ24mTFWjyl2SZUbuTPDwt3S/
8edqNGp1Ea35M8HGVf2bJ95Xo73PBU6aJzIBu2Hgv6s11WhS3/Ia1xsmUH6l
cMMyohoJehZsqv7IBH/a/A3tA6sRSiLEOk0xwUzS8h6yZzVKGM/KaWRmhkXH
IzrfTKvRgZDZt1f3MsO2bGsmPYlq5J6HTpP1maH7NLXxAFc1SnkXM9pjxgxO
PGdcGder0E/pnStqXsxQJT919fXnKpReEyg7nssM++/mbC5Kq0LLv3kumwiz
QDPBcn8aXxWSk7Tb2JBjgduSrZwHNiqR0UHanedbWcCpivdizUwlyo61SGcz
ZAHtmvWjqq2VyEQts7U2hAWWhLY2qvhVoudO28SUf7GAQqzSvjsDOD9/PPmS
6TUrBLYWZly8SUfsqV8veA6wQpy+12ZODzoqOe0u8WWcFQq8Qw0zTtMR0+Dt
q1UMm4DV86hXgRodZfVXbffctQlc9M9aRwyUo/FeYu7nR5tAZ71GRopajly6
ZqIrr7JBCadw8ulBGuKPvorIt9mA6JpqTGumoSpj1h9xcWxQV+6+Sa6Yhjje
Sh/1KGQDUbLsh/1hNJTfacJCHmODFU7djUe7aOhHe8XVuGObgfO7jWZiainy
bA61u0hmhz54NeB0rQRJjeqyLm1nhxH2nNXfF0pQB+PmvABgh+abH/ieWpUg
eYj6decUO8hZ+o7egBI0UBUflBXBDhGafBp8rCVIpygnfWCOHeLntRznk4rR
jzdO+23W2GHMnk2TN7IYpc5SxsfZOKC1JXvv6evF6DelkLoowwG8X37weTsU
o6fZ9BrukxxQkV8V0rqzGPGltg0eqOAALVayNWW4CNVWhge2N3EA6/10TuqH
IuTabyB7/B0HRAvc5rF5XYSahd45W01zwCFqWK95ZRG6Gj2w7CvBCSIZ1sr3
44uQQmHqgw1FThB03WcpGVWE3neehVs7OOFpQYzyQGgRonJ8u33fiBMaTx2W
HfcuQl9vTgsXBHECw7PRcxbmRehuVn6VRhQnGAYQI7yOFaG9je5W1cmccCmT
KPhSvwjFExay20o4YbLj4805rSK0X7pM3/glJ3T7F996v7MIze3zme3t4IQ+
5VDRafUipO+/qjEyygnDpuvchfJFaCn5Rb/zL07wIoVfPUssQo8rrgf8/McJ
a7e+3NQWL0L/fjM1/RPmAmOj/GtJfEUoT7DFMVSOC96Y89rycRUh8+1hHBzq
XHC+QvxDDVsRKvbgPCGizwWsk1bGzwhF6HWKwNXnZlwwVC2WglYK0XiTWMZ+
ey7Y/vUCd8Yv3CfPyTT3eXIBe1hgl/d0IRITVfrudp0L1rheF9aNFCKNA+p8
jFFcsEMu4cqNT4XI+MKuXYkpXEDRGpuq7MP3sUTtsyq5XCC76/4rh+5CFFp/
KKS+jAv27DjZFdZZiNK/Gzw1a+QCtpyXpdKvClGF0Mm337u4wOPmKZJycyHq
Rmd+B33G39Oe2plXX4hmne3EhWe4gGUzwSy9thCxxTnrPFvhggTtzdYsNYVI
ttbDETZxg36v4c0vlYVIa9InqleQG252BduoVBQiM/7rpS6y3DCpFBzyvbwQ
eWjdGthQ44bdZ04HSGCHO0RtxO3jBkWhUz21ZYUoKzpOnnKUG2Rl+Xi7sV9W
pR59acENft7Ohab494OjjzxPOnCDkfUTqj69EC1y5yVOXeKGkytXGfLxeNx7
il8EBnPDWi5L2rWqQqR4rmJE4B43cA/MXXiB57s/6uXmpw+4YXuvyyeXl4XI
kt6ipp3HDb6dOsduNhSiK187Td/T8fsIYwqcLYUohqPX36mZG/TYr7xYx+uV
v2Mo8183N7if7nG1fFOIWqxHWmOHuUG14+lN0vtC9Lf0l8CLVW64L/Foxy+8
P4Kfl/eYbOYBKaEgq0W8f6psBJsJYR74GXRexBrv7zlL7ny+bTxAFvi822m5
EAXeEurOQTwgsOvgHUYcL0lFEst7DXmAf6R+KxMzjh9m5YMOTjzgo74pLpmz
CI2rbnNZvcwDly7a+qrieCSc2hMdHcIDzK6JswtCRWjH88NDVek8oNxOfs2N
4znd1N6bp5cHNK0ONfvg81Bx3TUl6xsPDD/yyg3F5+X9U6+6PT95oI8o7l27
vwgxXwfWEhZe4G037y43LkK73xuZDBF54UfM1vJ81yJ0yMlkLIfMCxtvPy3w
XypCJv9MfT1VeSFNPJDnkV8RciOfTWfV4gWOZ771u8OLUKa/67S6OS8YLZJ/
7X5WhNTrNi/fPssLljWaxgdKi1Adcy7Ll3O8EPUi5uaF6iI0HDVKjPLghcCU
W4+lcX6RenjWfOoOL/TsvBQ/+6MIpTQZN2XW8MK2V78SmvcUo1gujXR+WT7Y
pk/VXxguRrIm3c+cFfmAWX9LNttMMSpO8KisU+WDYcEzXKp/ilGX9PMe9718
cFaobiGHqwRxb1Pg6DjJB09oO/P27y1B4WYiviG3+UCX/e6JgqQSdCNj7fji
DB88O5qs0GBRio6pV3gqL/DBVFurSLp9KZKqvxRjt8IHjx0aPl/1KEVV36a7
ulj4wa47hE8trBTNyw8YP5fiB82+11Yh9FJkl19m6HCMH/IemvVeFKIhnUp3
/f5SfpB7qn7csoOGuI9QnHmq+EF+53ftMx9oaGhwLEy3jh+cfrclGHylId81
yzbaa34wPODPyfKHhorQ0cMxY/xgkl693CBThogt5ENHtgjAqWGPQ/LeZYjw
fhhq/ATgy8xyrgF7OQqdqs30CxaAYSWmmCKBcrSZkMa4J0wALMcUvy5LlCN+
6qmmsngBkIvRu7VDrRzJ3353uLBIAJaO9/WamZSjvLTC3At0AfhUFTXWe7oc
qdKiNqvUCsB73rvEXedwP/ZVvyO3QwB+jIiJZlwqR0f2Nhg9GheA4pqBy+ux
5ejN8YeFNrMCcCK9a0dYCu7nnAJ5pRcF4A4l2nA+sxxZxmt2pzIIgtSjE1UO
ReXIfa7ENF5CEOwvkmw6OsrRPEtM+Qk5QRA+NvrUpLsc+Uhc3MJPEYTvlh++
VfSXoyB95YG7uwRBKGc0SmasHN1//NgyzEQQBDUjt9islSORquAXuqcEoVzi
n+RHBjp60GUtxWIjCA8FjYQ1NtFRzj/x4eALgpA98ODadT46ogj+BfAWBF7V
w/WewnRUSOnPXPcThE/jig91xOmowjzunH+YIMS+EP1+lURHWu5eTXvuCcLS
Etueb4p0VB96TH45XhA4/WfHyFQ6ai/mnPB+LAhbuk5sO7qDjoY4brq41wrC
79KYtp8H6MhG9lyHSrMgtG8q2HHgMB2N7dZR+d4hCI43dvR5HaGjH+f/zToO
CELZeGqd8zE6uhTw0UhhWBCOJi7ybj1BR8uxlYWj44Iwzp+b02tKRwx1lz1t
F/F8vu5oKsf3oVsfTnRLrwrCyY7fNguW+P40u3X7ZwYhiDvQ58ZlTUf3mHjj
HrAJgbGr5BKzLR0Jiv1YPM0jBBwvozgH7XA/rf7aVFRYCEQKLtRH2tOR5OG8
8j4JIciVDSJLOtDRo7NhWxLkhEBvlfFEhCMdKXg7+J6kCMHs5fxTfU50RNX8
ciJDXQiCCpc8fzjTkQbBQm16pxBMZKkuT7jQ0d6WLvYd+4Rgv5wdQ5MrHe2P
1B+/fkAI/I1pj2+40ZG+SUN9uz5+/+MzS3IX6OiYyN40oWNCYPc1gw8HJjL/
XOprYyYE/wj93DzudGSVpXLymaUQvOB1YjuFfd4lW23JTggU+F6K3sJ2U5fi
0HEWgrqWk9YJ2JeWEsYjLgrBasiTpTvYfjU8DR8uCwHh+551G+zgG2FpMgFC
EPgkOl4cO0yP4arbDSF4TlT/VInHv8ftd5IeJgQhcilLe7ETeubVGO8JgdXN
o8yP8PzTUlw5DOOFgPSyUmkGf1+Wzeh4YqoQ7gePRYhhP1M42/AtUwjc0EUj
Kl6PkpneNGoufj/dIZmE16uyxOiqb4EQHLt45T4Br2edb+vJRpoQHFFut6/H
6/+GuZLjVL0QtD702zZ/jo5627dOPG4VgrMrtBA7vH9D0XkNPzqF4LPplGmF
DR1NSzy4GjooBH9Fs9WFztLRr2+Cpm+HhSAziSle4gyOp9wodbEJIVAfZN7G
foqOWHZcnyhcEIKdxV0fkk7SEefqn4a/K0LwflJQR9OEjvjrPdIPEYRBKXIq
t8GYjoiGdqYfOYVB6vKc9h0cv1rnDzWyKgiD5d9BowVtOjqgXJt+XEUYGmX8
Xbr30tGRXzv9HmwThnQI2Zaym44srilu3YaEoXDLt/zRrXTkHc+RcdZCGD6P
c9Jc5ejI/0yoX66VMGT5UhMTpOnohsw/0wV7YWho+8uQj89n9PMfnHc8hSHg
sbRTogAd5Te/86OFC8M3lvPOPox0NPo70YzjhTDsC2xPih8qR490tl/61CgM
YWE2n0X7ypF11Jt7he3C4DYX0nnnXTkaJLG8OtEvDFwCOdyqLeXo3QmvvQ8W
hKHWI5c5tqAc1RYbEKmULXCH0SdYJKAcJV5gmDZK3AKRJb15dE6cD8dcrsV6
igCvduOls6JlSPeaXP5BXxGQTjpxZICvDO0XGhpcChSBUu8TOhbsZUjzkOHu
M5Ei0Kml9dFmlYYo2WoLck9E4PSEw7PsT7j/OL/oVDYkAv8uHtE78JiG2P7l
JzqOiEAL0fOF8AMaYo4/3yI6LQJ/q+T3zsfR0FrTB7nAPyKQf1TFu+EWDc2Q
Kj/r8ovC/hTe4rcuNPR69NrJ/sOiMNSsen9Ag4baAnaGhBuJwv1aip6RKg01
Cc4Va5mKwqy5LLwl01DNQRueTDv8e/nDM0tiuP/J2t/ufE0UVtIino8w0FCU
/SZYLREFR6Erree6S1H42kv355Wi8C4GR//rUnQrzjfNuk4U6s/O1Yi1lqLA
pqm/jZ2i4Jw3Lc1XU4rcSa/LIidFQUn4bG99TikyGo1WlpISg5IoWQPz66Xo
tfJojyVJDP6sPH7D5l+Kjl7aFZhKEYMWnTyp9iulSI/xc5fILjFw03x+N8C9
FO0nKl8ROCYGFn8enXpsVYrqHAOlTczE4GDI5eXe06UIFb5ri7YUg77rz4ii
5qVIS9tXnNtZDAgeJmffGZeiHZbNdWw3xACI/Pc49pci2mMRl8NhYhDxIetm
k3Yp2vbdVeDWXTEYflcTe3dvKVL143dgShWDA0LqSmY7SpFikjXHeqkYnBEz
e0ZTKkU5X0poWlV4Pkm2L/8olCJ5MquVf50Y/Kj30zMglSLZ8vyi5ddi0LnN
5qOSdCmS6FkxXRgTA1umxy10oVKUIm64sXVGDFzbe47cFihFouce5nrMi4Es
Jcnbia8UCc/rrs6ui0FubEajNVcpituTkqXCIg6/9O/MXOYoRQLBs4auHOJQ
rnu8IW1zKeLljXs4uUUc5qNkvGVZS9Fd8wl9spQ4rGodMLrOXIq4MjQXzpPE
YXeAz7tZxlLErvr10Ii6OKiyN7dubJSgsMsaczK7xGEkPGT74/USxPridpLN
PnEwL364x+JfCWIyUP3+SV8cXEOH15f+4vvV/eA4iWPi4HzYuHh4pQQRPvbs
O2MmDtk15aMfl0tQoKziRLKlOPgEiMRM/ilBa87+0f124pBBe/ucFduv+M2e
Lc7iEK4cu3XnUglaWZYZMb0oDpv0Pfl9fpcgX7gcGXdZHE6SPh56tViClm63
7XjvLw6eial1Ktjeb8W/8N0Qhyfmn65kLpSgBeGLYcfCxEFXQNmSjO1l1bD1
3l1xcIrzOFc7X4J+Zgt97IwTh47J1UAHbPdZp1DOVHGIvRv4UBp7VqOGejRT
HNayuSunfpUgtwCevjtPxGGIrFjZhD3daBfU9lwcRokF0UXY0jH9LndpeH7N
KnnPsU9aGZmerBaHKFK1cy32HeUmJNYgDjn3vSq+Ydcu76EMt4nDP8WHgWJ4
vIXmQsGct+KwXtHy+Dy24n35DdcP4rA08JC7CfusTerU1k94P37IZu/A3xNL
5ev5M4Kf775mUIXd+vdW7YtpcfgyJzl1HK/HWutabsgvcUi2KbVaw94a73Vf
fxmPz68aXYnX08Fu8hrPhjgkLDRY38Hrnapm5dTLIgENYbMFrng/utbem6Ry
SgA32cvKBu/f3sSXZLKYBHBaCFoF4f32sN/BP0uUALFpTbdnqyUoZ+uztRIy
/nvxbrPJtRLE+zrhnfYOCfheOb8jEcfToWTOGmYtCQhRIo+wMZQiP4cbOe37
JeA1gfw5AsffKMHd3+yYBEzY9pKbWXD8vxk5L2EuAVKckhT/TThfpJ469u2s
BBToOn7VwfFdseOQvLurBGhGJr4l4PMQ6SLx9uYtCWi31lAFfJ7qd8VWHo2S
gLiGFBufLaVoiZktiy9OAhj5r/99IVqKbDIWfNMyJaDofFupr1Qp0uhply2r
kQChtbf6GYqlyDkTuPwbJUCP7fArA+VSlO5e/gfaJeBbKF2HTbUUsW1+9Pp1
H57/7pSzudtL0ad9V6+MzkuAYtHE9G1Uivg55mzyViTgZHvL5wycX/T67Y96
ECTBYrO9TtOhUlTidYy4xiUJ2Sn5t7Ya4Pz5hNwuoCQJdsOzzkmncL7h+yB5
wFoSmNcWbJxx/huPGr8Rf14SXBPNN89dLUVp7H8mJlwlwSrgSHbAtVLEySxS
EukrCYOGOcyFoaVoeumU7ocYSYgbWb7ker8UZQ99cndukoQI9ozT4iU4/+SO
vbynJAVTPU97hRdKUQ9pifRNTQpUmx837f9TiiIyWcM1dkrBlyLmRY/VUvQ3
hXxyYL8UVF3UsX7PREP9Uc6TspZSEK9QEPBMkIbuX5rlLb8rBQWO7yaDd9IQ
O/ptO7QgBcr76riTr+J+R0eRrfyvFJSdbzvHG0hD4wfOFNxjkIYbnRFbQm/Q
UINe/d/9PNLweGGl1zqChvxMou4/pUjD+76tNiO4/n0/L998xVYaKq4bPfxV
S0OnnSxcjzlJQ/DWpkcijbi+uUTwUS5Kw/TgP+KeVhrKuvjr7KcAaaiXspg8
/5aGLK++WDqQJA0qXoYkly+4PkaaKvK9lQb+fg3h1X80pHkv7M10rzT09bmr
PGEoQ7kx1d5NQ9LwcNfIqSMsZSg0QabeZ1oarnCke1/mLENSXUsqc4xE+PYk
n3hGrAx9GGhoNpUiwmBX1qq+RhniOjOU1CBDBIt3YxyndpWhg0O/XdXkicB0
2cDmrGYZKvmsyL9ZhQh9tqOXD0EZujty16pmDxG6TugORB8tQ4dnT/+RNcXP
gzeXMtqUoXTBkPfXLfDfU7l0jtuVocW9zwqHzhBhx7ETR+Psy9DD8FXHBDsi
WDn2ZPxxKkN/yQ/6N3sQQfBJ4J+tnmXomHETzeESESKemvLLXSpDOVdmohuv
EGGlc8KI7XIZOtGspX/tGhFMW/+xF/qWoXy7T5U/w4mQteH90u16GWIMZ0kw
vEuE8GcpgutBZciimOqVF0MEr/QZ05AbZYiFEEixTyLC4wiFKOebZciSnMNa
n0oEn/aggPZb+HuN3nyTzCDC2NfpI9JhZcgqTSq1L5sIvG0b17LCyxCtSddH
4ykRWIoSh3siyhD7jPuJmHwiqAaISK1EliG65kuOo6VE0JhoUJa8V4a47SYm
npQTYZpt/7pEdBmyv8PTxFxFBK66E0W8MWWIt986oLaOCN0H3714H1uGHDZu
W4g3EcG7ckz68f0yVKNQpOHbSgSpmCF3h7gyxG/Uz9vbToRldatCyfgy5HyZ
MLv1DRHyk5LH27DrHii+uvuOCLX3Dog5JZQh4aZj2d97iFDVGX9sFdvtu2+w
Xj8RzkgaRd9ILEMN/Jlnsz8SIc3v+fA/bBHNV3sYvxBhUtlH/0JSGXK3/SVk
/Y0Ixz/MdXdhN4WJzlePEYEhauimYnIZEi/SeSMyhdfrY7CrN7ZXn3Pe5Rki
POh8FEXDbluPudU9R4T2metLk9hSClV2agtE6IcPRXwpZcjb8Jt25BIR1HQ/
t6pit3uzi0+t4Pj5duQwYBMfbPtz6B8RWo7r7dXFvtJ4+v0jggzsFfYv+u95
5/SNwg0mGXAcXC9VwybxP4uw3CQDu8zOnxDA9tvz3rGSXQbkqWUPvuPxu2xW
Dwhzy0BHm1N6BbZCmBzxEp8MBKtdcPTDDig8uvZWUAZ4+4ibtmJ3f7jUryIi
A48umUQN4e9XXE+l3RGXgS8NiP0a9nX5puhxKRlwORF3lx/7g8GM2wFZGajV
c1JOw+up4i2o/1BeBvzF0bwEdn+DPcNpFRnQMRbUXcP79VNnUOyamgwMtpzh
dsTeVG+s8XCbDNT9e/OkDe/3zpeajuO7ZYDa3xPlgePBSLsoaLOWDNQE//pb
juPl/Av5FBUkA7f5DPwWcTzFVfN2eh2SgVL93wsncbzla94aj9eTgaPXBfh8
cTw2Vq5uVByVgav1nLdi75ahefr4to3jMkAQU657juPXmFaTFGElAw7Hfly/
juPfYfu2kgJbGWi2eW9vfbsMBZY86XhnLwMlpEt7duHzkl8Uu77FVQYsvK8x
vg3B5+G5k32WjwxotrWdzAwsQy3ZguovomWA5V01fcSrDH0mhesP38fP6baB
Bvi8/368YceUKAMPCr7eK7iI9+/RdLx+mgw8lBz5aeVWhm6k1632PpWBs8VS
+y+dL0PaiW6tPxpkQP2Cgvl1szJUFtZkRfwtA34rbcd7cT7LPdIhcntZBihe
nTUO28pQCmd39+yqDFT75K8tqJWhoOgvutWMsqD6nPsGo3IZMkj6q2rGKwsc
PhVmC8Qy9O2J+kaEsiwofBF9rYPzJ3frg4w/trIQ9WPp+bWvNMRw5/Epq/Oy
sKOpdq39Mw0tHskTaHaSBYdME0ORIRoaeEO/HXtRFkSvV1wq/YDz+4fui9Rr
ssCjO3F0rgPn73E2OJckCyTRWOOkchpyYLk8/OaNLHx3POQVGEVDYtKv+lbf
yUIRS42OOq4vb3ZLvlXslYX2l7V7xsJoaKdb84sbH2UBXatYtAilIdb3Qqk7
J2XB8OeNRmd/Gsp+WG6aziAHp01OeOjg/sqiit2wg1kOZP4xDao60RBnj9XB
5U1yUOtwNpHoQEPemzZtN+GWA7Ht0cZ8djR00N2cl1VcDlika64qnaah0b3L
7Rc05MBERGtD5ygNJZkaNKTskgPeT1NT/vo0ZHDxYWWrphxsVf0jWH2YhmiP
9HJldORAy/2Qlf5BGgrdnHyz11AOTEOPcT3ZR0O75WYDGI/LweAvbwNOLdwP
aul4q52Ug7+nVZR8NGnopMeU3Z3TcpAv9mb07C4aIvXtgX2OclD1ccnHYyuu
5z+jdrm4yEHnenEFkzoNRbJ/U028IAebFT9/e4D7xcV94ZK/LsnBs0Rdwa/K
uH/MGvybFSQHXb4K9cUKuL7Xqs6/C5GDGw/k5C/L05BK/42p9Vty4Jw8la9N
oqE4DuV+iyi8Ho+b0agMDZ3z8i/jTJGD9ThpDj9JvP7bPpcppcnB0ePfTL0l
8P1hHrcyD+WAQfdSgbc4DRV5stKDcuQgqcU28bYo7n89YioWS+TA7rZ0xpIQ
Db1VX6zgK5eD4P3NRTLYj36aVapWykHi2+BxE3w/0feQqHJ6KQftsoVNrfw0
lHDxSfVQhxw4cu5wXeWhIWc19pqVN3KwPzen1hxba86tRrhbDk5aV2hVcdPQ
iPu2F8f65eDDJxd6DBcNlavGv7jwUQ4yX7aXsGKH//jzIvyzHIz5638I5qQh
dfcXtU2jckB/dic6nIOGmFSJL79OyMHwS0WSCPaH2Rsv16fl4GH4o4Fn7DT0
9PnYS/EfeD3a3hUcwg64oFe3+5ccXL1nljm2mYaMqc/qTBflwCY9oSACW3aW
q97rjxxIVrx4vwv7ldv7+vx/cmC8/dipR2w09EBlZ8MrAgnUDi+W2GB7zCQ1
jDOR4GLoL2F57AP5qw1Mm0iwhc08eG4TDQm7WTUS2UmwW2pt9iX2lHJ94z4u
ErBnB1kkYNd8l2s6zUuCQU/DGi/se89uNfkIkCCfHidoim3nOtUUJ0yCiIsm
lvuwdygbNBeLkiC1weCuMjbb94LmNxIkqL0smC2NPZTH1/JdmgQzZiypotiF
Lt4tbHIkkMvXdfnPNyh9LfIKJJh63MH53+/Npve07lcigWvriQAKtlLeg1Zr
FRJIubuW7MVec95oDVAjweQ2t1wT7LdKdm3J20jQ7nLN/CL2o6mmtvIdJFh/
EFcRg33lKfnV+90kCF+73FSJre8c/urnXhIcHqFdmsCWUJp9xYVIgIxotWJ4
vX5OGrdT9pPA/8yTtBPYjbkl7YcPkUDyVQxbLHaCk1CHvR4Jei7r/enFdlb0
7Qg+SoLH3zxtpfH+aE0OdqQbkeBL2S1td+xvjg9f95/E4697qUrg/S4jM3X+
NifBHPmMmj922MT5Tv4zeHzV49e/YKs5Kr8xsCVB86an43QcP5+dpS8+tyeB
S9WrjR043iLdBHi5nUjwmoWBUoU95bl6/K07CaYDeAN7cHwmec/Nq3mRwEI9
MsoFx7Ouz8j96Msk2LTP8SorjvfHAR29xwNIwEbcWmjMS0Mm119eKblOgiZL
kU9r2IQbpVsEQvB8A44XFvLR0Nnbqad67pDAcTGQVUGAhrbEun4ySyTBP+vs
TyeEaaglzjqQnoLXX8oqSmULzoeJJ6RF0kkg8JXixC5CQ+8e7LUdyML7eYrX
uhef54gnHGNnSkhQLxF2Jwfng42aZzM2nSR4VPCAl4zzS8HLjKj6LhKcvO79
+AgZ3+cb7qvK9pCAa4x2zEuRhipb/T1GBkkQsneguJNCQ5e6jy6enySB3c6Z
yBI1GpqY+L7qwiQPR1b3GJJwPnzLr8JxeY88VG/toskcpyHtCxemUrXk4VSF
vHi4CR6vtaC1AckDR7jcxsIJGrobsDWUV1ceBiO0CK/NcH4e3/nvmYk8hPYE
KUZY0lB7pc7cN1d5YJD+Qd2N60Gzjfn7Y+nysC03qfDLdRrSqE4q9smUB65S
rTOngnH9Ehq8l54lD6Xka/HduP8Jbbc0mMmTB8KmMv/GmzS0X8Ou+TZdHj4F
VQek4XpVt+kCvbZLHrYPWLEpJNJQdcGNVBUmBeinUBVVnuN6ZWAqlsiqAPHX
11ySC2jo+BQ5mYFdAVSZd+xjLsLfL9eZ8IFXARh9jM27S2hIIHlLbJCUAogU
mAwbVdCQa0h+WM8eBdB2TX3/ogHnN+L1TWifAqx+FHjzD/dXDLXHbz0FBRi6
7Rqh2UxDictLIYGHFWAt1VU2D/dbjRd0riuaKkDny/UEm9c0JG7x4XKAhwI4
7v8wL9OL6/Hv3MXxSwpQEhVmroTrd3Gs/6XjPgpw4vvvMZU+GjrcSfRUCFQA
PyUZW8UBvH/7Xd26IhTgWGku809c/2u/7PuueU8BWtkeTfV9oqHN13hdsmMV
4MXe7XXV+L6QQS/D90wFGHajUHyGaahDhXCO9EQBeD79Ma0Zwfmtvfvr3TwF
YDtYTgkZpSFbx2yblecKoHTxbcuhMRr6k3nE6g1NAdIyhQ7WjtOQ3Jb4U74N
ChDyUH3Sf4qG3GmO/d+aFeABd2AEcRrH23FNc8NXCvBM5e1AHbZx5JeTsl0K
sMzvcmHxOw35M1COvf6kAEFHVneQf+B+9yBHv8JXBdg2wpWZg30sbMY6eFQB
LuVpvJOZw/WYp/Dizu8KYDH+4BrHTxxvJtF/on8owPaMV8tXsZfjPa9//6UA
ZfnDO0exX0to3Hu4rAAoqmH12S9cP22EtqyuKkDdHEPI5nkaevh4Kd10QwGy
Twi+scO+TKksYGclw/HRwhK2BRoavpCy8/xmMmx+pWZkin2k2L/2JScZ/NIu
FqdhS+3WfuMtQIYNbYVemUWcj/ylzd4Kk6G9hyv5LPZ8LeGzkhgZos4kKMdj
WzJ+Ox8qSQYu0szdNuzWQ42zn4lkeGzq3PwHe9udrMt7SGRYyYh/J/sb16fX
N//dJ5OB+7t8uT42K6/jzR8UMtxnWbvshu1xQo9LX5UM8ccVBCOwBxOU4h9v
JUPwxS/3s7EPDrJLrmuQIXYiarkau0ByJstiNxlS3zUeeoMtatupUrqXDPv9
ta8PYYdmFdC4EBnyOMdzx7F/TNzTctpPhgfKnS0z2BbKnk0Nh8hATFP/9AO7
wd3EQFKfDE/Grvz877lKyfYeHwMylE+osUxgJ/wWtOw2JgMpWJD4CZuwZ2lE
5QQZZhVYdd9iuwb0ud42I0PGde6AF9gfXlYsfD1FBtc1q9Yn2MCU4q91lgwf
PY5R72Ln6fozJdqQQeupXakHtmC4ZcSvc2Qo3thrbYwd2LlPwMCRDLw/c3dS
sCd5pVNzXMjgnpeKGLBNThLkGNzJcDtLOagHr/eLxK95ZzzJ8Fkpfv0xtuLH
hm3l3mSom95dfxE7ViqriteXDBLhqW92YTtkO7Q3B5LBYdlmtAbvf9fkYRPi
DTKcpwf8vYqtqaI06HeTDPz6bVe2Y/OUfp9SiyTD6u4Ptak4vvyWXnuG3yND
+Aur5CPYo3sKVkZjsS88+vMbx2dFncfmlGQylO3Us9qPLctsErP4gAw8F92v
jOB4jjy8XdT4IRmUhfu2BmPbvvmtyPyEDEw8B0pL8PlgH/LTc6eR4cDJ5Nc/
ZnG8+zzlukfH+/OARz4Q25a/v7uwCn/vp7YOduwKvR1nf9WRwSDbXkZiBn9f
2ZyndycZpizXa6Xxea2/a5/qN04GWzWDiGJ8/meU7tukTpFBkKJhJYot0lwv
XzNDhhiD6rVAnC/cV6WK/s3j8+ApXHsA5xMJp4GmoA0yJDH3atOG//vvW0Y/
bokoQlVhf9Pujzi/DwWUPhFXhD6CqmnwIK43Ps9826QUwT7u7942nN8UCtiY
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
WCAwcOHD/Cn0/2yKuIY=
            "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
         TagBox[{
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2], 
           Opacity[1.], 
           LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wZbbdlD0BIaJzt9iz336k/lb+pD2Mv/DU
/MLX8jfh/HXrO2/n6L2C89PtL858U/QZzs97qvl4y7qfcD6XYov6fQsGBxi/
T+C01sIEZjg/6XbIfuYzbHB+4dGWpHx1Ljh/YwFPsIQnL5y/sDr7lUG4AJzf
NP9P4Jc3gnA+w+UHDnuqhOF8tZK0ihAtUTj/ydfpYdx7xeB8r6dZtZMKJeB8
vycTtOXkpOD8V4eTGk6slYbz9QSvyTrHy8L5XPZfE+98loPz3d9GfVcKVYDz
bxxKYYzSUYTzt3YciVP4iuCnsZY+OHdOCc5PLqreyjNLGc7XT9c+55OoAuef
F9LhLrVUhfN3r2uarcOsBudXM2oFnLmL4HPdqfLI26IO5z9dpjhlfo0GnD9F
Q5JlZ6gmnD9hVtrxRAUtOD9qSuw5nucI/g+XpT/n79OG8x8/dao41K4D5y+y
NZQ+m6gL569tLRVM19WD89tDk72ZvyL4pncWrmw/qw/nz9CcvfastwGcX3+g
d4b3TgTfVzp06SkVQzjfMe94tGAngj9fJknlzFcEX+Xw8ml+0UYI/+ke0rq0
D8FP+8xy8aSWMSI9bvyk0NmP4E+4xNN75DiCv++z2s///xF8ALAcbzY=
            "]]}, Annotation[#, "Charting`Private`Tag#2"]& ], 
         TagBox[{
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[2], 
           Opacity[1.], 
           LineBox[CompressedData["
1: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
WCZ/WFFFmWBd71Os+/hEof2sZPl6sxme0vgz4KUsChdYpfVGAqxwtrVxV66q
KEhMNuacmbHCxj63m/qOiEJL9tl3yTbWuKHEoFL4qCjQZr6J+qdkg2PocmJH
TERhi4W5I/XTKawmuhhBZS4KUfdX1o/q2OIFzaMB8laiEHae59mNO7bYyneO
dP2MKBwKq5z45HUai71XBy1XUQhSCeFWnTuDR5cSVT08RCHH78Hsed3/cAL9
V7ksL1EoECm34y/8D69p3Ti4fFEUFI9cp2I1scM9ZR+3yiJFQXw5ZWAq2x6H
tMutvI4WBfs9BoMM3+2x7GjU3E6cKHQN9H+oOuyA0xlkRm0TRaHE4amI3nMH
fNY//BFjrihUTBsaD884YhWl8UfSBaIg6D40JMjphOlX4PHx26LgOXy/hVPZ
Cdf67WuMrBAFNzxe0OjnhP/6pj5ZqxMFkwqJinffnPBLhbUnbI9F4YSOj1/A
jhMuWbJpkmsShfSiz00mPM7Y0Je/2Q2LgpT6obWHhs440+dOy9igKNzaGySq
VeqM3eXpWzdfiMKRGzqP6hqdseYvz1buYVHgrWRYJQ0642/eSm1mo6LQ/b4l
/+KSM34sl9Hm9YmspxArvKUk4Rs/N9pujIvCb67vHT7sJKzg3dbeM0Xul+9r
iK0iCVPLCeHJWVFIy9zdU4FI+N1iFN6ZJ89L+6m1vAkJV92bxnw/ReGe//iD
tdMkHOFl0KG2LApnSvUc18+R8Eni3Q7rNVFIfnqsUdmPhEUWmTr9N0ThS5IT
e204CT/zfNNZ808UMqTYnByTSDhfVqXrGYUYpNYkyaRnkrDvQnbXDLUY3N0z
e5emkISP1Wx3UdOIQWKyimNzGQlzezp0C9GLQdjgrYGaahKek+ns1mISA5Vl
qrAvD0i49YdozxlWMZA65U5h2UDCyXfjeoI5xICtIHKD5gkJky7M9aRziwF/
8bPdnWYSPixj3PvwgBiIoCsdam0kTPvjfu8LfjFo/Rg/+6idhMeq2Z7+EBSD
hQZP6WBMwg88Ap7SiooBgVnn6CUyRxHePxWXEAM/rtKlfvJ5m3n1Ph1pMZAu
L9w9Q84nXZ3f5ygrBvhFlaZyC4n8PbnbFyEvBq6HUyOsyXpeSpP6c5TEQFHd
IxeT9ZbM9fQ/PiwGIyvRwRdrSTioSvLZGzUx0KO03fa7S8KG7jeeLWmIQa10
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
            "]]}, Annotation[#, "Charting`Private`Tag#3"]& ]}, {}}, {
       "WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
      StyleBox[
       DynamicBox[
        (Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               Line[CompressedData["
1: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
LuVpvJOZw/WYp/Dizu8KYDH+4BrHTxxvJtF/on8owPaMV8tXsZfjPa9//6UA
ZfnDO0exX0to3Hu4rAAoqmH12S9cP22EtqyuKkDdHEPI5nkaevh4Kd10QwGy
Twi+scO+TKksYGclw/HRwhK2BRoavpCy8/xmMmx+pWZkin2k2L/2JScZ/NIu
FqdhS+3WfuMtQIYNbYVemUWcj/ylzd4Kk6G9hyv5LPZ8LeGzkhgZos4kKMdj
WzJ+Ox8qSQYu0szdNuzWQ42zn4lkeGzq3PwHe9udrMt7SGRYyYh/J/sb16fX
N//dJ5OB+7t8uT42K6/jzR8UMtxnWbvshu1xQo9LX5UM8ccVBCOwBxOU4h9v
JUPwxS/3s7EPDrJLrmuQIXYiarkau0ByJstiNxlS3zUeeoMtatupUrqXDPv9
ta8PYYdmFdC4EBnyOMdzx7F/TNzTctpPhgfKnS0z2BbKnk0Nh8hATFP/9AO7
wd3EQFKfDE/Grvz877lKyfYeHwMylE+osUxgJ/wWtOw2JgMpWJD4CZuwZ2lE
5QQZZhVYdd9iuwb0ud42I0PGde6AF9gfXlYsfD1FBtc1q9Yn2MCU4q91lgwf
PY5R72Ln6fozJdqQQeupXakHtmC4ZcSvc2Qo3thrbYwd2LlPwMCRDLw/c3dS
sCd5pVNzXMjgnpeKGLBNThLkGNzJcDtLOagHr/eLxK95ZzzJ8Fkpfv0xtuLH
hm3l3mSom95dfxE7ViqriteXDBLhqW92YTtkO7Q3B5LBYdlmtAbvf9fkYRPi
DTKcpwf8vYqtqaI06HeTDPz6bVe2Y/OUfp9SiyTD6u4Ptak4vvyWXnuG3yND
+Aur5CPYo3sKVkZjsS88+vMbx2dFncfmlGQylO3Us9qPLctsErP4gAw8F92v
jOB4jjy8XdT4IRmUhfu2BmPbvvmtyPyEDEw8B0pL8PlgH/LTc6eR4cDJ5Nc/
ZnG8+zzlukfH+/OARz4Q25a/v7uwCn/vp7YOduwKvR1nf9WRwSDbXkZiBn9f
2ZyndycZpizXa6Xxea2/a5/qN04GWzWDiGJ8/meU7tukTpFBkKJhJYot0lwv
XzNDhhiD6rVAnC/cV6WK/s3j8+ApXHsA5xMJp4GmoA0yJDH3atOG//vvW0Y/
bokoQlVhf9Pujzi/DwWUPhFXhD6CqmnwIK43Ps9826QUwT7u7942nN8UCtiY
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
WCAwcOHD/Cn0/2yKuIY=
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wZbbdlD0BIaJzt9iz336k/lb+pD2Mv/DU
/MLX8jfh/HXrO2/n6L2C89PtL858U/QZzs97qvl4y7qfcD6XYov6fQsGBxi/
T+C01sIEZjg/6XbIfuYzbHB+4dGWpHx1Ljh/YwFPsIQnL5y/sDr7lUG4AJzf
NP9P4Jc3gnA+w+UHDnuqhOF8tZK0ihAtUTj/ydfpYdx7xeB8r6dZtZMKJeB8
vycTtOXkpOD8V4eTGk6slYbz9QSvyTrHy8L5XPZfE+98loPz3d9GfVcKVYDz
bxxKYYzSUYTzt3YciVP4iuCnsZY+OHdOCc5PLqreyjNLGc7XT9c+55OoAuef
F9LhLrVUhfN3r2uarcOsBudXM2oFnLmL4HPdqfLI26IO5z9dpjhlfo0GnD9F
Q5JlZ6gmnD9hVtrxRAUtOD9qSuw5nucI/g+XpT/n79OG8x8/dao41K4D5y+y
NZQ+m6gL569tLRVM19WD89tDk72ZvyL4pncWrmw/qw/nz9CcvfastwGcX3+g
d4b3TgTfVzp06SkVQzjfMe94tGAngj9fJknlzFcEX+Xw8ml+0UYI/+ke0rq0
D8FP+8xy8aSWMSI9bvyk0NmP4E+4xNN75DiCv++z2s///xF8ALAcbzY=
                "]]}, "Charting`Private`Tag#2"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[2]], 
               Line[CompressedData["
1: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
WCZ/WFFFmWBd71Os+/hEof2sZPl6sxme0vgz4KUsChdYpfVGAqxwtrVxV66q
KEhMNuacmbHCxj63m/qOiEJL9tl3yTbWuKHEoFL4qCjQZr6J+qdkg2PocmJH
TERhi4W5I/XTKawmuhhBZS4KUfdX1o/q2OIFzaMB8laiEHae59mNO7bYyneO
dP2MKBwKq5z45HUai71XBy1XUQhSCeFWnTuDR5cSVT08RCHH78Hsed3/cAL9
V7ksL1EoECm34y/8D69p3Ti4fFEUFI9cp2I1scM9ZR+3yiJFQXw5ZWAq2x6H
tMutvI4WBfs9BoMM3+2x7GjU3E6cKHQN9H+oOuyA0xlkRm0TRaHE4amI3nMH
fNY//BFjrihUTBsaD884YhWl8UfSBaIg6D40JMjphOlX4PHx26LgOXy/hVPZ
Cdf67WuMrBAFNzxe0OjnhP/6pj5ZqxMFkwqJinffnPBLhbUnbI9F4YSOj1/A
jhMuWbJpkmsShfSiz00mPM7Y0Je/2Q2LgpT6obWHhs440+dOy9igKNzaGySq
VeqM3eXpWzdfiMKRGzqP6hqdseYvz1buYVHgrWRYJQ0642/eSm1mo6LQ/b4l
/+KSM34sl9Hm9YmspxArvKUk4Rs/N9pujIvCb67vHT7sJKzg3dbeM0Xul+9r
iK0iCVPLCeHJWVFIy9zdU4FI+N1iFN6ZJ89L+6m1vAkJV92bxnw/ReGe//iD
tdMkHOFl0KG2LApnSvUc18+R8Eni3Q7rNVFIfnqsUdmPhEUWmTr9N0ThS5IT
e204CT/zfNNZ808UMqTYnByTSDhfVqXrGYUYpNYkyaRnkrDvQnbXDLUY3N0z
e5emkISP1Wx3UdOIQWKyimNzGQlzezp0C9GLQdjgrYGaahKek+ns1mISA5Vl
qrAvD0i49YdozxlWMZA65U5h2UDCyXfjeoI5xICtIHKD5gkJky7M9aRziwF/
8bPdnWYSPixj3PvwgBiIoCsdam0kTPvjfu8LfjFo/Rg/+6idhMeq2Z7+EBSD
hQZP6WBMwg88Ap7SiooBgVnn6CUyRxHePxWXEAM/rtKlfvJ5m3n1Ph1pMZAu
L9w9Q84nXZ3f5ygrBvhFlaZyC4n8PbnbFyEvBq6HUyOsyXpeSpP6c5TEQFHd
IxeT9ZbM9fQ/PiwGIyvRwRdrSTioSvLZGzUx0KO03fa7S8KG7jeeLWmIQa10
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
                "]]}, "Charting`Private`Tag#3"]}}, {}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                Opacity[1.], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[2]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[2]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[2]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>], 
        ImageSizeCache -> {{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
       False]}, 
     Annotation[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]], 
           Line[CompressedData["
1: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
LuVpvJOZw/WYp/Dizu8KYDH+4BrHTxxvJtF/on8owPaMV8tXsZfjPa9//6UA
ZfnDO0exX0to3Hu4rAAoqmH12S9cP22EtqyuKkDdHEPI5nkaevh4Kd10QwGy
Twi+scO+TKksYGclw/HRwhK2BRoavpCy8/xmMmx+pWZkin2k2L/2JScZ/NIu
FqdhS+3WfuMtQIYNbYVemUWcj/ylzd4Kk6G9hyv5LPZ8LeGzkhgZos4kKMdj
WzJ+Ox8qSQYu0szdNuzWQ42zn4lkeGzq3PwHe9udrMt7SGRYyYh/J/sb16fX
N//dJ5OB+7t8uT42K6/jzR8UMtxnWbvshu1xQo9LX5UM8ccVBCOwBxOU4h9v
JUPwxS/3s7EPDrJLrmuQIXYiarkau0ByJstiNxlS3zUeeoMtatupUrqXDPv9
ta8PYYdmFdC4EBnyOMdzx7F/TNzTctpPhgfKnS0z2BbKnk0Nh8hATFP/9AO7
wd3EQFKfDE/Grvz877lKyfYeHwMylE+osUxgJ/wWtOw2JgMpWJD4CZuwZ2lE
5QQZZhVYdd9iuwb0ud42I0PGde6AF9gfXlYsfD1FBtc1q9Yn2MCU4q91lgwf
PY5R72Ln6fozJdqQQeupXakHtmC4ZcSvc2Qo3thrbYwd2LlPwMCRDLw/c3dS
sCd5pVNzXMjgnpeKGLBNThLkGNzJcDtLOagHr/eLxK95ZzzJ8Fkpfv0xtuLH
hm3l3mSom95dfxE7ViqriteXDBLhqW92YTtkO7Q3B5LBYdlmtAbvf9fkYRPi
DTKcpwf8vYqtqaI06HeTDPz6bVe2Y/OUfp9SiyTD6u4Ptak4vvyWXnuG3yND
+Aur5CPYo3sKVkZjsS88+vMbx2dFncfmlGQylO3Us9qPLctsErP4gAw8F92v
jOB4jjy8XdT4IRmUhfu2BmPbvvmtyPyEDEw8B0pL8PlgH/LTc6eR4cDJ5Nc/
ZnG8+zzlukfH+/OARz4Q25a/v7uwCn/vp7YOduwKvR1nf9WRwSDbXkZiBn9f
2ZyndycZpizXa6Xxea2/a5/qN04GWzWDiGJ8/meU7tukTpFBkKJhJYot0lwv
XzNDhhiD6rVAnC/cV6WK/s3j8+ApXHsA5xMJp4GmoA0yJDH3atOG//vvW0Y/
bokoQlVhf9Pujzi/DwWUPhFXhD6CqmnwIK43Ps9826QUwT7u7942nN8UCtiY
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
WCAwcOHD/Cn0/2yKuIY=
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wZbbdlD0BIaJzt9iz336k/lb+pD2Mv/DU
/MLX8jfh/HXrO2/n6L2C89PtL858U/QZzs97qvl4y7qfcD6XYov6fQsGBxi/
T+C01sIEZjg/6XbIfuYzbHB+4dGWpHx1Ljh/YwFPsIQnL5y/sDr7lUG4AJzf
NP9P4Jc3gnA+w+UHDnuqhOF8tZK0ihAtUTj/ydfpYdx7xeB8r6dZtZMKJeB8
vycTtOXkpOD8V4eTGk6slYbz9QSvyTrHy8L5XPZfE+98loPz3d9GfVcKVYDz
bxxKYYzSUYTzt3YciVP4iuCnsZY+OHdOCc5PLqreyjNLGc7XT9c+55OoAuef
F9LhLrVUhfN3r2uarcOsBudXM2oFnLmL4HPdqfLI26IO5z9dpjhlfo0GnD9F
Q5JlZ6gmnD9hVtrxRAUtOD9qSuw5nucI/g+XpT/n79OG8x8/dao41K4D5y+y
NZQ+m6gL569tLRVM19WD89tDk72ZvyL4pncWrmw/qw/nz9CcvfastwGcX3+g
d4b3TgTfVzp06SkVQzjfMe94tGAngj9fJknlzFcEX+Xw8ml+0UYI/+ke0rq0
D8FP+8xy8aSWMSI9bvyk0NmP4E+4xNN75DiCv++z2s///xF8ALAcbzY=
            "]]}, "Charting`Private`Tag#2"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[2]], 
           Line[CompressedData["
1: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
WCZ/WFFFmWBd71Os+/hEof2sZPl6sxme0vgz4KUsChdYpfVGAqxwtrVxV66q
KEhMNuacmbHCxj63m/qOiEJL9tl3yTbWuKHEoFL4qCjQZr6J+qdkg2PocmJH
TERhi4W5I/XTKawmuhhBZS4KUfdX1o/q2OIFzaMB8laiEHae59mNO7bYyneO
dP2MKBwKq5z45HUai71XBy1XUQhSCeFWnTuDR5cSVT08RCHH78Hsed3/cAL9
V7ksL1EoECm34y/8D69p3Ti4fFEUFI9cp2I1scM9ZR+3yiJFQXw5ZWAq2x6H
tMutvI4WBfs9BoMM3+2x7GjU3E6cKHQN9H+oOuyA0xlkRm0TRaHE4amI3nMH
fNY//BFjrihUTBsaD884YhWl8UfSBaIg6D40JMjphOlX4PHx26LgOXy/hVPZ
Cdf67WuMrBAFNzxe0OjnhP/6pj5ZqxMFkwqJinffnPBLhbUnbI9F4YSOj1/A
jhMuWbJpkmsShfSiz00mPM7Y0Je/2Q2LgpT6obWHhs440+dOy9igKNzaGySq
VeqM3eXpWzdfiMKRGzqP6hqdseYvz1buYVHgrWRYJQ0642/eSm1mo6LQ/b4l
/+KSM34sl9Hm9YmspxArvKUk4Rs/N9pujIvCb67vHT7sJKzg3dbeM0Xul+9r
iK0iCVPLCeHJWVFIy9zdU4FI+N1iFN6ZJ89L+6m1vAkJV92bxnw/ReGe//iD
tdMkHOFl0KG2LApnSvUc18+R8Eni3Q7rNVFIfnqsUdmPhEUWmTr9N0ThS5IT
e204CT/zfNNZ808UMqTYnByTSDhfVqXrGYUYpNYkyaRnkrDvQnbXDLUY3N0z
e5emkISP1Wx3UdOIQWKyimNzGQlzezp0C9GLQdjgrYGaahKek+ns1mISA5Vl
qrAvD0i49YdozxlWMZA65U5h2UDCyXfjeoI5xICtIHKD5gkJky7M9aRziwF/
8bPdnWYSPixj3PvwgBiIoCsdam0kTPvjfu8LfjFo/Rg/+6idhMeq2Z7+EBSD
hQZP6WBMwg88Ap7SiooBgVnn6CUyRxHePxWXEAM/rtKlfvJ5m3n1Ph1pMZAu
L9w9Q84nXZ3f5ygrBvhFlaZyC4n8PbnbFyEvBq6HUyOsyXpeSpP6c5TEQFHd
IxeT9ZbM9fQ/PiwGIyvRwRdrSTioSvLZGzUx0KO03fa7S8KG7jeeLWmIQa10
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
            "]]}, "Charting`Private`Tag#3"]}}, {}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[2]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], 
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
    Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
    DisplayFunction -> Identity, Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
    True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Risposta forzata\"", "\"Risposta a regime\"", 
       "\"Risposta transitoria\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9328822739725*^9, 3.932882338124452*^9, {3.932882376590015*^9, 
   3.932882384406288*^9}, 3.93288248607509*^9, {3.932882550036473*^9, 
   3.932882555627594*^9}, {3.932968017138458*^9, 3.93296802395276*^9}, 
   3.9332261127571754`*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"4ba3d98f-c18c-434e-b9f5-506adae59e96"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "6. Risposta al segnale periodico elementare ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["u", "TI"], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[LongEqual]", 
         StyleBox["A", "TI"], "sin", 
         RowBox[{"(", 
           RowBox[{"\[Omega]", 
             StyleBox["t", "TI"], "+", "\[Psi]"}], ")"}], "1", 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> "u(t)=A\\sin (\\omega t+ \\psi)1(t)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "1a761b57-4b09-a64d-93e3-2645020bf5d0"]
}], "Section",
 CellChangeTimes->{{3.93314377302104*^9, 
  3.933143789950413*^9}},ExpressionUUID->"a76978c9-96ad-764d-ad17-\
8bb2b9e4c310"],

Cell[CellGroupData[{

Cell["6.1 Calcolo della risposta al segnale periodico elementare", \
"Subsection",
 CellChangeTimes->{{3.9332265508075047`*^9, 
  3.9332265625670013`*^9}},ExpressionUUID->"ae686858-8750-f746-90f1-\
8d80ba56646c"],

Cell[TextData[{
 "Come nel caso del gradino unitario, per determinare la risposta al segnale \
periodico elementare, si utilizzer\[AGrave] la risposta forzata, valutando \
per ingresso il segnale periodico. \nLa L-Trasformata del segnale periodico \
elementare seno \[EGrave] pari a: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["L", "TI"], 
         RowBox[{"[", 
           RowBox[{"sin", "(", 
             RowBox[{"\[Omega]", 
               StyleBox["t", "TI"]}], ")"}], "]"}], "\[LongEqual]", 
         FractionBox["\[Omega]", 
          RowBox[{
            SuperscriptBox[
             StyleBox["s", "TI"], "2"], "+", 
            SuperscriptBox["\[Omega]", "2"]}]]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "L[\\sin(\\omega t)]={\\omega\\over s^2+\\omega^2}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "79a6e0c5-a226-254b-9f63-9c53da436050"],
 ". Per semplificare i calcoli scelgo la seguente terna ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], "\[LongEqual]", "1", ",", "\[Omega]", 
         "\[LongEqual]", "1", ",", "\[Psi]", "\[LongEqual]", "0"}], 
       TraditionalForm], "errors" -> {}, "input" -> "A=1, \\omega=1, \\psi=0",
      "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "3ae9e3e5-11dc-8746-bed8-974d516b7c49"],
 " affinch\[EAcute] la L-Trasformata del segnale sar\[AGrave] ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["L", "TI"], 
         RowBox[{"[", 
           RowBox[{"sin", "(", 
             StyleBox["t", "TI"], ")"}], "]"}], "\[LongEqual]", 
         FractionBox["1", 
          RowBox[{
            SuperscriptBox[
             StyleBox["s", "TI"], "2"], "+", "1"}]]}], TraditionalForm], 
     "errors" -> {}, "input" -> "L[\\sin(t)]={1\\over s^2+1", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "97b80f63-8a10-b04e-a9f2-f30948fcac0e"],
 "."
}], "Text",
 CellChangeTimes->{{3.932882813729874*^9, 3.9328828143195*^9}, {
  3.932957583636131*^9, 3.932957584153745*^9}, {3.932957832213484*^9, 
  3.932957976141027*^9}, {3.932958165317348*^9, 3.932958253045277*^9}, {
  3.9329589636379128`*^9, 3.9329590070263386`*^9}, {3.933226209242907*^9, 
  3.933226218508251*^9}},ExpressionUUID->"e8fcae99-7996-8248-8c26-\
1cfd49537fa2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["U", "TI"], 
        RowBox[{
          StyleBox["s", "TI"], 
          StyleBox["s", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "U_{ss}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "[", "s_", "]"}], ":=", 
  RowBox[{"LaplaceTransform", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "t", "]"}], 
     RowBox[{"UnitStep", "[", "t", "]"}]}], ",", "t", ",", "s"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.932959036626789*^9, 3.932959049361124*^9}, {
  3.932959130886455*^9, 3.932959183614423*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"dccc6aff-1289-b545-a7bb-57219667321c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["U", "TI"], 
       RowBox[{
         StyleBox["s", "TI"], 
         StyleBox["s", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
    "U_{ss}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "[", "s", "]"}]], "Input",
 CellChangeTimes->{{3.932959194017271*^9, 3.9329591989475937`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"40ab7d8b-dd5e-b544-a350-ee1ade3c96e3"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"1", "+", 
   SuperscriptBox["s", "2"]}]]], "Output",
 CellChangeTimes->{3.932959200067316*^9, 3.932986469882585*^9, 
  3.933226228790024*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"a4d160a8-2572-f348-bea0-edd4e4051d6d"]
}, Open  ]],

Cell[TextData[{
 "Calcolo la risposta forzata nel dominio della variabile complessa ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["s", "TI"], TraditionalForm], "errors" -> {}, "input" -> "s", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "d0772078-c4a6-a147-b134-a644da34554d"]
}], "Text",
 CellChangeTimes->{{3.932959218186088*^9, 
  3.932959234734117*^9}},ExpressionUUID->"76bd922a-b8d8-294b-bc75-\
deb28346acb4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["Y", "TI"], 
        RowBox[{
          StyleBox["s", "TI"], 
          StyleBox["s", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "Y_{ss}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "[", "s_", "]"}], ":=", 
  RowBox[{
   RowBox[{"G", "[", "s", "]"}], 
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["U", "TI"], 
         RowBox[{
           StyleBox["s", "TI"], 
           StyleBox["s", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
      "U_{ss}", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], "[", "s", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9329592470242424`*^9, 3.932959272320167*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"1ff21960-f9ab-f540-b4e5-80e47518183f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["Y", "TI"], 
       RowBox[{
         StyleBox["s", "TI"], 
         StyleBox["s", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
    "Y_{ss}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "[", "s", "]"}]], "Input",
 CellChangeTimes->{{3.932959282723064*^9, 3.932959288540525*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"2061d957-44bf-3a44-bc81-3100311dd4ca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   FractionBox["432", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["s", "2"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"5365", "+", 
       RowBox[{"4422", " ", "s"}], "+", 
       RowBox[{"2473", " ", 
        SuperscriptBox["s", "2"]}], "+", 
       RowBox[{"960", " ", 
        SuperscriptBox["s", "3"]}], "+", 
       RowBox[{"144", " ", 
        SuperscriptBox["s", "4"]}]}], ")"}]}]], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.932959289173853*^9, 3.932962620233496*^9, {3.93298646236058*^9, 
   3.9329864747116947`*^9}, 3.9332262349450912`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"dbc52dce-e0f7-f943-997b-d421fd89e1d9"]
}, Open  ]],

Cell["\<\
Anche in questo caso si utilizza la scomposizione in fratti semplici e la \
formula elementare di Heaviside per ritornare nel dominio del tempo.\
\>", "Text",
 CellChangeTimes->{{3.9329598798156147`*^9, 3.932959906855648*^9}, {
  3.932959978401129*^9, 
  3.932959994762089*^9}},ExpressionUUID->"31695272-d308-264d-845f-\
0f18b6f40b6a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["D", "TI"], "1"], TraditionalForm], "errors" -> {}, "input" -> 
     "D_1", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], 
   RowBox[{"s", "+", "\[ImaginaryI]"}]], "+", 
  FractionBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["D", "TI"], "2"], TraditionalForm], "errors" -> {}, "input" -> 
     "D_2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], 
   RowBox[{"s", "-", "\[ImaginaryI]"}]], "+", 
  FractionBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["D", "TI"], "3"], TraditionalForm], "errors" -> {}, "input" -> 
     "D_3", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], 
   RowBox[{"s", "+", "3", "+", 
    FractionBox["\[ImaginaryI]", "4"]}]], "+", 
  FractionBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["D", "TI"], "4"], TraditionalForm], "errors" -> {}, "input" -> 
     "D_4", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], 
   RowBox[{"s", "+", "3", "-", 
    FractionBox["\[ImaginaryI]", "4"]}]], "+", 
  FractionBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["D", "TI"], "5"], TraditionalForm], "errors" -> {}, "input" -> 
     "D_5", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], 
   RowBox[{"s", "+", 
    FractionBox["1", "3"], "+", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}]], "+", 
  FractionBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["D", "TI"], "6"], TraditionalForm], "errors" -> {}, "input" -> 
     "D_6", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], 
   RowBox[{"s", "+", 
    FractionBox["1", "3"], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}]]}]], "Input",
 CellChangeTimes->{{3.932960269931644*^9, 3.932960321460428*^9}, 
   3.932960383972667*^9},
 CellLabel->
  "In[104]:=",ExpressionUUID->"bf4763d3-17b1-924b-a08c-73663cfbe726"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SubscriptBox["D", "1"], 
   RowBox[{"\[ImaginaryI]", "+", "s"}]], "+", 
  FractionBox[
   SubscriptBox["D", "2"], 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], "+", "s"}]], "+", 
  FractionBox[
   SubscriptBox["D", "3"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "+", 
      FractionBox["\[ImaginaryI]", "4"]}], ")"}], "+", "s"}]], "+", 
  FractionBox[
   SubscriptBox["D", "4"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "-", 
      FractionBox["\[ImaginaryI]", "4"]}], ")"}], "+", "s"}]], "+", 
  FractionBox[
   SubscriptBox["D", "5"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", "3"], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], "+", "s"}]], "+", 
  FractionBox[
   SubscriptBox["D", "6"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", "3"], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], "+", "s"}]]}]], "Output",
 CellChangeTimes->{{3.932960377215898*^9, 3.932960385711321*^9}, 
   3.932986477060901*^9, 3.9332262429306564`*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"c819000f-6836-4141-966d-f14d0c6c3128"]
}, Open  ]],

Cell["\<\
A differenza del gradino unitario, in questo caso i fratti semplici sono sei, \
i primi due quali sono legati dall\[CloseCurlyQuote]ingresso ed i restanti \
quattro sono legati dai modi naturali. I coefficienti sono calcolati nel \
medesimo modo visto in precedenza per il gradino unitario.\
\>", "Text",
 CellChangeTimes->{{3.932960389418564*^9, 3.9329605445118713`*^9}, {
  3.93296075105292*^9, 
  3.9329607787662506`*^9}},ExpressionUUID->"232cfa87-d4f9-ce4c-9395-\
10a12bf931c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["D", "TI"], "1"], TraditionalForm], "errors" -> {}, "input" -> 
    "D_1", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"s", "+", "\[ImaginaryI]"}], ")"}], 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["Y", "TI"], 
           RowBox[{
             StyleBox["s", "TI"], 
             StyleBox["s", "TI"]}]], TraditionalForm], "errors" -> {}, 
        "input" -> "Y_{ss}", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], "[", "s", "]"}]}], ",", " ", 
    RowBox[{"s", " ", "\[Rule]", 
     RowBox[{"-", "\[ImaginaryI]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.932960800724739*^9, 3.932960829862169*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"d8abd81f-4647-224d-b962-9ac8d2dbd0dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["20772", "588965"]}], "+", 
    FractionBox[
     RowBox[{"18216", " ", "\[ImaginaryI]"}], "588965"]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9329608378779144`*^9, 3.932960851881586*^9}, 
   3.932986480165418*^9, 3.9332262453409367`*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"fa9dcfbd-5aaa-654b-8f89-91632a97c7c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["D", "TI"], "2"], TraditionalForm], "errors" -> {}, "input" -> 
    "D_2", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"s", "-", "\[ImaginaryI]"}], ")"}], 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["Y", "TI"], 
           RowBox[{
             StyleBox["s", "TI"], 
             StyleBox["s", "TI"]}]], TraditionalForm], "errors" -> {}, 
        "input" -> "Y_{ss}", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], "[", "s", "]"}]}], ",", " ", 
    RowBox[{"s", " ", "\[Rule]", "\[ImaginaryI]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.932960971114458*^9, 3.932960981730919*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"c056d6a8-b3b3-1240-b9fc-c4b4f1dc5be4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["20772", "588965"]}], "-", 
    FractionBox[
     RowBox[{"18216", " ", "\[ImaginaryI]"}], "588965"]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.932960992006166*^9, 3.9329864818251886`*^9, 
  3.9332262480226574`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"74b46ab1-60ce-7c4d-b946-45fa27c00a6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["D", "TI"], "3"], TraditionalForm], "errors" -> {}, "input" -> 
    "D_3", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"s", "+", "3", "+", 
       FractionBox["\[ImaginaryI]", "4"]}], ")"}], 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["Y", "TI"], 
           RowBox[{
             StyleBox["s", "TI"], 
             StyleBox["s", "TI"]}]], TraditionalForm], "errors" -> {}, 
        "input" -> "Y_{ss}", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], "[", "s", "]"}]}], ",", " ", 
    RowBox[{"s", " ", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "3"}], "-", 
      FractionBox["\[ImaginaryI]", "4"]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.9329610008004093`*^9, {3.932961033642729*^9, 3.932961069180158*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"7c47d80a-2bb1-4d49-94ed-6d6adae56392"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["105541632", "7378280585"], "+", 
    FractionBox[
     RowBox[{"381482496", " ", "\[ImaginaryI]"}], "7378280585"]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9329610770716457`*^9, 3.9329864838223305`*^9, 
  3.9332262502660866`*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"bcbb3577-e061-404c-9e08-4fc57d9cc954"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["D", "TI"], "4"], TraditionalForm], "errors" -> {}, "input" -> 
    "D_4", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"s", "+", "3", "-", 
       FractionBox["\[ImaginaryI]", "4"]}], ")"}], 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["Y", "TI"], 
           RowBox[{
             StyleBox["s", "TI"], 
             StyleBox["s", "TI"]}]], TraditionalForm], "errors" -> {}, 
        "input" -> "Y_{ss}", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], "[", "s", "]"}]}], ",", " ", 
    RowBox[{"s", " ", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "3"}], "+", 
      FractionBox["\[ImaginaryI]", "4"]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.932961095441801*^9},
 CellLabel->
  "In[108]:=",ExpressionUUID->"74403403-20d1-5e43-951f-10909811feec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["105541632", "7378280585"], "-", 
    FractionBox[
     RowBox[{"381482496", " ", "\[ImaginaryI]"}], "7378280585"]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.932961109166132*^9, 3.932986486990928*^9, 
  3.933226251793659*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"97454418-763d-ce4f-9065-4f78295a25d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["D", "TI"], "5"], TraditionalForm], "errors" -> {}, "input" -> 
    "D_5", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"s", "+", 
       FractionBox["1", "3"], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["Y", "TI"], 
           RowBox[{
             StyleBox["s", "TI"], 
             StyleBox["s", "TI"]}]], TraditionalForm], "errors" -> {}, 
        "input" -> "Y_{ss}", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], "[", "s", "]"}]}], ",", " ", 
    RowBox[{"s", " ", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "3"]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.932961124034975*^9},
 CellLabel->
  "In[109]:=",ExpressionUUID->"73b56285-c000-8d4b-b0c0-2dd1f73b26fa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["2207412", "105293945"], "+", 
    FractionBox[
     RowBox[{"63666", " ", "\[ImaginaryI]"}], "21058789"]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.932961135308071*^9, 3.932986488588272*^9, 
  3.9332262538830204`*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"9e0b766d-ee24-d045-97a0-9d212e9d39cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["D", "TI"], "6"], TraditionalForm], "errors" -> {}, "input" -> 
    "D_6", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"s", "+", 
       FractionBox["1", "3"], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["Y", "TI"], 
           RowBox[{
             StyleBox["s", "TI"], 
             StyleBox["s", "TI"]}]], TraditionalForm], "errors" -> {}, 
        "input" -> "Y_{ss}", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], "[", "s", "]"}]}], ",", " ", 
    RowBox[{"s", " ", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "3"]}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.932961141208376*^9, 3.9329611497153473`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"2dccae87-9c96-b248-9930-44c8c6141c18"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["2207412", "105293945"], "-", 
    FractionBox[
     RowBox[{"63666", " ", "\[ImaginaryI]"}], "21058789"]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.932961154556867*^9, 3.932986490422417*^9, 
  3.9332262556043224`*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"25311425-2169-1642-af37-6569704e72ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["D", "TI"], "1"], TraditionalForm], "errors" -> {}, "input" -> 
     "D_1", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], 
   RowBox[{"(", 
    FractionBox["1", 
     RowBox[{"s", "+", "\[ImaginaryI]"}]], ")"}]}], "+", 
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["D", "TI"], "2"], TraditionalForm], "errors" -> {}, "input" -> 
     "D_2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], 
   RowBox[{"(", 
    FractionBox["1", 
     RowBox[{"s", "-", "\[ImaginaryI]"}]], ")"}]}], "+", 
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["D", "TI"], "3"], TraditionalForm], "errors" -> {}, "input" -> 
     "D_3", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], 
   RowBox[{"(", 
    FractionBox["1", 
     RowBox[{"s", "+", "3", "+", 
      FractionBox["\[ImaginaryI]", "4"]}]], ")"}]}], "+", 
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["D", "TI"], "4"], TraditionalForm], "errors" -> {}, "input" -> 
     "D_4", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], 
   RowBox[{"(", 
    FractionBox["1", 
     RowBox[{"s", "+", "3", "-", 
      FractionBox["\[ImaginaryI]", "4"]}]], ")"}]}], "+", 
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["D", "TI"], "5"], TraditionalForm], "errors" -> {}, "input" -> 
     "D_5", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], 
   RowBox[{"(", 
    FractionBox["1", 
     RowBox[{"s", "+", 
      FractionBox["1", "3"], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}]], ")"}]}], "+", 
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["D", "TI"], "6"], TraditionalForm], "errors" -> {}, "input" -> 
     "D_6", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], 
   RowBox[{"(", 
    FractionBox["1", 
     RowBox[{"s", "+", 
      FractionBox["1", "3"], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}]], ")"}]}]}]], "Input",
 CellChangeTimes->{
  3.932961194900043*^9, {3.9329612258916435`*^9, 3.9329612627499695`*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"81876fbf-7fab-3d46-833c-8912d84b6702"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       FractionBox["20772", "588965"], "+", 
       FractionBox[
        RowBox[{"18216", " ", "\[ImaginaryI]"}], "588965"]}], 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], "+", "s"}]]}], "-", 
    FractionBox[
     RowBox[{
      FractionBox["20772", "588965"], "-", 
      FractionBox[
       RowBox[{"18216", " ", "\[ImaginaryI]"}], "588965"]}], 
     RowBox[{"\[ImaginaryI]", "+", "s"}]], "+", 
    FractionBox[
     RowBox[{
      FractionBox["2207412", "105293945"], "-", 
      FractionBox[
       RowBox[{"63666", " ", "\[ImaginaryI]"}], "21058789"]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "3"], "-", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], "+", "s"}]], "+", 
    FractionBox[
     RowBox[{
      FractionBox["2207412", "105293945"], "+", 
      FractionBox[
       RowBox[{"63666", " ", "\[ImaginaryI]"}], "21058789"]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "3"], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], "+", "s"}]], "+", 
    FractionBox[
     RowBox[{
      FractionBox["105541632", "7378280585"], "-", 
      FractionBox[
       RowBox[{"381482496", " ", "\[ImaginaryI]"}], "7378280585"]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"3", "-", 
        FractionBox["\[ImaginaryI]", "4"]}], ")"}], "+", "s"}]], "+", 
    FractionBox[
     RowBox[{
      FractionBox["105541632", "7378280585"], "+", 
      FractionBox[
       RowBox[{"381482496", " ", "\[ImaginaryI]"}], "7378280585"]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"3", "+", 
        FractionBox["\[ImaginaryI]", "4"]}], ")"}], "+", "s"}]]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.932961268921004*^9, 3.933226257292883*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"47be762b-5e3a-e14f-8215-a04213113be5"]
}, Open  ]],

Cell[TextData[{
 "Utilizzo la L-Trasformata dell\[CloseCurlyQuote]esponenziale \[EGrave]: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["L", "TI"], 
         RowBox[{"[", 
           SuperscriptBox[
            StyleBox["e", "TI"], 
            RowBox[{
              StyleBox["a", "TI"], 
              StyleBox["t", "TI"]}]], "]"}], "\[LongEqual]", 
         FractionBox["1", 
          RowBox[{
            StyleBox["s", "TI"], "-", 
            StyleBox["a", "TI"]}]]}], TraditionalForm], "errors" -> {}, 
     "input" -> "L[e^{at}]={1\\over s-a}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "eedbcb2d-3cd9-4f4a-8198-2a7a6abab1a0"],
 " per passare al dominio del tempo.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        RowBox[{
          FractionBox["1", 
           RowBox[{
             StyleBox["s", "TI"], "+", 
             StyleBox["i", "TI"]}]], "\[Rule]", 
          SuperscriptBox[
           StyleBox["e", "TI"], 
           RowBox[{"-", 
             StyleBox["i", "TI"], 
             StyleBox["t", "TI"]}]], "1", 
          RowBox[{"(", 
            StyleBox["t", "TI"], ")"}], ", ", 
          FractionBox["1", 
           RowBox[{
             StyleBox["s", "TI"], "-", 
             StyleBox["i", "TI"]}]], "\[Rule]", 
          SuperscriptBox[
           StyleBox["e", "TI"], 
           RowBox[{
             StyleBox["i", "TI"], 
             StyleBox["t", "TI"]}]], "1", 
          RowBox[{"(", 
            StyleBox["t", "TI"], ")"}]}], TraditionalForm], "errors" -> {}, 
      "input" -> 
      "{1\\over s+i}\\rightarrow e^{-it}1(t),\\ {1\\over s-i}\\rightarrow \
e^{it}1(t)", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], ","}], TraditionalForm]],ExpressionUUID->
  "142a63de-7f18-164e-8e69-e47ef262dfe8"],
 "  ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox["1", 
          RowBox[{
            StyleBox["s", "TI"], "+", "3", "+", 
            FractionBox[
             StyleBox["i", "TI"], "4"]}]], "\[Rule]", 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            RowBox[{"(", 
              RowBox[{"-3", "-", 
                FractionBox[
                 StyleBox["i", "TI"], "4"]}], ")"}], 
            StyleBox["t", "TI"]}]], "1", 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "{1\\over s+3+{i\\over 4}}\\rightarrow e^{(-3-{i\\over 4})t}1(t)", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "9ce58a39-cf6b-844d-83a7-0282d4c4d0a6"],
 ",  ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox["1", 
          RowBox[{
            StyleBox["s", "TI"], "+", "3", "-", 
            FractionBox[
             StyleBox["i", "TI"], "4"]}]], "\[Rule]", 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            RowBox[{"(", 
              RowBox[{"-3", "+", 
                FractionBox[
                 StyleBox["i", "TI"], "4"]}], ")"}], 
            StyleBox["t", "TI"]}]], "1", 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "{1\\over s+3-{i\\over 4}}\\rightarrow e^{(-3+{i\\over 4})t}1(t)", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "19e9ffef-d8ec-4e46-a031-b8f77ced99b3"],
 ",  ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox["1", 
          RowBox[{
            StyleBox["s", "TI"], "+", 
            FractionBox["1", "3"], "+", "2", 
            StyleBox["i", "TI"]}]], "\[Rule]", 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            RowBox[{"(", 
              RowBox[{"-", 
                FractionBox["1", "3"], "-", "2", 
                StyleBox["i", "TI"]}], ")"}], 
            StyleBox["t", "TI"]}]], "1", 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "{1\\over s+{1\\over 3}+2i}\\rightarrow e^{(-{1\\over 3}-2i)t}1(t)", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "a808e3e9-3188-ff4e-98f7-c27191aafdb4"],
 ", ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox["1", 
          RowBox[{
            StyleBox["s", "TI"], "+", 
            FractionBox["1", "3"], "-", "2", 
            StyleBox["i", "TI"]}]], "\[Rule]", 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            RowBox[{"(", 
              RowBox[{"-", 
                FractionBox["1", "3"], "+", "2", 
                StyleBox["i", "TI"]}], ")"}], 
            StyleBox["t", "TI"]}]], "1", 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "{1\\over s+{1\\over 3}-2i}\\rightarrow e^{(-{1\\over 3}+2i)t}1(t)", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "cb448ac4-487e-9847-943b-536bd376f3dc"],
 "\nTermini reali per costruire la risposta"
}], "Text",
 CellChangeTimes->{
  3.932961306804451*^9, {3.932961368811725*^9, 3.932961388060245*^9}, {
   3.932961454445699*^9, 3.932961457191828*^9}, {3.932961636721351*^9, 
   3.9329616744005527`*^9}, {3.9329617125608883`*^9, 3.932961725791811*^9}, {
   3.93296177311755*^9, 3.932961792525154*^9}, {3.932961825650934*^9, 
   3.932961842261698*^9}, {3.932961879235204*^9, 3.932961891419601*^9}, {
   3.934352473362236*^9, 
   3.9343524769214287`*^9}},ExpressionUUID->"e5aafda0-97c7-1943-8094-\
390c2acc8d00"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["D", "TI"], "12"], TraditionalForm], "errors" -> {}, "input" -> 
    "D_{12}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"ComplexExpand", "[", 
    RowBox[{
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["D", "TI"], "1"], TraditionalForm], "errors" -> {}, 
        "input" -> "D_1", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "t"}]]}], "+", 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["D", "TI"], "2"], TraditionalForm], "errors" -> {}, 
        "input" -> "D_2", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "t"}]]}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.932961898044063*^9, 3.932961906479372*^9}, {
  3.932961938271538*^9, 3.93296197343211*^9}, {3.93296200422069*^9, 
  3.932962105394024*^9}, {3.932962359100895*^9, 3.932962363900987*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"cabd0a69-9b97-fe4b-930f-3756d4187b98"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"72", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"577", " ", 
         RowBox[{"Cos", "[", "t", "]"}]}], "-", 
        RowBox[{"506", " ", 
         RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}]}], "588965"]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9329619778960953`*^9, 3.932962048750677*^9, 
  3.932962107063247*^9, 3.932962368168714*^9, 3.9332263308826275`*^9, 
  3.933226621006937*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"22d251c3-9735-2e4f-81e8-fb67d24e259d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["D", "TI"], "34"], TraditionalForm], "errors" -> {}, "input" -> 
    "D_{34}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"ComplexExpand", "[", 
    RowBox[{
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["D", "TI"], "3"], TraditionalForm], "errors" -> {}, 
        "input" -> "D_3", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "-", 
          FractionBox["\[ImaginaryI]", "4"]}], ")"}], "t"}]]}], "+", 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["D", "TI"], "4"], TraditionalForm], "errors" -> {}, 
        "input" -> "D_4", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          FractionBox["\[ImaginaryI]", "4"]}], ")"}], "t"}]]}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.9329620514856043`*^9, 3.932962370749557*^9},
 CellLabel->
  "In[135]:=",ExpressionUUID->"a3d83d37-ccff-3340-a9a1-5bc416e4167a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   FractionBox[
    RowBox[{"9216", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "3"}], " ", "t"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"22904", " ", 
        RowBox[{"Cos", "[", 
         FractionBox["t", "4"], "]"}]}], "+", 
       RowBox[{"82787", " ", 
        RowBox[{"Sin", "[", 
         FractionBox["t", "4"], "]"}]}]}], ")"}]}], "7378280585"], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.932962110195707*^9, 3.932962377719726*^9, 
  3.9332263328079185`*^9, 3.9332266224696636`*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"faf6f951-e44a-d24f-885d-eb7379a3c465"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["D", "TI"], "56"], TraditionalForm], "errors" -> {}, "input" -> 
    "D_{56}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"ComplexExpand", "[", 
    RowBox[{
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["D", "TI"], "5"], TraditionalForm], "errors" -> {}, 
        "input" -> "D_5", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "3"]}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], "t"}]]}], "+", 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["D", "TI"], "6"], TraditionalForm], "errors" -> {}, 
        "input" -> "D_6", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "3"]}], "+", 
          RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], "t"}]]}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.932962133493143*^9, 3.932962380220758*^9},
 CellLabel->
  "In[136]:=",ExpressionUUID->"8c133fca-0a6d-7041-adfe-a24450f2d525"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   FractionBox[
    RowBox[{"972", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "t"}], "/", "3"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4542", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "t"}], "]"}]}], "+", 
       RowBox[{"655", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}]}], "105293945"], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.932962147990614*^9, 3.932962385752531*^9, 
  3.933226334540951*^9, 3.933226624138975*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"f0d815cd-26c9-9b42-81d0-1a5d9485831a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["Y", "TI"], 
        RowBox[{
          StyleBox["s", "TI"], 
          StyleBox["s", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "Y_{ss}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["D", "TI"], "12"], TraditionalForm], "errors" -> {}, 
      "input" -> "D_{12}", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], 
    RowBox[{"UnitStep", "[", "t", "]"}]}], "+", 
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["D", "TI"], "34"], TraditionalForm], "errors" -> {}, 
      "input" -> "D_{34}", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], 
    RowBox[{"UnitStep", "[", "t", "]"}]}], "+", 
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["D", "TI"], "56"], TraditionalForm], "errors" -> {}, 
      "input" -> "D_{56}", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], 
    RowBox[{"UnitStep", "[", "t", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.932961394902281*^9, 3.932961404571527*^9}, {
   3.932961730586518*^9, 3.932961733230631*^9}, 3.9329623931513*^9, {
   3.9329671723893585`*^9, 3.932967196364216*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"611f1d0b-6471-a444-9be8-9257512aadf9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["Y", "TI"], 
       RowBox[{
         StyleBox["s", "TI"], 
         StyleBox["s", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
    "Y_{ss}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.932962421041916*^9, 3.932962425664114*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"8fc6d874-58be-1c45-a6ad-ea54aeaf457d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{"9216", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", "t"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"22904", " ", 
         RowBox[{"Cos", "[", 
          FractionBox["t", "4"], "]"}]}], "+", 
        RowBox[{"82787", " ", 
         RowBox[{"Sin", "[", 
          FractionBox["t", "4"], "]"}]}]}], ")"}], " ", 
      RowBox[{"UnitStep", "[", "t", "]"}]}], "7378280585"], "-", 
    FractionBox[
     RowBox[{"72", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"577", " ", 
         RowBox[{"Cos", "[", "t", "]"}]}], "-", 
        RowBox[{"506", " ", 
         RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}], " ", 
      RowBox[{"UnitStep", "[", "t", "]"}]}], "588965"], "+", 
    FractionBox[
     RowBox[{"972", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "t"}], "/", "3"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4542", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "+", 
        RowBox[{"655", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"UnitStep", "[", "t", "]"}]}], "105293945"]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9329624273755827`*^9, 3.932963415469816*^9, 
  3.9329671986824894`*^9, 3.9332263389172153`*^9, 3.9332266309519176`*^9},
 CellLabel->
  "Out[138]=",ExpressionUUID->"23f6b1ac-3a0c-fa48-b941-7393ea6ceaff"]
}, Open  ]],

Cell["Grafico della risposta al segnale periodico elementare", "Text",
 CellChangeTimes->{{3.9329633610198116`*^9, 
  3.932963377415661*^9}},ExpressionUUID->"fba28fd7-69ee-cc4c-a7a5-\
16bf47db4707"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["Y", "TI"], 
         RowBox[{
           StyleBox["s", "TI"], 
           StyleBox["s", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
      "Y_{ss}", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.9329633969360447`*^9, {3.932963465365776*^9, 3.932963496889337*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"2ce5fe18-bb3f-9c43-8f76-d0f00e9fbf95"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJwdl3k4Ve/Xxs2ZyjxUwjEd83CUVHiWb8mYSpQmoUmJUpSkkpCUIZmSTBGZ
p3P2IXnMmUmZSpKEZMiQSPLu3+sf1+fa+1nPWve617n2ojhftDnNxsLCMsTO
wvK//89uOXPpnHpqxPL/f47lte9krQ7JXkf/o8oj1oar9RV3ZWXv/z+PKyQa
rotkFPD2Rv6PYfh8i+GzylAZTtkn/+OI968mDdWnT4Wtnk36H/t13+My+rQu
8d/fntT/8cO9PRuNFF7w6P1ZTv8fV2wc0jC6YOjl9lvmJcl+J75NGRgVvx9M
m9+ZQ3LlxdPD5kZ/XK36Z87m/49N/ertjJJZ++//NikkWTDZ5byT0a7WR4oL
PUUkFyQUlJ43GoszrZo/V0JyR3dZ6xWjh6dWjs0t00keEyu96WukrV28OBNK
kKwQpfXnrtG7ZZeonzKlJP8Nmjz9wOjqG2nt6cIykg1ivS9EGm14/L55cmc5
yUFVckfijCocQs5OdL0m2WqwrjDJyFkV2H+cxSRv7D54KM2Ibdmnfd63kuSV
pZGGl0bvB+02zZtUIRY/c7UbygVGL+q1XefWVZPPfS1neUuMvHP4Smd7/se5
yhHJTCOLyBGu2eQaku3mn66+NpLyrrKdOVdLno83/SNTbTR1PCH1J62OZNue
B6/rjCp3Xvs5vUwy2OuIjjQaRarYGE3X1pPPr/n9yWgzOiWg8XAq9A1iSd4i
jXg6jfR+rfkwebCBjL+trn9Dl9Gaj0PUSZlG8n2T7P2Peo16K197TYyRnPz4
cbBXv1HWi7iaH4VNiOXSATV3l0Ej34dXhH74NCOWgqpdD7uHjKwvW58Y39mC
WASvsRmGfDOStVfJ/c7filh+tr/oCR4zmjXkWB7rIjlC6eJEzw+jWvnPZmOJ
bYhlUD1r181poxiespjRs+2IJZPD0QPPGJVcs7h8RbIDsfTuFb8zM2eUML51
/ZwvyY56DD77BaPA44qVl7+QPKY+dXZh0ci9Q/jsrMlbxKJ8tZ67Y9no0E6W
dZezSL4UF3Bz7J8RMCZLZtZ1ks8v1TIprEg4oYFtpofkxYlt3GMcaHkd4+Ul
g3eIxexmaBvHGjR85/m+n8kkP8xfx7DgQa3zEb8vcr5HLPMyVn2v+BDj7K3E
6XMkt3wAxyPrUNIHV5OLbSRfOiEJUYIoeM/hiSlaF2JJM68yFBVGR3Q3b59a
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
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJwdl3k4Ve/Xxs2ZyjxUwjEd83CUVHiWb8mYSpQmoUmJUpSkkpCUIZmSTBGZ
p3P2IXnMmUmZSpKEZMiQSPLu3+sf1+fa+1nPWve617n2ojhftDnNxsLCMsTO
wvK//89uOXPpnHpqxPL/f47lte9krQ7JXkf/o8oj1oar9RV3ZWXv/z+PKyQa
rotkFPD2Rv6PYfh8i+GzylAZTtkn/+OI968mDdWnT4Wtnk36H/t13+My+rQu
8d/fntT/8cO9PRuNFF7w6P1ZTv8fV2wc0jC6YOjl9lvmJcl+J75NGRgVvx9M
m9+ZQ3LlxdPD5kZ/XK36Z87m/49N/ertjJJZ++//NikkWTDZ5byT0a7WR4oL
PUUkFyQUlJ43GoszrZo/V0JyR3dZ6xWjh6dWjs0t00keEyu96WukrV28OBNK
kKwQpfXnrtG7ZZeonzKlJP8Nmjz9wOjqG2nt6cIykg1ivS9EGm14/L55cmc5
yUFVckfijCocQs5OdL0m2WqwrjDJyFkV2H+cxSRv7D54KM2Ibdmnfd63kuSV
pZGGl0bvB+02zZtUIRY/c7UbygVGL+q1XefWVZPPfS1neUuMvHP4Smd7/se5
yhHJTCOLyBGu2eQaku3mn66+NpLyrrKdOVdLno83/SNTbTR1PCH1J62OZNue
B6/rjCp3Xvs5vUwy2OuIjjQaRarYGE3X1pPPr/n9yWgzOiWg8XAq9A1iSd4i
jXg6jfR+rfkwebCBjL+trn9Dl9Gaj0PUSZlG8n2T7P2Peo16K197TYyRnPz4
cbBXv1HWi7iaH4VNiOXSATV3l0Ej34dXhH74NCOWgqpdD7uHjKwvW58Y39mC
WASvsRmGfDOStVfJ/c7filh+tr/oCR4zmjXkWB7rIjlC6eJEzw+jWvnPZmOJ
bYhlUD1r181poxiespjRs+2IJZPD0QPPGJVcs7h8RbIDsfTuFb8zM2eUML51
/ZwvyY56DD77BaPA44qVl7+QPKY+dXZh0ci9Q/jsrMlbxKJ8tZ67Y9no0E6W
dZezSL4UF3Bz7J8RMCZLZtZ1ks8v1TIprEg4oYFtpofkxYlt3GMcaHkd4+Ul
g3eIxexmaBvHGjR85/m+n8kkP8xfx7DgQa3zEb8vcr5HLPMyVn2v+BDj7K3E
6XMkt3wAxyPrUNIHV5OLbSRfOiEJUYIoeM/hiSlaF2JJM68yFBVGR3Q3b59a
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
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJwdl3k4Ve/Xxs2ZyjxUwjEd83CUVHiWb8mYSpQmoUmJUpSkkpCUIZmSTBGZ
p3P2IXnMmUmZSpKEZMiQSPLu3+sf1+fa+1nPWve617n2ojhftDnNxsLCMsTO
wvK//89uOXPpnHpqxPL/f47lte9krQ7JXkf/o8oj1oar9RV3ZWXv/z+PKyQa
rotkFPD2Rv6PYfh8i+GzylAZTtkn/+OI968mDdWnT4Wtnk36H/t13+My+rQu
8d/fntT/8cO9PRuNFF7w6P1ZTv8fV2wc0jC6YOjl9lvmJcl+J75NGRgVvx9M
m9+ZQ3LlxdPD5kZ/XK36Z87m/49N/ertjJJZ++//NikkWTDZ5byT0a7WR4oL
PUUkFyQUlJ43GoszrZo/V0JyR3dZ6xWjh6dWjs0t00keEyu96WukrV28OBNK
kKwQpfXnrtG7ZZeonzKlJP8Nmjz9wOjqG2nt6cIykg1ivS9EGm14/L55cmc5
yUFVckfijCocQs5OdL0m2WqwrjDJyFkV2H+cxSRv7D54KM2Ibdmnfd63kuSV
pZGGl0bvB+02zZtUIRY/c7UbygVGL+q1XefWVZPPfS1neUuMvHP4Smd7/se5
yhHJTCOLyBGu2eQaku3mn66+NpLyrrKdOVdLno83/SNTbTR1PCH1J62OZNue
B6/rjCp3Xvs5vUwy2OuIjjQaRarYGE3X1pPPr/n9yWgzOiWg8XAq9A1iSd4i
jXg6jfR+rfkwebCBjL+trn9Dl9Gaj0PUSZlG8n2T7P2Peo16K197TYyRnPz4
cbBXv1HWi7iaH4VNiOXSATV3l0Ej34dXhH74NCOWgqpdD7uHjKwvW58Y39mC
WASvsRmGfDOStVfJ/c7filh+tr/oCR4zmjXkWB7rIjlC6eJEzw+jWvnPZmOJ
bYhlUD1r181poxiespjRs+2IJZPD0QPPGJVcs7h8RbIDsfTuFb8zM2eUML51
/ZwvyY56DD77BaPA44qVl7+QPKY+dXZh0ci9Q/jsrMlbxKJ8tZ67Y9no0E6W
dZezSL4UF3Bz7J8RMCZLZtZ1ks8v1TIprEg4oYFtpofkxYlt3GMcaHkd4+Ul
g3eIxexmaBvHGjR85/m+n8kkP8xfx7DgQa3zEb8vcr5HLPMyVn2v+BDj7K3E
6XMkt3wAxyPrUNIHV5OLbSRfOiEJUYIoeM/hiSlaF2JJM68yFBVGR3Q3b59a
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
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9329634052164173`*^9, 3.932963436176431*^9, {3.932963468489162*^9, 
   3.932963498263263*^9}, 3.932967214005705*^9, 3.933226528779583*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"df1f93c0-3d74-784d-9355-439efc874adc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["6.2 Scomposizione della risposta", "Subsection",
 CellChangeTimes->{{3.9332265714730244`*^9, 
  3.933226579427145*^9}},ExpressionUUID->"131abab5-3af3-1c43-80ed-\
271b0937d257"],

Cell[TextData[{
 "La risposta a regime \[EGrave] pari a: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"2", "Re", 
         RowBox[{"[", 
           RowBox[{
             StyleBox["D", "TI"], 
             SuperscriptBox[
              StyleBox["e", "TI"], 
              RowBox[{
                StyleBox["i", "TI"], 
                StyleBox["t", "TI"]}]]}], "]"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> "2\\text{Re}[De^{it}]", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "fd7d1221-4064-a04c-93f5-ecbfc15081e8"],
 " con ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["D", "TI"], TraditionalForm], "errors" -> {}, "input" -> "D", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "6136bc8a-c8c1-5c44-be42-50760108c5f7"],
 " coefficiente legato all\[CloseCurlyQuote]ingresso. Uso la forma \
Amplitude-Fase per determinare la coppia ampiezza-fase della risposta a \
regime ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["Y", "TI"], 
          RowBox[{
            StyleBox["s", "TI"], 
            StyleBox["s", "TI"]}]], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[LongEqual]", 
         StyleBox["X", "TI"], "sin", 
         RowBox[{"(", 
           RowBox[{
             StyleBox["t", "TI"], "+", "\[Phi]"}], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> "Y_{ss}(t)=X\\sin(t+\\phi)", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "7068c1d3-c8f4-3c43-ae9f-4c8a4df2bcec"],
 " "
}], "Text",
 CellChangeTimes->{{3.9329635172205143`*^9, 3.9329635420722084`*^9}, {
   3.93296358345998*^9, 3.93296364427701*^9}, {3.932963720030693*^9, 
   3.932963723228157*^9}, {3.932964368328989*^9, 3.9329643855899143`*^9}, {
   3.932964429753887*^9, 3.932964481425215*^9}, {3.932964814313253*^9, 
   3.9329648437524796`*^9}, {3.932964876076958*^9, 3.932964974993068*^9}, {
   3.932966589512766*^9, 3.932966631408502*^9}, 3.932966806313225*^9, {
   3.934352489536974*^9, 
   3.934352490152479*^9}},ExpressionUUID->"bd6c8fb7-2bed-c54f-b8a5-\
f7c2ef496d6f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RispRegimePerio", "=", 
  RowBox[{"ComplexExpand", "[", 
   RowBox[{"2", 
    RowBox[{"Re", "[", 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["D", "TI"], "2"], TraditionalForm], "errors" -> {}, 
        "input" -> "D_2", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "t"}]]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.932965071962395*^9, 3.932965202107559*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"400bec38-ced3-ee4e-a178-b179642034b5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"41544", " ", 
       RowBox[{"Cos", "[", "t", "]"}]}], "588965"]}], "+", 
    FractionBox[
     RowBox[{"36432", " ", 
      RowBox[{"Sin", "[", "t", "]"}]}], "588965"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.932965182765903*^9, 3.932965202514141*^9}, 
   3.932967664826023*^9, 3.9332265921242714`*^9, 3.933226634911257*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"a19fa0bc-04e8-5e49-8303-58dd2d8979ff"]
}, Open  ]],

Cell[TextData[{
 "Devo determinare ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["X", "TI"], ">", "0", ",", "\[Phi]"}], TraditionalForm], 
     "errors" -> {}, "input" -> "X>0, \\phi", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "cb12c15d-d469-3a4b-a0b6-546c3085d73c"],
 "  tale che ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"41544", " ", 
       RowBox[{"Cos", "[", "t", "]"}]}], "588965"]}], "+", 
    FractionBox[
     RowBox[{"36432", " ", 
      RowBox[{"Sin", "[", "t", "]"}]}], "588965"]}], "=", 
   RowBox[{"X", " ", "Sin", 
    RowBox[{"(", 
     RowBox[{"t", "+", "\[Phi]"}], ")"}]}]}]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{{3.932965182765903*^9, 3.932965202514141*^9}},
  ExpressionUUID->"cebdfb09-b075-9e4e-8934-2bf4782247f6"]
}], "Text",
 CellChangeTimes->{{3.932966883496851*^9, 3.932966939048441*^9}, {
  3.932967834303482*^9, 
  3.9329678345639725`*^9}},ExpressionUUID->"772fbee1-e4fc-6f42-b1e4-\
65d0dfaa80c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AmpF", "=", 
  RowBox[{"RispRegimePerio", "==", " ", 
   RowBox[{"X", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"t", " ", "+", " ", "\[Phi]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.932965354348133*^9, 3.9329654025368395`*^9}, {
  3.9329669510634766`*^9, 3.932966951206623*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"3bb01e32-69a2-6a47-9449-b723adf745ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"41544", " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], "588965"]}], "+", 
     FractionBox[
      RowBox[{"36432", " ", 
       RowBox[{"Sin", "[", "t", "]"}]}], "588965"]}], "}"}], "}"}], 
  "\[Equal]", 
  RowBox[{"X", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"t", "+", "\[Phi]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.932965405679615*^9, 3.932966962390932*^9, 
  3.932967710325062*^9, 3.933226594470207*^9, 3.9332266366219635`*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"4e65ccfb-77c9-1247-9cb5-47ad84298424"]
}, Open  ]],

Cell[TextData[{
 " Ho un\[CloseCurlyQuote]equazione e due incognite, spezzo perci\[OGrave] l\
\[CloseCurlyQuote]equazione in due: nella prima valutoil tutto per ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["t", "TI"], "\[LongEqual]", "0"}], TraditionalForm], 
     "errors" -> {}, "input" -> "t=0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "70b2c855-3a95-864e-ab59-7ab12a454bfb"],
 " e nella seconda valuto le rispettive derivate per ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["t", "TI"], "\[LongEqual]", "0"}], TraditionalForm], 
     "errors" -> {}, "input" -> "t=0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "db5df3d0-55e0-3446-b7fc-0d0fd7c5d011"]
}], "Text",
 CellChangeTimes->{{3.932965227314932*^9, 3.932965305165615*^9}, {
   3.932966819741321*^9, 3.932966836887882*^9}, 3.93296687857884*^9, {
   3.932966972104528*^9, 
   3.932967012881283*^9}},ExpressionUUID->"a6fad637-6d19-0f45-b6d9-\
b0dd88e2ff33"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", "AmpF", ")"}], " ", "/.", " ", 
      RowBox[{"{", 
       RowBox[{"t", "\[Rule]", "0"}], "}"}]}], ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"41544", " ", 
              RowBox[{"Cos", "[", "t", "]"}]}], "588965"]}], "+", 
           FractionBox[
            RowBox[{"36432", " ", 
             RowBox[{"Sin", "[", "t", "]"}]}], "588965"]}], ",", "t"}], "]"}],
         "\[Equal]", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"X", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"t", "+", "\[Phi]"}], "]"}]}], ",", "t"}], "]"}]}], ")"}],
       " ", "/.", " ", 
      RowBox[{"{", 
       RowBox[{"t", "\[Rule]", "0"}], "}"}]}], ",", " ", 
     RowBox[{"X", " ", ">", "0"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"X", ",", "\[Phi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.932965317398927*^9, 3.9329653386825237`*^9}, {
  3.932965409874756*^9, 3.93296549428494*^9}, {3.932965572779833*^9, 
  3.932965594860477*^9}, {3.9329656322288275`*^9, 3.932965714849958*^9}, {
  3.932966958838045*^9, 3.9329669599129906`*^9}, {3.93296771369108*^9, 
  3.932967714744924*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"e4771e79-4c20-fd4c-9960-d1ff61f05616"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"X", "\[Rule]", 
     TemplateBox[{
       FractionBox["72", 
        RowBox[{"13", " ", 
          SqrtBox["3485"]}]], 
       RowBox[{
         TemplateBox[{"1"}, "C"], "\[Element]", 
         TemplateBox[{}, "Integers"]}]},
      "ConditionalExpression"]}], ",", 
    RowBox[{"\[Phi]", "\[Rule]", 
     TemplateBox[{
       RowBox[{
         RowBox[{"2", " ", 
           RowBox[{"ArcTan", "[", 
             FractionBox[
              RowBox[{
                RowBox[{"-", "45305"}], "+", 
                RowBox[{"506", " ", 
                  SqrtBox["3485"]}]}], 
              RowBox[{"577", " ", 
                SqrtBox["3485"]}]], "]"}]}], "+", 
         RowBox[{"2", " ", "\[Pi]", " ", 
           TemplateBox[{"1"}, "C"]}]}], 
       RowBox[{
         TemplateBox[{"1"}, "C"], "\[Element]", 
         TemplateBox[{}, "Integers"]}]},
      "ConditionalExpression"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.932965723222679*^9, 3.932966965004324*^9, 
  3.932967719117697*^9, 3.9332265990661926`*^9, 3.9332266386538963`*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"46bba9db-8459-d94d-9631-1a37d20d5312"]
}, Open  ]],

Cell["Trasformo la coppia ampiezza fase in decimale", "Text",
 CellChangeTimes->{{3.932965815686649*^9, 3.93296582290122*^9}, {
   3.932966028740267*^9, 3.932966099285753*^9}, {3.9329663082976*^9, 
   3.93296632980657*^9}, 
   3.9332266406039715`*^9},ExpressionUUID->"b6f81b30-e711-4a4f-87a5-\
5eaf35f81dfd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox["72", 
   RowBox[{"13", " ", 
    SqrtBox["3485"]}]], "]"}]], "Input",
 CellChangeTimes->{{3.9329663426474686`*^9, 3.932966347984102*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"a581dffc-bf6f-a04a-8814-dba0ad524968"],

Cell[BoxData["0.09381834184363508`"], "Output",
 CellChangeTimes->{3.932966352695724*^9, 3.9332266050711136`*^9, 
  3.9332266431185074`*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"b031c635-c174-b14f-b6a3-397c978ea40d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"2", " ", 
    RowBox[{"ArcTan", "[", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "45305"}], "+", 
       RowBox[{"506", " ", 
        SqrtBox["3485"]}]}], 
      RowBox[{"577", " ", 
       SqrtBox["3485"]}]], "]"}]}], "]"}], 
  RowBox[{"(", 
   FractionBox["180", "\[Pi]"], ")"}]}]], "Input",
 CellChangeTimes->{{3.932966356162058*^9, 3.932966399090957*^9}, 
   3.932967728418247*^9, 3.932967764447428*^9},
 CellLabel->
  "In[143]:=",ExpressionUUID->"eb77f1f3-ec2e-df4f-88d6-2b1e7f2be5c9"],

Cell[BoxData[
 RowBox[{"-", "48.75086549297902`"}]], "Output",
 CellChangeTimes->{3.932966400294876*^9, 3.9329677303014297`*^9, 
  3.932967766195528*^9, 3.933226607338991*^9, 3.933226644760971*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"64b6f60d-c853-a545-8285-c72928b11702"]
}, Open  ]],

Cell[TextData[{
 "Dato che ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    TemplateBox[<|
     "boxes" -> FormBox["\[Phi]", TraditionalForm], "errors" -> {}, "input" -> 
      "\\phi", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], "<", "0"}], TraditionalForm]],ExpressionUUID->
  "7fd01cc9-fac4-1540-981a-26dba6fb3fb6"],
 " si ha un ritardo di fase. Procedo infine con il grafico della risposta \
forzata e della risposta a regime per visualizzare tale ritardo."
}], "Text",
 CellChangeTimes->{{3.932966437319122*^9, 3.932966471797621*^9}, {
  3.932967024649252*^9, 
  3.932967061847128*^9}},ExpressionUUID->"a628d880-809d-2b48-a436-\
769500bb7393"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["Y", "TI"], 
        RowBox[{
          StyleBox["s", "TI"], 
          StyleBox["s", "TI"], "2"}]], TraditionalForm], "errors" -> {}, 
     "input" -> "Y_{ss2}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "[", "t_", "]"}], ":=", 
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["D", "TI"], "12"], TraditionalForm], "errors" -> {}, "input" -> 
     "D_{12}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "+", 
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["D", "TI"], "34"], TraditionalForm], "errors" -> {}, "input" -> 
     "D_{34}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "+", 
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["D", "TI"], "56"], TraditionalForm], "errors" -> {}, "input" -> 
     "D_{56}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"]}]}]], "Input",
 CellChangeTimes->{{3.932967392834688*^9, 3.932967400361849*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"d953c03b-579b-af41-beb0-392647fef7aa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["Y", "TI"], 
       RowBox[{
         StyleBox["s", "TI"], 
         StyleBox["s", "TI"], "2"}]], TraditionalForm], "errors" -> {}, 
    "input" -> "Y_{ss2}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.9329674656165924`*^9, 3.932967471344433*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"18a3ac04-c954-0744-b99e-0eaa461302b7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{"9216", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", "t"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"22904", " ", 
         RowBox[{"Cos", "[", 
          FractionBox["t", "4"], "]"}]}], "+", 
        RowBox[{"82787", " ", 
         RowBox[{"Sin", "[", 
          FractionBox["t", "4"], "]"}]}]}], ")"}]}], "7378280585"], "-", 
    FractionBox[
     RowBox[{"72", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"577", " ", 
         RowBox[{"Cos", "[", "t", "]"}]}], "-", 
        RowBox[{"506", " ", 
         RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}]}], "588965"], "+", 
    FractionBox[
     RowBox[{"972", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "t"}], "/", "3"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4542", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "+", 
        RowBox[{"655", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}]}], "105293945"]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.932967745454401*^9, 3.932967772423284*^9}, 
   3.932986442609272*^9, 3.9332266131237392`*^9, 3.933226649122677*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"64ee3875-c671-df4c-a076-d6ec7f00498b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["Y", "TI"], 
           RowBox[{
             StyleBox["s", "TI"], 
             StyleBox["s", "TI"], "2"}]], TraditionalForm], "errors" -> {}, 
        "input" -> "Y_{ss2}", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], "[", "t", "]"}], ",", "RispRegimePerio"}], 
    "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "->", "All"}], ",", " ", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Risposta forzata\>\"", ",", " ", "\"\<Risposta a regime\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.932967066223814*^9, 3.932967068715107*^9}, {
  3.932967230443296*^9, 3.932967264635568*^9}, {3.9329679015595303`*^9, 
  3.93296798761162*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"066ca939-31bf-5044-9651-24714f88cc21"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    InterpretationBox[{
      TagBox[{{{}, {}, 
         TagBox[{
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           Opacity[1.], 
           LineBox[CompressedData["
1:eJwdl3k4Ve/Xxs2ZyjxUwjEd83CUVHiWb8mYSpQmoUmJUpSkkpCUIZmSTBGZ
p3P2IXnMmUmZSpKEZMiQSPLu3+sf1+fa+1nPWve617n2ojhftDnNxsLCMsTO
wvK//89uOXPpnHpqxPL/f47lte9krQ7JXkf/o8oj1oar9RV3ZWXv/z+PKyQa
rotkFPD2Rv6PYfh8i+GzylAZTtkn/+OI968mDdWnT4Wtnk36H/t13+My+rQu
8d/fntT/8cO9PRuNFF7w6P1ZTv8fV2wc0jC6YOjl9lvmJcl+J75NGRgVvx9M
m9+ZQ3LlxdPD5kZ/XK36Z87m/49N/ertjJJZ++//NikkWTDZ5byT0a7WR4oL
PUUkFyQUlJ43GoszrZo/V0JyR3dZ6xWjh6dWjs0t00keEyu96WukrV28OBNK
kKwQpfXnrtG7ZZeonzKlJP8Nmjz9wOjqG2nt6cIykg1ivS9EGm14/L55cmc5
yUFVckfijCocQs5OdL0m2WqwrjDJyFkV2H+cxSRv7D54KM2Ibdmnfd63kuSV
pZGGl0bvB+02zZtUIRY/c7UbygVGL+q1XefWVZPPfS1neUuMvHP4Smd7/se5
yhHJTCOLyBGu2eQaku3mn66+NpLyrrKdOVdLno83/SNTbTR1PCH1J62OZNue
B6/rjCp3Xvs5vUwy2OuIjjQaRarYGE3X1pPPr/n9yWgzOiWg8XAq9A1iSd4i
jXg6jfR+rfkwebCBjL+trn9Dl9Gaj0PUSZlG8n2T7P2Peo16K197TYyRnPz4
cbBXv1HWi7iaH4VNiOXSATV3l0Ej34dXhH74NCOWgqpdD7uHjKwvW58Y39mC
WASvsRmGfDOStVfJ/c7filh+tr/oCR4zmjXkWB7rIjlC6eJEzw+jWvnPZmOJ
bYhlUD1r181poxiespjRs+2IJZPD0QPPGJVcs7h8RbIDsfTuFb8zM2eUML51
/ZwvyY56DD77BaPA44qVl7+QPKY+dXZh0ci9Q/jsrMlbxKJ8tZ67Y9no0E6W
dZezSL4UF3Bz7J8RMCZLZtZ1ks8v1TIprEg4oYFtpofkxYlt3GMcaHkd4+Ul
g3eIxexmaBvHGjR85/m+n8kkP8xfx7DgQa3zEb8vcr5HLPMyVn2v+BDj7K3E
6XMkt3wAxyPrUNIHV5OLbSRfOiEJUYIoeM/hiSlaF2JJM68yFBVGR3Q3b59a
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
            "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
         TagBox[{
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2], 
           Opacity[1.], 
           LineBox[CompressedData["
1:eJwVWnk41N8Xtiep7Fu2IcY2w4yS5OseiigtiFTatFBESSVpk5AiyRaVPbIv
M/MRcm2VyJIkpKjsSdm35Pf5/TXP+9w773nPe869c8/zDMXZ0/YEDxcX121e
Lq7/fz655izAOB5vEhKQJ1q6qhDXfFC23qt8GTGfuwq+mSrAS6/Lbykr30GR
d/rZz7oK8JOKUCV+5UeoNvQs7fvzAuz+34UzM0rPkTZV8exuswL8YcE18o/S
C/TgdXummVs+Xvb5O/WX0lsUrCBgkm2Sg5PqEs79VOpAj6/lqDpBGp6MZWt1
3+tAynWqTwemU7GFS/2PlrkONBY94mCQk4pHeGfsSz50ok+KLp3KsqnY8L+d
RneCupBl4ao809Fk3Jz3l4f6uxtlL9Z9OhuWiK/X6WxjHP6BHNt+hWrvi8G5
eXc+u9OHUY9/181WpVPYBb1/NOI1geTMTXO/UZIQV/J0yee7E8hiAdWXuiSh
WD75rrrUCbRRyzrFLScJ1b49qfi8bQI11HL3WBkmI409f5NPGE2i2LFNqqPb
U9CgKzX7K/cUanSondl8Og2djrha3hw+jSpuHm3KvfYc8Uwld+Pn00j5ySdN
7vLnKG5vLVde1TQaVNHlklx8jurkxTeHTk6jhjKnsmu+mUg7PeONleMMOlLk
/8nKKwuNlH5orlKaRYzWdXWb7HOQR5/mD1buHNqbuWLXDq981HOoQ7Dy7Rxy
umKz+939fGTXHkxv6J1D7PDsxTU5+ciwfuByn9w8evNKcZXOQD7iLUgTkQqa
R+Pie//x7ytAsX4Uk0uHF9DnrpzM/fqFSGi6+dgt3wXEv8pyf/mOQnTV88ad
+1ELaL4hrvSXSyFydu5uTa9fQFyb811z4wuRjuUTt/YNf9G/c9HOeVxFqFJc
9tFGkUX0RyPm6rmKIrQutLbcXHsRrVr965bHpyL0TMCn18ZiEY1YTLYxR4vQ
vbk23dN+i6jky5XDImtYyKE78nXc4CLivjLNJ+PFQsOZIpMLFf8QOz1Mcq0k
GzmtrZAV7PqHtGi1zT4abNT0xBNJzPxDNhtDJR9sYiNWeGOIDm0JRdFUnVcc
ZaPrF+9RDj5aQsrdHkaU52wkRAmgdhtyQbzh8oo0GgfVGj/QvWbOBfJmKj8k
jDko0PHpBgVbLjhXWZ1rvY2DeMKLtx5w44K60seFkic5aP7fiMunJ1zwLr4t
b3k8BxXLzXtezOSCz9uSHErSOeiiwTIfSYILnoYIxDFZHDR+hhJs18wF364u
u3L5HQf97LLPaOLhBtcTQccOznNQ5qxzvsdqbkj5bzpjKz+BXCXOFq+U54ay
XerJs6sJ1Ls9pHb7em5g/h4wz11LoK6S8sE3LtywJkok9MR2AsW11f856c0N
+Vw1z/z3EMhxvH2W/yY3VL7gyztxkECtmhOCW+K44WzDFv2rHgR6F0vVrHjH
DZlfxKt/hxIohLWOcbiDGxLSH/IbRRHIstl0478+bjAZuRdl9ZhANcucrIyX
uGHUiOlY/JxA/qqnbD6v4AFlc89T0vkEAnRxn68MD/goWN7exCFQ2cXwU8UM
Hkh2ME5sqSSQb8STc3tNeIAr45q/+RsCGeZmXp7exgOufzLXX31HIFZfzZ11
x3mgtdj5s1Ebgby4Wx58OMsDD6Lz2BWdBNJT6H7kdZUHdI6d0lvRTaCcPXPP
86N5wH/HUtevfgK5nxUo3JXCA0kLRgu3hwmkdU+8ZDSPB0yGkyO+/yLQYLpy
VWgZD4iu6YjjHSPQs2panc5bHqhqEBcemiDQ8W6jlvqPPLDloUJ3xDSBVBa2
dp7+zgOfDtuv5J4jUI+U/fflv3nAOz43XH+BQE+ZzsMZCzwwoldwTGuRQE47
Pce3CvKCT/zlm33/CCR32m++X4IX/owX9x3nKkbtt+/wBFJ4wXeadS+DuxhF
J0ULqdF5oU3S8nw+TzHa8zJFrMaIF5iXv0X78RYjsY58uWNbeeH+sttTwnzF
qHnypQrPHl7IdqsPPUriMJF6raQjvBAi/f2QL4lfbFBg7/TghZOrp2psSNx7
yBP9vcILy4Icpr+TfCKBlW+f3+EFZ5dtkzQSb8oR37M3hhesmr5VMMn4J1tP
fOVLI9dXLhwaI/VGLBCuhYW8UBFj2nJqiUAvVYQmDlfwgh43Xekxme+gldPV
lY28IDfCvz2Y9EPiXO6y0s+8oLHw+QCd9AvFckW4DvGCH77vGEb6eRrbykvN
8EJsaoNlBul3dH/qs2o+PpjsWLXe7w+BKlfO6J0T4wMDo0fqQmS9RtZZlSoq
84GM3nWq7RCBNt/61XR5Ex8Ip6XdEvlGII9MtJ9qxQc72YIzgV1k/79/0Nvq
wAc8G4QziU8E+qNkMKfrxQfe0YvLLBsIJL81+NaX63xQqHrmfTrZf1s9Olfe
DSXjadyQriL782nZNZX+DD5gee0+rM4m0NsfzdkPOXxQMTF4+2wugSaFVDeY
1vDB1elOrwvpBNq+7832x918cMNr/XheLIFmp1ZfsJXiB2uJDxNDlwikquC8
tKTKDyqjpSxhTwLt3MK6k8Pgh0No+9TwCQKlRTg+FdzBD6EjP4902hLIVjfp
Tfktfvib+PpfkCaBrjlM2Lg/4IdevdkPdxQJ9PyqeZdsAj/k52tKWIoTiOvd
0B/vEn7gMxvbN7/AQTmuTDntMX6wMe6p2VjHQe33A1Lb//FD+Zw3R+UlB/ER
bfRAYQHwz63WfZvHQfv5r2z+RhWA1yqnHHZFcpBgcrV7zCEBMIqVHdyyn4Oc
P+/BvO8EILated1CB3lfxn87c65DAI68XmVFectGhfs95Lv7BeCa0O2F5cVs
xNsZdLmEexkU2pz4qxrFRqntJfrnNiwDFc1HXdet2aj/o3LG1+RloCy/qoQv
n4XConIcrPOXgfPx6Bfu8SxkYG/EX/JyGQRwuz6PC2ShoFY756h2kq9Jz9zK
iYU0PgTKW68ShBMzn5dm+FjodPNI+IvLgrA8UkO1ZXsREgu/jKhBgmC4zk+A
o1+ESnYJjEZGCsJd7vimY2uK0Iompe1n8wShxHBETXG4EGU32PJT+wThuDAO
lLxdiEbrii9H7l4O6UH/Ke0sKEDnXgU4e1KFIH3U7c7s2zyk2GshMK0vBHHU
o/qeD/JQPc/yTD8QguPlhy/HOuYhNQgdu7NPCPwYkcv4+3NRR0nUjdS7QkBd
9I+1X8xBpvnPnnb8FoIMFwNTW8VsJBpf27m5eAXcP0Hhr6dloIKzwnYyVitB
+kC9251tCSjpituw3l4RCHA7N/qm9ibWq1g+G3RQBI5YPa76NeOPK/gy+LuP
iQDXR4/fP9QDcE9or3LoWRHY80TUc31AIFZMPLh36I4IuA7/GZA1vovjanbV
JJWJgFRr/LDGrggcsXLdUzEVUUie1ZWbvRuPVWxbsk5piIL5uKs4R+ExLog+
+6KCLgqNVsqnaXmPcbNSTqvHJlGQ/Tjha/b+CV7FVF9Rv0cUikN9dX8LJuIQ
BxmfW0Gi8Fv4a3azaTL2T/hrMzkiCoeu2Aq+v/8M79YrPqc9IQquXkab494/
w4qV5x84z4nCtSh0Ukc8HZd8H25u5heD2aX+nxlR6XhcrWNXjqIYLL9l83os
JgM7Z7N3nNwtBn+I20KbHmRi0xceVu1FYqCds0Yu1DYXr9qmdWp1iRhY3TGL
3X4vF3d19gVbVIjB62NM+4pXudjnr1Mt6x2J1UyO1m3Iw/lo+9YHfWKwUED5
piGcj5VfU823SYuDkoQqn1NfPub60ANlvuJQ+SsnPNenEAcMlSf53hQHo0CP
6AsRhXg51xOejcHi8OF3eMuy7EIsRttXw44Sh6kb7fX3vhZitaD3W/PyxYF4
mjUpYlqEt22q2pncLw5mt6YyXy0U4UabxLwjv8ThQU7SHiUxFrZzvSaiNCkO
Af+Y40iDhZ2ijFriuSUgN19y1Uc7Fvb4XWgfJS8BQ86SIpYZLPwwJcUp2FYC
vFrPRytYsLFMyc2XFvskYNkXW/c6RzZ+3HxYkf+IBFw89yjKyI2Nny2u6bl5
RgJe4VOix++zcfHeyGNXgiVgm5+rQlsrGxt7eNVsvC8BDG6VuZg+Nq4M2K02
GyUBrpmrYtdMs3FdgfCAd4oE9Mh6HXeR4uCuFbdPe5RLwHOT7yC8h4OPqByr
13klATcrvxt9cubgPkNTnZ/1ErCuVybS+RwHj55Y/OXSIQGn66/jF6EczF1x
4dzRSRI3eiSdqObgwDa7FqUFcv/PYxt0mzlY6BdD/yu3JAj9qpkiujhYQm50
cv9qSTjmznNIYIqD1b1P+uzRkoQyd4+1D1UITDPqtkvQk4S0iVsbHusQeB2X
o+6wgSQIq18fczMgsNk9q/7rmyWBmx49d8iKwIdSdfZkOUlCps3lj+HuBD5x
Ok132lkSRspWxbzzJrC7nuIK01OS0Hipz7rRj8C+Zaur2i5IwufLaRaq9wgc
3Tquy3NfEor/SrmJZhD4SZzbih1RkmDYdK7aN5fAqUd6+2PiJYE1uPvmcxaB
C0c+PqFlSELghvk/DhUEflG487JPriRMJn29/fEVgSt83uypZkmCGL+fhWw9
gRv5XqzYVykJy6IcpP+0EvhjHWMg5Y0krIsyWn2rg8Bd4ZlVow2SwH9Ojefz
FwL/cFB9urFVEmp89/bNfCPwsPzjywGdklCgk5Lb0Ufgse8S9k09kqBhdmbP
jSECz2aE6skNSMKZpuyGnyME5l9/fSBvgtT7Y4us6ASBhRdmqubnJOGHqGtX
3RSBxSrPPjXnkoKv2tF7rGYJLBs0dDlcQAp81qdcuTdPYOUdzvafhaVg19+p
7ZF/CUwV/6ynLi4F6WrBFUf+EZjeYSd8TlYKuoz6W8eWCLw+4d1AqZIUuLB0
b2/lLsbGJ8yrBdSlwJNXuvEoTzHerF3+1EZHCrjivmUDbzHeNmbg+5gpBeVj
Lkq9JLYh8uwHDKVg+wPJtdZ8xdjxqgaDiaRAWWTohQ+JD29OEr5qLgXist49
p0h8crnc4JvtUnDC7XOMEonPNEVUi9lKwanOtp5HJJ931IqEg45SULK9oKyd
jH/lQIBvxiEpEGZZ0rpIff6URfuJ41IQLLZqfSpXMb4zcIFh4iYFdaf5P+mR
+YTnjArfOScFh1++kvJfJHDMeZfBD5ek4Nc/n9mYBQI/3dhTrXhNCnpWdt3w
miNw2pJjwqkAKSh8ZsIWnSFw9qv3vqwQKahyuBV/YZLARXe3OSyFS0HjGSWj
p2MELrGpZmyLkYLRX3Kxd0cJXCltvDLqiRTQfUVe/veTwLVfWIPdKVJQs5lW
wBogcFMKrUYrUwqap/Su/vlB4LZTzxIu5EtBfsIZrbFuAvdOxTiseCkFszfZ
u00/ETjZVP/8l2opuPBg8rhmC4EPhzbez6uTAgmnL+vfvSNw51r+t3btUvDd
pt3arJLAsWcT+9S6pUDW8xJLspTADmWbeGb7pGDkbceaVLLf39t5bXo8IQU6
55PXjz8jcFjCSkePeTLfgs7VhQkEtv6Z4Q3c0gBxlzfSYkn9/t05vauk4c+I
2gf7YAKXF1gr07SkQXznSbbXCQL7LQ4YL+lJw+iRO3GrnQi80erWvvcbpKHs
XulDV1sCs3peRFwwl4bdg/b6u0wInLmayl9+RBrme3NPjYsR2PVAFSXcRRq0
hmg655cRWC39oImzhzQULq+czV/g4ESTyEsCftIgcCpj4/EfHBxzhnt4Z4w0
nOYL3pqTx8F7XjwWoDyVBoe9h8zkkjlYjN9QdSKVXH84c8Y8koPDHns4xRRK
Q3je6rm2SxwcUP+5sbtBGpoTas//3MTBZzU5RWf5ZCCvKHUVdzEb0y/YNJut
kAElt6bQE8/Y+GfFyIiEmAz8efxY9m4kG590VFV/oSQDb1f5UuXOsvHBoPBY
7k3k92fuTO9Yy8bb+k5fjTgnA+ZN5/3/u8nCFldVs7f4yICPaF0Ew52FzSS7
OqevyYDg242uIw4sbGS+w/DAPRm4tnTWhtBmYa003QnVdBkwKt73NqOlCK84
MenK7pKBkPDSQoZUEX7Xe3VP+1ZZqBnpbmBfKMC1fga3QnbKAn5oW8i9vwDX
SPwuMLaXhYYfi9PyJgW4bMuR1UnOsmB5Rrezir8AZ6ea1Z26KgtCbVXs1oh8
HHp8GSwUysKGdEpFnmUe3tkbrq2oKAffXZRSDu7Mwu+0e1ud1sqBkdRzjRCR
LLz9/IZr8VpyEOKuSXi3ZGJLnq/NMhvk4O3LcetA+0xspqx9UXy3HHAd8Fqd
7fgcr3d6VSHoLwdxenq379ilY/nWOfuJPpJP6M/RfqUUPFztfKM2Zw0E5M4Q
ap6RmC7aprD5sAII34SN9qMPUX9ov3/UCQUI5H9Cr/GPRE+EZgYG3BSgWGHX
4JJUFBLmkym856MAATHUnk8m0Wh4ep9F2wMFKDE9cevb3ViU1vXF41SNAny6
sjlITu4Jks/ow/c1FSH+tGXD03/JqHXt9NrvuopQucfqvemWFHQ3SSBknYEi
HBHcwGbdSUHzcdQ9HWbkupaHyzKJVNQeempQxUkRNveeituhnoYenv8lwglT
hJXnMoRqIR0JoamjXROKsMZLUGnQMgv5mGoIcuYV4T/Kgdnz97JQ/+YDufe5
laC7TEcgrykLVVlWzputVoKyP8FZuvbZyNc29OFzLSXQOfv4jblTDvp5Qu3V
xaNKYKl8rVZhfx7a7+rotttVCf6Vd8SYxeah2tN3RbU8lUDzb89LobY8lOo5
dvCLnxL8vq+oYKqRj5wuv5zeHKsEww2W+lcT89G7e/Yaok1KoC1KHC4NKkBG
94Mbhz8qQbVP6wacUoAyHpR613QpQbOQ4p77uAAFRFMqLw0rgcjTQPGH0wVI
sXla5zePMqyu9BtQci5EbR1Vr+wVlaGDOVUkpFuEVh7oiq2iKEPZaHt/ztYi
tKVryk1XTRmmeu3CZI4UocKvGmLLdZShYpOFwubwIhT2I+xQ2UZlMM79737f
ryK09df+GRV78vtWNhFrn7LQU4lbH647KkO9dnPhy0IWmtyUldd1QBnGPNt3
yb9hocSQBZdoZ2XgSmqV1fzNQvPUx+3LzyrDR5pina8xG+3eVcM6eV4ZIn4I
pm/cxUbPLo6EV19UhnlxeYuyo2xk98rY6upVZThSLDW/IpCNsp2/vPgTogwj
n/dlNtWzEU8If/SOMGXY0NLDl97FRo4FNK/MB8pw0bDiAfxiI36ua1rHY5Uh
sv9m0IuVHHToiWL8pzRSv739yMvtHCTSftivvEIZMk/RtX+WctDJpSDHNTXK
0Lj9Nf19LQeVqeev83mjDCxzibcXP3LQqQtcvxiNyuB1MFCfa5SDqsSSDqZ9
VoaWklxVQXkCyRi93cjTrQzTr4fXDKiT8/bRMcnD35VB7sD3xAAGgdbkmzbK
DCmD4XBRx7w5gbx3fDe5N60MdLRjpNmNQHXeQmuG5pTBaLxGK8mbQMqPmTPm
i8pwOsNYTvcqgRqG/fOWeCnwH00n+1YogdaKZd11WkaB5ojLytuiCOS78YPL
CyEK9GR5DTU8JpB6sKryeVEKaCVpqa3MIpBf3va/TRIUuNec7FlbQKCWtvPt
OjIUSKjfWA7FBLquVhPer0gBhpWjkmsNgdqsR9w3q1AAz95aLV1HIB1vCatE
NQoY60pj/yYCtVcd596vQ4HUx/1K4R0E+mPaKXdVlwLad7u29H4h0LLKXesS
mRSIPGRfsPiNQIrwakf1egoIqW460NVHIANs5NJvSIGXFwU3ku8rtNMk/8Zy
Ywo4JtWaDo0Q6MRLtTgdRAGuTOkz0n9I/cbxRbvMKMDnrlIkNEGgyFKRBi9z
CkhlPhOuniJQtlFgf5Qlma/yhBfMEqj6xcJS8XYKDD4c6PafJ1Cn4TnZrp0U
qP0xuSPkL4HGiX7mkg0FCAmFYod/BFq+wclaxZ4CzocmZAeXSP8570+YO1JA
zuCxpwl3MTJcv/W66wEK2Dg2sPfxFKNdrLLYu4coUNjcMLSRtxid1GcW5h6l
wEeui8u7SXytML3+/XEKBKfpilvxFaMohkLfpAvpZ+cUP/neQtn5Ef+k3Siw
QtH+mxuJa3QFZTZ5UKB8l1vaWhJ/zr3KOHSOAkmFA7bJJN84bWLbTW8KwLDQ
z14yvlCO6/HUSxTonHnmOULqU9H5evWNLwUG1iv9KOYqRhuz7GKGr1JA19bV
chuZz26tt/krb1Ig3EIwJXGRQK7PTer0Aiiwc7fUTOkCgW5osH7YBVFgsc/I
6vEcgWLSNRcvhlBAOjvvqekMgXLVE6TiQikg6YoWsyYJ9DpNQu9lOAXWjZu7
fR4j0Ne1IVY9DynwQS3/d9MogaZSlpx5YyhwvHnhwZ2fZL8mD0dZPaFAtBCv
jXUvgYwpR/LcEymQaRZ23b6HQHaJH2vvp1DgnVTcb9UuAvk/rVj4+Jys/5Hl
5SIfCBSnYCA5l02BLewKpm4jgQoeZ9Hl8ykgrJcoKf6WQD1x0UedORQogQJH
7XICmcS4vxmtokDYuqC9CWkEcpD63iP6mgI6tnNlw08JdCZq7/y6txTgLHzl
+xtDoMcPzWhXmihA8W+4cfYOgebvyzxc1kUBu/gBzZRTBBJbHZat1U2BV+Jl
CUpHCaQZxvt6x3cKzBUIhzs7Esjx3ujsw0EK3A7KMzC2IBA7uOaQ8hS5foIt
Y6pEoIxt9TJBsxTY7/1KV1yCzEe4peXXAgW2d78MShYk/Q/vtijlUQFB/pvX
5/5wkHXsPN1BRAXO9Yo43SvnILSfe6hMXAUuD3aYWRdwEFNeMEVVWgVcZTYG
16VwkHSipPSYggq0hxfX8wRz0Pd0vaW72irQ48qfeXIHB308teHFOF0F1tCj
JhVMOKhW2+T8PqYKqK7vHI6kc1BO3vYB9Y0q4HFlOqxqFQf5ECebKi1UQM9B
rIHyjo1WvXmcMHNUBXStKBvWbGIj7jsp+w6dUIFWpaqvP6hsNLktU/yVqwpU
O79y8JRgo45GIijCUwV8vNmPmkZYKLWtxZN2VQW+xc+9LI1jIaN+QTgWS+qX
99l16WcROsl/oaexUQX8vuVUbyF/v+SU3n5aeK8CMXd5N6RYFaJGQ4UmjY8q
EN0kd/+DXiEycH/10v+zCpx2MRzM/FeABD5IxhsMqkDA5yXGptgClJbIsX/K
rQpf38+sW1Odj3o3zdadWacKu9y1CjwnctAxryts4ThV6LL1N9g6lYYMmF/Z
mk9UobwwvTmrMA0JjQPHIlEVVvbKfvrsmYbyzwkQN56pgonDTH7iUCr6e/ZB
8WShKvCqbndv6kxB0Z7ppV31qqBnma1uw0pCb90/VGYvqsL8977E+fA4pOui
3Wh9dC3IvF673/PMDdQkprPiwkY1uH5HaMC1JAGbnDkzFG+sBhlEr1Hk2kSc
+yb3TRVSg1XmvD/r3RJxmB8jQMRCDTqvnjKrmEvE1v0Gi1m2auDzsDXsuXgy
rnth+vu7mxoIP6pZ3m+Sil8d2fth91M1UIkw2rLfIwOvK40tuJSkBm/sNYVP
5WXgVMnO+09T1UB1Q8dtoz8ZOKDOyXokUw2OZ9BXqJ57js3WOb8KItSgTTN0
cNYzE1csO0OUN6vBux0ztvSj2bg01z9eh1cdOIWZP+sE8rGAtb1cjIA6BKSH
Spuq5WObIeojbiF1iFjF1gzenI8HVBui20TUYeCYcGLQ9Xws/kg64oaiOqjv
md9hNpWP3W5lB7duVAcruevbnT4VYI7y9WXoP3XYmkHNLB4vwNzlNoHPQR2c
K79k96wsxDGz07eubVWHkP80nSM2F+LqM6bXNezVYecGIUHv7EK8xrHtgt9Z
dWiTS1cdPV+ET05lTPafVweeoKHpnrtFuCDiynmbS+qgZf64Ji6lCG9tUD6n
fk0dHmYobnIm3/fnzdzcm++S+VT1aW+ksXC9DtextenqMDc0wN/4iYWl6lq+
hWWqg8mF4JuiIyx81CXtyFyOOhwP05mU5mLjmaRthxpZ6vA36fZHdyobq0pH
7fOpUocXr3/s1jvPxle4tXa/+6IOn6+0Voz+Y+P+LSva1b+pw73MWzx/V3Hw
7uCRwzd71SEwJNCkXpGD167O8zT4qQ5Ps10mc//j4Hfy6+4nzpL5u0g+C/Th
YIMjktILC+qw7JwiX0IgOZ+lTD+1X1KHi9Mywj7kvHVB60WukAAVpmParrmR
85mioUmjtzgV7gmbd9h95+DgK0oOTVJUkOltdDszysHj5VxfNeWoUPPydIDF
PAe/Ma/+9VWZCmIndlQbiBL4rJ3lSis6FbZdrVxaYUzOu9GaUSkMKnhF/zRX
tCDwlk4hhX/rqPBPNHbN710Elj3aoFO0iQqbVtUve+dM4CoPW2sFKyq0bDER
PnubwDqF+q2XrKnQflpu/HwogaOnJJxadpHxvPufro8isJvfJ7cgBypYib2b
Hksh53NcPPFtHxXiRi76jGQSGHjjrhgfpMKW5+s8UgsILBHidHfsGBXCuCTc
rMsJfK3hP3FrFyokshJ2GtcQeFBEKf7ZaVLfN7HDQ28J/DLmW+aBc1QI2R/1
xreVwBqfq5gcb9KP1l/chzsIHKGYWiLiQwXDSxU0rq8EPpl2su7VNSp5Hq+r
X+4ncPPgVltlfyo4HHz0efcwgY10NDt9b1Nhf1Kwbd8vAqd6Cjl/DKaCygXj
mwZjBF5d9HNI9x7pF+PooS2TBPadfncu5D4Vqi4e+bZqhsC9G3PneiOocNH8
KE/0HIF3Xr1/E0VToVfcsqRjgcDFFWeXxz2igs13Dk/nIoFV+GwfTD6mQpv1
yrboJQLf26ovuyuR1BvvqivCXYynQySSnqdQIakxRciCpxgfbZzS4EungkXO
3uOGvMX4nein/EOZVPhb37lxgMQG9sWGL3KokB9leseWrxgnxj6qEC8g67X7
kI0viYW6fC09WKSfKpUPDpHY4NLzlfcJKhwqk21ZRuKjYu0teSVU2OlbZneR
5LuXIxDb/JL0C1bKZJLxiy3XHxyrIPshZUk5hdTX++OYilgNFUq+Sp07ylWM
V1+PGGC+oUJA64kVff9IP+Uqs+3qqKDOc3+CRuZ7kv37nHcDqc+nhmZM+hGx
W3FDVDMVTra8KV9N+vXyp/Vf9gcq6FCHszKmyXoHXqlsa6OC99KKBQHSbwmV
zMCZDiqMmD8p1CLrgV62b5f5QoXiDU86xEcJfNpxmejGHrKednGXqsh6VoYd
j/ftp4JP+4ONZ38QeETz4ZH4ISrcaff29OwmsMyrSrWyESoUkHfius8E9lhQ
zF8cJ8/Pz4HPq1oIHBe944LiNBXEx/a+XNtA4FcMPyM0R4WIK3tOctUSWN61
o+bGEskn8N50+UsCW/IKhiTxaEBxlOp9A4LA558a7Kri14De2+kdmmR/17U+
7OAV1oDhazzJzqkE9jHdORooowGi7A2VisFkv3X5FaWv0QCV5yfYV28QuOlS
lk+togbYiSXqpPgQWD1XkFdITQMSY56OmboS+INctXQoQwN8guli77cQ+B97
rCtnnQZkHrfde3ITgbVslJMbN2gAvL9VW8Ug8I2gqzoiJhpQWDoU+l6BwPTJ
DaYPt2nAN9ryA1YTHLz//kkB1g4NmFwpViQ3yMG3taLqW3drgKP1IA+ri4O7
jozbS+3VIN+n4vMmrzg4pCH79KNjGlAX/8X7xUMO7ntGiUzw04Dar8sbDqhz
8EjAtzneGxrwV/iJop8UeT85Jx12vaUB73/19jkJcDCXEkWbEaIBZlve3T/S
x8ZyMcpVVTEa0JZvHX4hkY13Byn96Ssk9RdvCOVZwcZ7T3Tbb+OQ8dLM/U1n
WPjQ5oTS3BcaQDHfSd3yg4XdlhSDLlVowMU5LteoEhYOvKSouLxRAxZHzxp6
nGThMhcFa50hDdB/9XCAXlSEq82/FISPaMC+Zh2LV/FFuE71ifTUbw2wuHvQ
WDWgCH/qlv/xcloD0nbJcG3YU4TH98r77uLThLaCNX6vxgqxhuWaDC8lTRi+
/ULgpUohjtSQ5XthrwkHrwg1ah/Kx06H1NN/OGpC3yVT081m+XhtpP62VU6a
oGDFHmeo52PW0o7wY86asEd09x6dz3m4tc1ffpWnJtSe03HnncrF4rdH1h0L
1oSw1vvFVnI5OOIbPrGyVBMU+1/NO+g+x+FxJ98cVdYCM/Muh6RniXh/5MFG
4QEt2P2lX2kn9TSSLxJa4zasBX8s9ijXr/NE3e8Jl7e/tEBjybdxRtkLHV8t
xh04qQW1espffWmXkEfIa/0lbm3Yc8n5zKOkG8j/hu6jMXltCH8o2heZE4Ke
u3Mfb7PVBgu9YI2vZjFodkvaXEK5Nqw8rH38j3wa8itNuFVTqQ1v4sdSko+k
IS5m3MqhGm2YrKqTU05NQ8uU7lOY9drgIJAm7qv1DEnN+VjVfNIG9qYSmdh1
6Ug/x/rR4B9tUNxnfebXf8+Rh+SkIUNVB44UfwlPUc5B43dHq+zVdcBfekt2
gFMOusAzZO2rqQMS4/yWCrE5yO/3lyPVujrA2VTE8lqVi+6+fRNsb6wD6coK
l57O5KKMq/Htl+11QPblUbvyg/noR5+ZT1UQyXdMavgtTyEyS2hM1rqrAyXX
BP0qFApRouP+hogwHRD+eNnP37AQHao/p3IsSgee6PdEuJwpRJ35ie94U3RA
51fay5zWQtRy5Z+yebkOpPxI2TEUW4QY60O251TqgPTGKeJ8fhEKH5W8KPlK
B2Z7TLhevSlCO4/S6vvqdSCwpEy+dKoI1Vk4XQjs0AHmWwHL0Z0sVCVa8vbN
pA6YUVnPDadZiFJvPqk7qwPuuClHTIiNbgS8V4xd0AHNxMXUPAU2MpkZPO/K
QwNLqcd3GFvYqKRLWnG5CA3Wjpgo7gpjI9noFMtz4jTw+Hc+wyiRjXx26Z7v
kKKBwTCf10ABGxlUWdQ+V6BBq0rd9K1WNipMv+C1TZsG8u79e6ulOEj0KPeT
QjoNuDnLThWpc9BZudA3ckwavAuw0T9mwEH00FT5n4YkrhEw4bbnoEyvD6/v
WtDAXz/6MPM+ByX/x1jTcJQG7anZXVtmOKhqp9CtheM0+M7qXOHAQ6Dvh38M
a7rSQDmhkZe2kkCq/lElgR40uPhkoEdbhUCpr+f2wRUa7Kyy8T5tRaCaTy2V
HtdowFMpL5RuS6DewSzNJzdpIP3r0pOMA+T8uuLQ3FwQDaY/7XSedydQ2q6q
2KJIGmS0717Rdo+ch4/Ec32PoUGZ0wE9w0gC9Z/zdhWJp8HvQtGcQ/EEUo9U
NzyTRAOdqNITsxkEskhbSohPpUHgnPl1tzwCneS0L6tLp0HhhsysZDaBnrWH
fFLPJfcn5v9zqiT5h44h+wIaVIU/W9bzmuSfN06/xSL9YSoOqr8jEFXh98We
EhpcO1Y9v/SRQJb02q+rymkQsldAIqKTnPdRksV/lTToEZhuGfhKzqNH7aTi
3tBgxCxK6ms/gWq9dK7V1pH8NUpB14YJNHiLv3+6gQZySisv/P//QIJRX3eo
vafB4IG3n5aT877GM4Jt10qDL0X70icnyHhEuIL/JxrEJjt1JU+T8WpP3c7v
JP2dW35WYo5AwR1mv75+ocHib6aT1QKBng+vsV/5jQb8683iTRcJVLcwWbap
lwbWC5s0Fv8RaFi4ce3pgf/rLf93hasYCSmm34sdpoFA8ZJcOXcx0tK9Mfn6
Fw3eS7RcruYpRttgn9PUHxrov0+QucdbjE7bMGtUJ2ngZ39mSpqvGIU4r9Cx
naGBe3X7KhcSZ57vfXhjngapc7LHL5O4LuDlQu4iDbKieKZ2kng4KvrYFy46
HJlcrCTfQ0go3bN+BR8dfuqJvttMYu1iS32jZXRQU/kscYyMb/2WEu8qRAd/
h8in5qQ+9855npiVdPBatdr95xKB7v38cPqVCB1M1hM39pD5Zf/NbpkQp8N+
x4ieG38J9G5loJGKNB3Mn6Dws/MEGlE8nLxbjg6v2TORqrMEEtYzFLquQIe3
LfcmH00RSMdU1CtHmQ6RUafZH8YJZG073PFZlQ4RS1Ffm38TyP1YtakQlQ7h
R3IuPRghUM7tC6IuNDq47pNec7CP5Dc+6H9bjw6Ftdbpft9IvsktEyn6dND+
pqns/IVAmc4SH3s20mHYwo7reitZD9m/5kvGdOA6a3yV00Qgzfc/OApAB8dX
AmKsOrKfUFHsfgs6tF4JZHFXkP0zHbf8shUdVCxQl00J2Z+5/r4x1mQ+Td27
XFlkf8vbOrXa0sHHZ2DPYDp5Huf+KO08TAcePaW7BuR56s1vD3d3pkPZXevq
kgDy/LpWcN89QYcaAfZb/qsESm67/+ONGx3u3C6594c8jwlF9HRTHzpsDAyU
W7ONQF9PS8kcuUKHpJTs35+AQIoq/4KvXSP126oZOm0g0OPwhtOlAXTwuPzp
eqkqgeLOuNPXP6BD7/eSB5/mOKhz7Z4Eu0g65IrQ0lpGOUi2a5OIVwwdPs66
TkT94KDYbSvGc5/Q4VC0RO6FdxwURc1ka2TSYcXSs5LH8RwU/m3AWL6aDiKd
l7tSdDmoObYpx+g1HdLrZx7oUTho9W5Ccd9bOhjvt7sYJMZBYeWBXNFNdLDw
qdofOclG9+LValZ30SEx5WMsncNGQfbHtvNO0aH6zXB1oC4bJe/qcjoxSwcZ
Fzt5c3k2KrOy93izQIcw5u2VbwTZaPy/rQ/u8uhCYLJgnNQ3FnJS1/4kLqIL
bXYXEobDWIg5M+68VlsXnGr+S4/rLkI7xty8A+m6IBe9Vi23tgi5/uy9PcjQ
hacbri+7U1CEnnS3ZWQb6sIxmjRvtH8REqwtGV1noQvFCQmbJFSK0NdYf1/z
o7og7b184KtDIZqLWLibflwXaHBC7I5xIZII9X6y3FUXjNIKVi9RCpHVzZMV
DR66sP+wZ/6ukQLEOrVNwMFPF+4NrVy8e60AhRiJRZyM0YVwuMDkPMpH67uS
ngc16MKN5hc6zP05SITuOpvXrAsZnDBzAcUcNHKdvrX9gy48xBvePfiWjVJV
S3s1OnXhev+Za+9dspGEW6tSXb8u5O/QUeA7l4Xm/Xi3C3DpAWWFduHLi89R
xwqDSktZPRAVWm7SbZeGYjXjcxq260GYa6HgxolYdL0iNHb7Cz0w9JzIdg27
j4e/VETOleiBq8nuIKuT4dhhYSI8vYzEPjreevwPsI7B/ju8FXqg+MXxprtZ
BG7PUvctfa0HnMM/b7mXRGJmDD6g3aoHIrMRiwIJj3D/mTHFFb/1QN7H0Nom
Jgnb3F275sUfPZg/sbFt+/ckXJaxV9plXA+m/PVGxGnJ+OGPl6urp/TAfTb/
7PKqZAz7Qriu/CX1wu8Rr6EUHLdF9fvwcgZUKJxfF0J7hnessU+rW8uAHw5r
Y+F2Jo7tpVccUGeAI6dzW091Ju7NEfw8QmUA354vliY8WdgPykRWazPAYc2/
Kua1LJx9QtXPjsEAFxc52V9e2Vgof8y26z8GhKzQq1q7Kxe/2RLGNerAACMu
vNpxIB+LrXJdc92RARobStv/cRfgQ59MDUT2M6AoX+zbFfkCPH1qyo15kAHl
x5SyZ3YXYPX7Tp8uHmMAnfuCxm+iAAd0aOUueTIguZ9/4dnVQmzq8eaA6B0G
+BufvhLXX4Tn24csakJI/Gs8336xCLM2CzMv3WPA5t7wdZ/EWVhd1kbwy32S
X6tbRQdYWLimk5URzYAbvuaZUtEs3C47uhJSGQAWTQIvDNg4IkBkbjyNATtU
UhXKrNh4+29mb1o6AxZstapvOrFxec2lkhVZDHjrtvm73U02Oc9zu3wqYMDk
1oC8lbVsfPaVRIUHZoDYbpmGLCsO1tLbkEWpZMBzn+Jx7MjBP+L2RbdWMWDL
tpbYhy4c7HD2qbvRawbsqeQq8wngYOM1GrICDf/3W+br+lIOnr69je9FIwO4
osHftJaD8/64/3ZrZgBTeOWJFR85WOV1wav3HxjwQDLLruMXBwue2+T1pJMB
KuyD8/vkCVz1+eDB3V0MiNXvLLKjEviKxQ1L3q8MOH478pEQk8Cja14pnvpG
1l/mvUeeBYEzAgeWy/9gwOPFlypPdhP46NjyqcZecn9m+d2t+wnc+npn/bpB
BnxvVF/V4k7gMMY5zsAQA3zShcYLLhB46+OHSXE/GVCTsqC08xqBS861X+L6
Tfafz9GZkjACJ8g7r303xQA792Th49nkPK+vTXeeYcCjt4GyRYUkv9XkhtlZ
0h+RtODXxQQWvBS4fe1fUk8ut41RDYGTQ3fZlyyS8dLOhsa9JbBxqszh3UsM
iBe+Ml7eSOCz7zO9/HiYYHXaiHdPO4GFBs/7ifExIWFba3RNFzkP/zMOzOBn
wsWsDypzPQQ2kRQIN1nGBDHb1MdjvQRu12561CrIBD4Vq/mcQQJ7mcWmnBZi
gqOBE5M+QmDhfUdzuISZoD+3ytjrN4EhcKJCZzUTuM1WpZpPEbjzcVldlQgT
CgcKJ1pnCOxddLvVUYwJFonpM9R5Aq+q2/l1VJwJ4/fFM03+kn73SA8GSDLh
aSybX/Yfgc1mesbkpJmg7NLLTywRuGtl5kK+DLn/WtgzGe5ifHHtef6tckzw
2GLU+x9PMRbdZLz6yxomRPALlKnzFuNsG37Z8wpMMOTO0P5AYgvXRpXlSkz4
5O7B2MxXjHuuxegkKDOhxQe9u0hi36gjButVmMC0e7RwhsQS2ZpQr8qEXxoR
WIPEuVXjVkfVmMBSa5dJJ/ksO0rtZtSZsNGrQHCIjP/9d8DBUA0mLOj9DR8l
9fkJ7HRR1SL1XKazCK5iLKUgfe6FNhP8bR0ubCHzydfv8d1FY0LQc9n2yEUC
b9v2PKCPzoTT2zg9GQsE7j3iFXZFjwl7Wrkjb8wR+NqlTbGiTCZk5JyaWUP6
KRPGl5yuT9ZjelzkyiSBC1Mbsv5bzyT7y2jgyRiBrUuj2R8MmLDskffNgFEC
978/jE8ZMuGv2ZkB+k8Cyy2NtURtYsIuMWzY9IPALMnSLu3/mJC8mGrwqpvA
O3UC+itNmPC9yVnt+mcC39onNf/LlAlnD/7jQi0EVjzbzRuwmQl37lL4zRsI
XByYsVLOnKzf9nSN1bUEHikyolhYMsGU0c3zp4zAgXW82l1WTGhouPtRgCCw
8rd367y2M2Ew5f7St3wC71l12PLpTiZUvueP7Ushz+NaDdt1u5kQZaJKXfWE
wMGbxg7U2TBhpuzXzoUoApe53vKc3kPWU2ZHvmoQgddWp0fvPMCEYG6N97kn
CdyoM5va5UTGf+50W+sQgX2iLYtOH2JC3wf7kjP2BK4/NdQUeJTsx94nC9s2
k/0tor0cuzCh7UOw9THyvpD3vSK94xQTVhRQvRXECPzqR73a59NMaBw+1Zqw
jPSfcDebOcOEEp8PqYtjHIwP5l7R9WaC0ZCfu3INB7u++Xfn5QUmrC18baxU
zMFijF2x2y8xoXRoq9JAFgef5PvDcvFlwo3PiQ9aIjhYOIsxmnCDCfUP3YLW
HOLg/bOsIyKhTDipt3ZLxDAb8znzez4NYwL8a9RjfGbj3Hr7qzrhJL/gJ/P4
ejbmTph+ZPmQCS92Gd54n8XGGeaGH248YoLGkcfedafYeCqi1HwsjQmP75b/
FO1i4XBalVZLOROSDoZ068QX4QzDA8v9K5hwPHGSP/NWEcabJwcYVWR9zkuk
/HYrwqP71NMevCL9UtTd/XFTEd4eGKJk844JAkvqS6IdhVig21aiuYMJXvYO
k2HLC/GV8B+LDZNk//dF/krfko8j4v26rk4zQSntg2GVej7OfCZZSptlgmpJ
571cwXzcXrbVJ3SBSc7XO6wXY/KwwVDWuDWPPgx/3LVOOCkX/zH1HqhfrQ8V
P/aJLCVn45MTfO/faulD4GvGCjO3DHwoc0ujk44+FPU06gloZWCHowH1v2n6
8F58x4WwwXRs0cT7WpKhD7dYbr2/jqdj9Sye0qMb9CHxpud/8/uf4T5nrrS5
zfrwumVvcYdxKj7esuCjeVAfYne2fcksTsDOBePKd+7rQ0amaVtTVQh297f7
u+2BPoh8GtPY6X0HX7BjfRJ+qA8j8fjbVbVgHDx1ISw8Wh9S85RyuYNu49yN
cwsxT/SB9TLw74qtN/Bc5VLbsyx9AEmKbs/8SRzeIhxa80Yfgh2N9zFyr6G4
lDOugW/JfF93/biffgOleDdutqzXB+MdwTkfZm4ijlT4fH2jPkxqHMb5MQGo
a7+464eP+iAR0nJpV+sdRP0hu/n7D33YvXedT71iBNJj+Sqm9umDt5UD43JN
BDK6/XnuxIA+8N16ND1y6iGypj7JHxrWB6Owp5mKrEjk5aasODamD9Om6wXO
m8cgP+Obc4UTJF/pxlOyQzHo9srvrd5TZDzukukL92JRbF7K3dlZfeC5Y51v
1fIIJd/gcymZ1wffA/+NlnnHoSybE2Z+f/Xhw3/nfb9KxSOWymsFk3/6YLPM
8kh2cTwqn1CfW1rSB6sv0tlr9z9G/wNssM1K
            "]]}, Annotation[#, "Charting`Private`Tag#2"]& ]}, {}}, {
       "WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
      StyleBox[
       DynamicBox[
        (Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]], 
               Line[CompressedData["
1:eJwdl3k4Ve/Xxs2ZyjxUwjEd83CUVHiWb8mYSpQmoUmJUpSkkpCUIZmSTBGZ
p3P2IXnMmUmZSpKEZMiQSPLu3+sf1+fa+1nPWve617n2ojhftDnNxsLCMsTO
wvK//89uOXPpnHpqxPL/f47lte9krQ7JXkf/o8oj1oar9RV3ZWXv/z+PKyQa
rotkFPD2Rv6PYfh8i+GzylAZTtkn/+OI968mDdWnT4Wtnk36H/t13+My+rQu
8d/fntT/8cO9PRuNFF7w6P1ZTv8fV2wc0jC6YOjl9lvmJcl+J75NGRgVvx9M
m9+ZQ3LlxdPD5kZ/XK36Z87m/49N/ertjJJZ++//NikkWTDZ5byT0a7WR4oL
PUUkFyQUlJ43GoszrZo/V0JyR3dZ6xWjh6dWjs0t00keEyu96WukrV28OBNK
kKwQpfXnrtG7ZZeonzKlJP8Nmjz9wOjqG2nt6cIykg1ivS9EGm14/L55cmc5
yUFVckfijCocQs5OdL0m2WqwrjDJyFkV2H+cxSRv7D54KM2Ibdmnfd63kuSV
pZGGl0bvB+02zZtUIRY/c7UbygVGL+q1XefWVZPPfS1neUuMvHP4Smd7/se5
yhHJTCOLyBGu2eQaku3mn66+NpLyrrKdOVdLno83/SNTbTR1PCH1J62OZNue
B6/rjCp3Xvs5vUwy2OuIjjQaRarYGE3X1pPPr/n9yWgzOiWg8XAq9A1iSd4i
jXg6jfR+rfkwebCBjL+trn9Dl9Gaj0PUSZlG8n2T7P2Peo16K197TYyRnPz4
cbBXv1HWi7iaH4VNiOXSATV3l0Ej34dXhH74NCOWgqpdD7uHjKwvW58Y39mC
WASvsRmGfDOStVfJ/c7filh+tr/oCR4zmjXkWB7rIjlC6eJEzw+jWvnPZmOJ
bYhlUD1r181poxiespjRs+2IJZPD0QPPGJVcs7h8RbIDsfTuFb8zM2eUML51
/ZwvyY56DD77BaPA44qVl7+QPKY+dXZh0ci9Q/jsrMlbxKJ8tZ67Y9no0E6W
dZezSL4UF3Bz7J8RMCZLZtZ1ks8v1TIprEg4oYFtpofkxYlt3GMcaHkd4+Ul
g3eIxexmaBvHGjR85/m+n8kkP8xfx7DgQa3zEb8vcr5HLPMyVn2v+BDj7K3E
6XMkt3wAxyPrUNIHV5OLbSRfOiEJUYIoeM/hiSlaF2JJM68yFBVGR3Q3b59a
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
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Line[CompressedData["
1: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
8kh2cTwqn1CfW1rSB6sv0tlr9z9G/wNssM1K
                "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                Opacity[1.], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[2]], 
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[2]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>], 
        ImageSizeCache -> {{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
       False]}, 
     Annotation[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]], 
           Line[CompressedData["
1:eJwdl3k4Ve/Xxs2ZyjxUwjEd83CUVHiWb8mYSpQmoUmJUpSkkpCUIZmSTBGZ
p3P2IXnMmUmZSpKEZMiQSPLu3+sf1+fa+1nPWve617n2ojhftDnNxsLCMsTO
wvK//89uOXPpnHpqxPL/f47lte9krQ7JXkf/o8oj1oar9RV3ZWXv/z+PKyQa
rotkFPD2Rv6PYfh8i+GzylAZTtkn/+OI968mDdWnT4Wtnk36H/t13+My+rQu
8d/fntT/8cO9PRuNFF7w6P1ZTv8fV2wc0jC6YOjl9lvmJcl+J75NGRgVvx9M
m9+ZQ3LlxdPD5kZ/XK36Z87m/49N/ertjJJZ++//NikkWTDZ5byT0a7WR4oL
PUUkFyQUlJ43GoszrZo/V0JyR3dZ6xWjh6dWjs0t00keEyu96WukrV28OBNK
kKwQpfXnrtG7ZZeonzKlJP8Nmjz9wOjqG2nt6cIykg1ivS9EGm14/L55cmc5
yUFVckfijCocQs5OdL0m2WqwrjDJyFkV2H+cxSRv7D54KM2Ibdmnfd63kuSV
pZGGl0bvB+02zZtUIRY/c7UbygVGL+q1XefWVZPPfS1neUuMvHP4Smd7/se5
yhHJTCOLyBGu2eQaku3mn66+NpLyrrKdOVdLno83/SNTbTR1PCH1J62OZNue
B6/rjCp3Xvs5vUwy2OuIjjQaRarYGE3X1pPPr/n9yWgzOiWg8XAq9A1iSd4i
jXg6jfR+rfkwebCBjL+trn9Dl9Gaj0PUSZlG8n2T7P2Peo16K197TYyRnPz4
cbBXv1HWi7iaH4VNiOXSATV3l0Ej34dXhH74NCOWgqpdD7uHjKwvW58Y39mC
WASvsRmGfDOStVfJ/c7filh+tr/oCR4zmjXkWB7rIjlC6eJEzw+jWvnPZmOJ
bYhlUD1r181poxiespjRs+2IJZPD0QPPGJVcs7h8RbIDsfTuFb8zM2eUML51
/ZwvyY56DD77BaPA44qVl7+QPKY+dXZh0ci9Q/jsrMlbxKJ8tZ67Y9no0E6W
dZezSL4UF3Bz7J8RMCZLZtZ1ks8v1TIprEg4oYFtpofkxYlt3GMcaHkd4+Ul
g3eIxexmaBvHGjR85/m+n8kkP8xfx7DgQa3zEb8vcr5HLPMyVn2v+BDj7K3E
6XMkt3wAxyPrUNIHV5OLbSRfOiEJUYIoeM/hiSlaF2JJM68yFBVGR3Q3b59a
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
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2]], 
           Line[CompressedData["
1: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
8kh2cTwqn1CfW1rSB6sv0tlr9z9G/wNssM1K
            "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], 
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
    Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
    DisplayFunction -> Identity, Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
    True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Risposta forzata\"", "\"Risposta a regime\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.932967265584553*^9, 3.932967479254206*^9, {3.932967751305331*^9, 
   3.932967774077349*^9}, {3.932967929143576*^9, 3.932967944012409*^9}, {
   3.932967982199915*^9, 3.932967988537548*^9}, 3.933226654754228*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"02d28d26-57f3-8344-b5c0-b906b262fdb2"]
}, Open  ]],

Cell["\<\
Da notare anche come la risposta transitoria scompaia molto rapidamente.\
\>", "Text",
 CellChangeTimes->{{3.932967858406002*^9, 
  3.9329678905378075`*^9}},ExpressionUUID->"ab8b2232-4049-b747-8f14-\
826d9e2f054e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["7. Modello ARMA e risposta alla rampa unitaria", "Section",
 CellChangeTimes->{{3.932968254059206*^9, 3.932968264394178*^9}, {
  3.933143622221985*^9, 3.933143623539938*^9}, {3.9331438037817574`*^9, 
  3.933143804755518*^9}},ExpressionUUID->"e4c316e1-de1c-914e-b66e-\
997b76e8720d"],

Cell[CellGroupData[{

Cell["7.1 Modello ARMA", "Subsection",
 CellChangeTimes->{{3.933143834530073*^9, 
  3.933143842923929*^9}},ExpressionUUID->"07f10342-f291-1d48-b1e8-\
cb1280d2f6da"],

Cell[TextData[{
 "Occorre adesso determinare il modello ARMA equivalente, individuando le \
condizioni iniziali sull\[CloseCurlyQuote]uscita compatibili con lo stato \
iniziale ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["x", "TI"], "0"], "\[LongEqual]", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", "3", "}"}], ",", 
             RowBox[{"{", "-3", "}"}], ",", 
             RowBox[{"{", "-1", "}"}], ",", 
             RowBox[{"{", "2", "}"}]}], "}"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> "x_0=\\{\\{3\\},\\{-3\\},\\{-1\\},\\{2\\}\\}",
      "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f18dbe59-beba-c948-9b2d-5c3b9d07d7cb"],
 "."
}], "Text",
 CellChangeTimes->{{3.932986570174585*^9, 3.932986575231144*^9}, {
   3.932986617833107*^9, 3.9329867177168045`*^9}, 3.9329868602962227`*^9, {
   3.9329869329143105`*^9, 3.932986955192543*^9}, {3.932987682927021*^9, 
   3.932987684073005*^9}},ExpressionUUID->"6dc069be-5909-614e-a0be-\
0d5ceffc10ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["x", "TI"], 
       RowBox[{"0", 
         StyleBox["a", "TI"], 
         StyleBox["r", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
    "x_{0ar}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "3", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"-", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"-", "1"}], "}"}], ",", 
    RowBox[{"{", "2", "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9329876976408463`*^9, 3.932987721273447*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"f17c4450-a0c8-5e40-a5b8-7ca186915921"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "1"}], "}"}], ",", 
   RowBox[{"{", "2", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9329877223138905`*^9, 3.933046631440294*^9, 
  3.933053929404594*^9, 3.933137298285469*^9, 3.933222690547053*^9, 
  3.9332266762640133`*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"fe748c91-ca77-2840-b03c-227e218ea6d0"]
}, Open  ]],

Cell[TextData[{
 "Per determinare il modello ARMA, occorre valutare il sistema dinamico nella \
rappresentazione Ingresso-Uscita. Rispetto alla rappresentazione \
Ingresso-Stato-Uscita, per ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["t", "TI"], TraditionalForm], "errors" -> {}, "input" -> "t", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "9bff6677-d3ec-024e-9105-e4f9e6e18e53"],
 " equivalente, qualsiasi sia l\[CloseCurlyQuote]ingresso, con condizioni \
iniziali nulle, l\[CloseCurlyQuote]uscita forzata corrispondente \[EGrave] la \
stessa a parit\[AGrave] di ingresso. Ci\[OGrave] vale anche per la risposta \
libera e risposta forzata a patto che ci siano le stesse condizioni iniziali. \
\nPer prima cosa si valuta la funzione di trasferimento come un\
\[CloseCurlyQuote]identit\[AGrave] dunque: ",
 Cell[BoxData[
  RowBox[{
   FractionBox["432", 
    RowBox[{"5365", "+", 
     RowBox[{"4422", " ", "s"}], "+", 
     RowBox[{"2473", " ", 
      SuperscriptBox["s", "2"]}], "+", 
     RowBox[{"960", " ", 
      SuperscriptBox["s", "3"]}], "+", 
     RowBox[{"144", " ", 
      SuperscriptBox["s", "4"]}]}]], "=", 
   FractionBox[
    RowBox[{"Y", 
     RowBox[{"(", "s", ")"}]}], 
    RowBox[{"U", 
     RowBox[{"(", "s", ")"}]}]]}]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.932814785545336*^9, 3.93281545084465*^9, 
   3.932873626743604*^9, 3.9329575675945663`*^9, 3.932986258600516*^9},
  ExpressionUUID->"6883cb21-b789-464b-b9a9-b066b64c12ad"],
 " da cui attraverso operazioni algebriche si ottiene la seguente equazione:"
}], "Text",
 CellChangeTimes->{{3.932987744235983*^9, 3.932987856264368*^9}, {
   3.932988171282795*^9, 3.9329882070298347`*^9}, {3.932988325166702*^9, 
   3.9329883888018627`*^9}, {3.932988435412943*^9, 3.932988435787962*^9}, {
   3.9329885104622135`*^9, 3.93298853011992*^9}, {3.932988627609396*^9, 
   3.9329887216113853`*^9}, {3.932989031003876*^9, 3.932989038011188*^9}, {
   3.932989316228241*^9, 3.932989323382679*^9}, {3.93298942014509*^9, 
   3.932989454115135*^9}, 
   3.933226688844803*^9},ExpressionUUID->"3edac6c5-962e-d64b-912c-\
61b743ae2e29"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"id", "=", 
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{
     RowBox[{"Denominator", "[", 
      RowBox[{"G", "[", "s", "]"}], "]"}], 
     RowBox[{"Yar", "[", "s", "]"}]}], "]"}], "==", 
   RowBox[{"Expand", "[", 
    RowBox[{
     RowBox[{"Numerator", "[", 
      RowBox[{"G", "[", "s", "]"}], "]"}], 
     RowBox[{"Uar", "[", "s", "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9329886400023556`*^9, 3.932988645526358*^9}, {
  3.932989460449995*^9, 3.932989461452593*^9}, {3.9329895484885883`*^9, 
  3.932989551828703*^9}, {3.932989581855001*^9, 3.932989661293525*^9}, {
  3.932989707887503*^9, 3.9329897451807613`*^9}, {3.932989789823448*^9, 
  3.932989790312969*^9}, {3.9329898498378105`*^9, 3.932989863760044*^9}, {
  3.932990295632822*^9, 3.9329903247433033`*^9}, {3.933046664847359*^9, 
  3.933046703260727*^9}, {3.933052570006025*^9, 3.9330525830235577`*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"452d198e-691f-b14f-9446-e6d826ef12b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"5365", " ", 
      RowBox[{"Yar", "[", "s", "]"}]}], "+", 
     RowBox[{"4422", " ", "s", " ", 
      RowBox[{"Yar", "[", "s", "]"}]}], "+", 
     RowBox[{"2473", " ", 
      SuperscriptBox["s", "2"], " ", 
      RowBox[{"Yar", "[", "s", "]"}]}], "+", 
     RowBox[{"960", " ", 
      SuperscriptBox["s", "3"], " ", 
      RowBox[{"Yar", "[", "s", "]"}]}], "+", 
     RowBox[{"144", " ", 
      SuperscriptBox["s", "4"], " ", 
      RowBox[{"Yar", "[", "s", "]"}]}]}], "}"}], "}"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"432", " ", 
     RowBox[{"Uar", "[", "s", "]"}]}], "}"}], "}"}]}]], "Output",
 CellChangeTimes->{
  3.932989664046879*^9, {3.932989719663412*^9, 3.932989745850533*^9}, 
   3.932989778259149*^9, 3.932989826862709*^9, 3.932989864260931*^9, {
   3.932990299872038*^9, 3.9329903260170765`*^9}, 3.933046645650385*^9, 
   3.93304671127981*^9, 3.9330525845915966`*^9, 3.933137300495587*^9, 
   3.933222693003622*^9, 3.9332267004669895`*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"608042eb-55d7-fd47-bfb7-aeaac94017ad"]
}, Open  ]],

Cell[TextData[{
 "L\[CloseCurlyQuote]equazione \[EGrave] nel dominio della variabile \
complessa ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["s", "TI"], TraditionalForm], "errors" -> {}, "input" -> "s", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c5639e7f-d3e1-e54c-9bbb-8849c3dd09a8"],
 " e va riportata nel dominio del tempo, attraverso \
l\[CloseCurlyQuote]antitrasformata di Laplace. \nIn particolare si sfrutta l\
\[CloseCurlyQuote]estensione del teorema della derivata per la  \
L-Trasformata, che consente di valutare la L-Trasformata della derivata di \
ordine ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["n", "TI"], TraditionalForm], "errors" -> {}, "input" -> "n", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "b1359da1-2099-6147-adc9-d131f4475f66"],
 " di una funzione: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["L", "TI"], 
         RowBox[{"[", 
           RowBox[{
             SuperscriptBox[
              StyleBox["F", "TI"], 
              StyleBox["n", "TI"]], "(", 
             StyleBox["t", "TI"], ")"}], "]"}], "\[LongEqual]", 
         SuperscriptBox[
          StyleBox["s", "TI"], 
          StyleBox["n", "TI"]], 
         StyleBox["F", "TI"], 
         RowBox[{"(", 
           StyleBox["s", "TI"], ")"}], "+", 
         SuperscriptBox[
          StyleBox["s", "TI"], 
          RowBox[{
            StyleBox["n", "TI"], "-", "1"}]], 
         StyleBox["F", "TI"], 
         RowBox[{"(", "0", ")"}], "+", 
         SuperscriptBox[
          StyleBox["s", "TI"], 
          RowBox[{
            StyleBox["n", "TI"], "-", "2"}]], 
         StyleBox["F", "TI"], 
         RowBox[{"(", "0", ")"}], "+", "...", "+", 
         StyleBox["s", "TI"], 
         SuperscriptBox[
          StyleBox["F", "TI"], 
          RowBox[{
            StyleBox["n", "TI"], "-", "2"}]], 
         RowBox[{"(", "0", ")"}], "+", 
         StyleBox["s", "TI"], 
         SuperscriptBox[
          StyleBox["F", "TI"], 
          RowBox[{
            StyleBox["n", "TI"], "-", "1"}]], 
         RowBox[{"(", "0", ")"}]}], TraditionalForm], "errors" -> {}, "input" -> 
     "L[F^{n}(t)]=s^nF(s)+s^{n-1}F(0)+s^{n-2}F(0)+...+sF^{n-2}(0)+sF^{n-1}(0)\
", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "00998b76-ca74-1942-9887-ea7284bfc4e8"],
 ".\nNel caso in oggetto: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SuperscriptBox[
          StyleBox["y", "TI"], "\[Prime]"], "\[LongEqual]", 
         SuperscriptBox[
          StyleBox["L", "TI"], "-1"], 
         RowBox[{"[", 
           RowBox[{
             StyleBox["s", "TI"], 
             StyleBox["Y", "TI"], 
             RowBox[{"(", 
               StyleBox["s", "TI"], ")"}]}], "]"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> "y'=L^{-1}[sY(s)]", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "3249d773-6257-e448-ac78-6e9b417512d0"],
 ", ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SuperscriptBox[
          StyleBox["y", "TI"], "\[Prime]\[Prime]"], "\[LongEqual]", 
         SuperscriptBox[
          StyleBox["L", "TI"], "-1"], 
         RowBox[{"[", 
           RowBox[{
             SuperscriptBox[
              StyleBox["s", "TI"], "2"], 
             StyleBox["Y", "TI"], 
             RowBox[{"(", 
               StyleBox["s", "TI"], ")"}]}], "]"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> "y''=L^{-1}[s^2Y(s)]", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "26d802c5-e0a9-fd47-9a4e-94e658046c97"],
 ", ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SuperscriptBox[
          StyleBox["y", "TI"], "\[Prime]\[Prime]\[Prime]"], "\[LongEqual]", 
         SuperscriptBox[
          StyleBox["L", "TI"], "-1"], 
         RowBox[{"[", 
           RowBox[{
             SuperscriptBox[
              StyleBox["s", "TI"], "3"], 
             StyleBox["Y", "TI"], 
             RowBox[{"(", 
               StyleBox["s", "TI"], ")"}]}], "]"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> "y'''=L^{-1}[s^3Y(s)]", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "b256a198-9021-7f44-a3c3-4d97274e53d9"],
 ", ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SuperscriptBox[
          StyleBox["y", "TI"], "\[Prime]\[Prime]\[Prime]\[Prime]"], 
         "\[LongEqual]", 
         SuperscriptBox[
          StyleBox["L", "TI"], "-1"], 
         RowBox[{"[", 
           RowBox[{
             SuperscriptBox[
              StyleBox["s", "TI"], "4"], 
             StyleBox["Y", "TI"], 
             RowBox[{"(", 
               StyleBox["s", "TI"], ")"}]}], "]"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> "y''''=L^{-1}[s^4Y(s)]", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "05df1673-6eb8-bd4c-b271-ffc13d141a04"],
 ". Per  passare da una rappresentazione Ingresso-Stato-Uscita, ad una \
rappresentazione Ingresso-Uscita, \[EGrave] necessario che le condizioni \
iniziali sulla risposta forzata siano nulle:  ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["y", "TI"], 
         RowBox[{"(", "0", ")"}], "\[LongEqual]", "0", ", ", 
         SuperscriptBox[
          StyleBox["y", "TI"], "\[Prime]"], 
         RowBox[{"(", "0", ")"}], "\[LongEqual]", "0", ", ", 
         SuperscriptBox[
          StyleBox["y", "TI"], "\[Prime]\[Prime]"], 
         RowBox[{"(", "0", ")"}], "\[LongEqual]", "0", ", ", 
         SuperscriptBox[
          StyleBox["y", "TI"], "\[Prime]\[Prime]\[Prime]"], 
         RowBox[{"(", "0", ")"}], "\[LongEqual]", "0"}], TraditionalForm], 
     "errors" -> {}, "input" -> "y(0)=0,\\ y'(0)=0,\\ y''(0)=0,\\ y'''(0)=0", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "415a38e9-8c1a-5d42-b00a-9b2466e815a8"],
 "."
}], "Text",
 CellChangeTimes->{{3.933046830438803*^9, 3.93304690790786*^9}, {
   3.93304700269586*^9, 3.9330471167679005`*^9}, {3.933047150101005*^9, 
   3.9330471557889004`*^9}, {3.933047449496235*^9, 3.933047463731243*^9}, {
   3.9330475024672413`*^9, 3.9330475100912437`*^9}, {3.9330475951205864`*^9, 
   3.933047597228586*^9}, {3.933047627625038*^9, 3.933047731921055*^9}, {
   3.933052803469164*^9, 3.933052957669054*^9}, 3.933053016936964*^9, {
   3.933053145832304*^9, 3.933053181171397*^9}, {3.9330532715280037`*^9, 
   3.933053272564001*^9}, {3.933226711596274*^9, 
   3.933226725637293*^9}},ExpressionUUID->"ceadf918-50be-7d48-a56a-\
cff743c3aacf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"InverseLaplaceTransform", "[", 
    RowBox[{"id", ",", "s", ",", "t"}], "]"}], " ", "/.", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Yar", "[", "s", "]"}], "\[Rule]", 
      RowBox[{"LaplaceTransform", "[", 
       RowBox[{
        RowBox[{"yar", "[", "t", "]"}], ",", "t", ",", "s"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Uar", "[", "s", "]"}], "\[Rule]", 
      RowBox[{"LaplaceTransform", "[", 
       RowBox[{
        RowBox[{"uar", "[", "t", "]"}], ",", "t", ",", "s"}], "]"}]}]}], 
    "}"}]}], " ", "/.", " ", 
  RowBox[{"{", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"yar", "[", "0", "]"}], "\[Rule]", " ", "0"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"yar", "'"}], "[", "0", "]"}], "\[Rule]", " ", "0"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"yar", "''"}], "[", "0", "]"}], "\[Rule]", " ", "0"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"yar", "'''"}], "[", "0", "]"}], "\[Rule]", " ", "0"}], ",", 
    " ", 
    RowBox[{
     RowBox[{
      RowBox[{"yar", "''''"}], "[", "0", "]"}], "\[Rule]", " ", "0"}], ",", 
    " ", 
    RowBox[{
     RowBox[{"uar", "[", "0", "]"}], "\[Rule]", " ", "0"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.933049767962384*^9, 3.9330499633715324`*^9}, {
   3.9330500119710445`*^9, 3.9330500416730423`*^9}, 3.933050114602089*^9, {
   3.933052634580332*^9, 3.933052693062149*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"50f1b35c-1b2f-bd4a-9fb5-df7be697e55b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"5365", " ", 
      RowBox[{"yar", "[", "t", "]"}]}], "+", 
     RowBox[{"4422", " ", 
      RowBox[{
       SuperscriptBox["yar", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"2473", " ", 
      RowBox[{
       SuperscriptBox["yar", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"960", " ", 
      RowBox[{
       SuperscriptBox["yar", 
        TagBox[
         RowBox[{"(", "3", ")"}],
         Derivative],
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"144", " ", 
      RowBox[{
       SuperscriptBox["yar", 
        TagBox[
         RowBox[{"(", "4", ")"}],
         Derivative],
        MultilineFunction->None], "[", "t", "]"}]}]}], "}"}], "}"}], 
  "\[Equal]", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"432", " ", 
     RowBox[{"uar", "[", "t", "]"}]}], "}"}], "}"}]}]], "Output",
 CellChangeTimes->{3.933049971641041*^9, 3.9330500149610424`*^9, 
  3.933050053637043*^9, 3.933050115673099*^9, 3.9330526967501183`*^9, 
  3.93313730506152*^9, 3.933222698138904*^9, 3.933226735528124*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"c0aad82d-29ff-454c-92be-0e7f8e546e73"]
}, Open  ]],

Cell["\<\
L\[CloseCurlyQuote]equazione differenziale costruita, presenta solo l\
\[CloseCurlyQuote]ingresso e l\[CloseCurlyQuote]uscita e ho dunque la \
rappresentazione Ingresso-Uscita del sistema.\
\>", "Text",
 CellChangeTimes->{
  3.933053048308375*^9, {3.9330531886073856`*^9, 3.933053196080456*^9}, {
   3.933053562741923*^9, 3.933053572885929*^9}, {3.9330539511941357`*^9, 
   3.933053964872473*^9}},ExpressionUUID->"e2eb0557-003e-4f4a-8fe6-\
116943ecac18"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EqDiff", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"5365", " ", 
     RowBox[{"yar", "[", "t", "]"}]}], "+", 
    RowBox[{"4422", " ", 
     RowBox[{
      SuperscriptBox["yar", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{"2473", " ", 
     RowBox[{
      SuperscriptBox["yar", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{"960", " ", 
     RowBox[{
      SuperscriptBox["yar", 
       TagBox[
        RowBox[{"(", "3", ")"}],
        Derivative],
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{"144", " ", 
     RowBox[{
      SuperscriptBox["yar", 
       TagBox[
        RowBox[{"(", "4", ")"}],
        Derivative],
       MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", 
   RowBox[{"432", " ", 
    RowBox[{"uar", "[", "t", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9330501197840767`*^9, 3.93305013219309*^9}, {
  3.933052704558084*^9, 3.9330527241526375`*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"06237532-4ab4-6649-a64d-118ee4f97f5b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"5365", " ", 
    RowBox[{"yar", "[", "t", "]"}]}], "+", 
   RowBox[{"4422", " ", 
    RowBox[{
     SuperscriptBox["yar", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{"2473", " ", 
    RowBox[{
     SuperscriptBox["yar", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{"960", " ", 
    RowBox[{
     SuperscriptBox["yar", 
      TagBox[
       RowBox[{"(", "3", ")"}],
       Derivative],
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{"144", " ", 
    RowBox[{
     SuperscriptBox["yar", 
      TagBox[
       RowBox[{"(", "4", ")"}],
       Derivative],
      MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", 
  RowBox[{"432", " ", 
   RowBox[{"uar", "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.933050137679235*^9, 3.933052725948641*^9, 
  3.933137305409489*^9, 3.93322270187142*^9, 3.9332267372331676`*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"feeaebd2-1e5f-6a49-a4cc-d31eb95d2d4b"]
}, Open  ]],

Cell[TextData[{
 "A questo punto risolvo l\[CloseCurlyQuote]equazione differenziale nel \
dominio della variabile complessa ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["s", "TI"], TraditionalForm], "errors" -> {}, "input" -> "s", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "7c49eb01-796e-2648-843d-3399103173ed"]
}], "Text",
 CellChangeTimes->{{3.933048116937256*^9, 3.9330481726302567`*^9}, {
   3.933048220431284*^9, 3.933048224742256*^9}, {3.933048260293898*^9, 
   3.933048293887518*^9}, {3.933048369526487*^9, 3.933048380072201*^9}, {
   3.933048977456297*^9, 3.933049050470417*^9}, {3.933049139205463*^9, 
   3.933049188357498*^9}, {3.933049498444462*^9, 3.933049499750498*^9}, 
   3.9330530452906857`*^9, {3.933053230727644*^9, 3.933053264052004*^9}, {
   3.933053356612314*^9, 3.933053365004364*^9}, {3.933053443163858*^9, 
   3.933053458639313*^9}},ExpressionUUID->"a1d80f20-fe99-614e-a62b-\
2321bd4feaa0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EqDiffs", "=", 
  RowBox[{
   RowBox[{"LaplaceTransform", "[", 
    RowBox[{"EqDiff", ",", "t", ",", "s"}], "]"}], " ", "/.", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"yar", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"InverseLaplaceTransform", "[", 
       RowBox[{
        RowBox[{"Yar", "[", "s", "]"}], ",", "s", ",", "t"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"uar", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"InverseLaplaceTransform", "[", 
       RowBox[{
        RowBox[{"Uar", "[", "s", "]"}], ",", "s", ",", "t"}], "]"}]}]}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.933049505160473*^9, 3.933049567166691*^9}, {
  3.93304962707171*^9, 3.9330497269853153`*^9}, {3.933052730616646*^9, 
  3.9330527528771915`*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"a4b5b708-b469-7a41-9d76-9995d7f51eb0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"5365", " ", 
    RowBox[{"Yar", "[", "s", "]"}]}], "+", 
   RowBox[{"4422", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"yar", "[", "0", "]"}]}], "+", 
      RowBox[{"s", " ", 
       RowBox[{"Yar", "[", "s", "]"}]}]}], ")"}]}], "+", 
   RowBox[{"2473", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "s"}], " ", 
       RowBox[{"yar", "[", "0", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["s", "2"], " ", 
       RowBox[{"Yar", "[", "s", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["yar", "\[Prime]",
        MultilineFunction->None], "[", "0", "]"}]}], ")"}]}], "+", 
   RowBox[{"960", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["s", "2"]}], " ", 
       RowBox[{"yar", "[", "0", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["s", "3"], " ", 
       RowBox[{"Yar", "[", "s", "]"}]}], "-", 
      RowBox[{"s", " ", 
       RowBox[{
        SuperscriptBox["yar", "\[Prime]",
         MultilineFunction->None], "[", "0", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["yar", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "0", "]"}]}], ")"}]}], "+", 
   RowBox[{"144", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["s", "3"]}], " ", 
       RowBox[{"yar", "[", "0", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["s", "4"], " ", 
       RowBox[{"Yar", "[", "s", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["s", "2"], " ", 
       RowBox[{
        SuperscriptBox["yar", "\[Prime]",
         MultilineFunction->None], "[", "0", "]"}]}], "-", 
      RowBox[{"s", " ", 
       RowBox[{
        SuperscriptBox["yar", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "0", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["yar", 
        TagBox[
         RowBox[{"(", "3", ")"}],
         Derivative],
        MultilineFunction->None], "[", "0", "]"}]}], ")"}]}]}], "\[Equal]", 
  RowBox[{"432", " ", 
   RowBox[{"Uar", "[", "s", "]"}]}]}]], "Output",
 CellChangeTimes->{3.933049588872692*^9, 3.933049737782381*^9, 
  3.933050065472042*^9, 3.93305014981522*^9, 3.933052755813211*^9, 
  3.933137308833653*^9, 3.933222706076739*^9, 3.933226761575281*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"bae8e69f-fe52-c34d-a8ac-4510a95fa6f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Risposta", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{"EqDiffs", ",", 
        RowBox[{"Yar", "[", "s", "]"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", 
    RowBox[{"Uar", "[", "s", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9330535877837543`*^9, 3.9330536340070477`*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"6e3f78f5-0789-b546-bc18-c5e7076e9837"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"432", " ", 
    RowBox[{"Uar", "[", "s", "]"}]}], 
   RowBox[{"5365", "+", 
    RowBox[{"4422", " ", "s"}], "+", 
    RowBox[{"2473", " ", 
     SuperscriptBox["s", "2"]}], "+", 
    RowBox[{"960", " ", 
     SuperscriptBox["s", "3"]}], "+", 
    RowBox[{"144", " ", 
     SuperscriptBox["s", "4"]}]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"4422", " ", 
     RowBox[{"yar", "[", "0", "]"}]}], "+", 
    RowBox[{"2473", " ", "s", " ", 
     RowBox[{"yar", "[", "0", "]"}]}], "+", 
    RowBox[{"960", " ", 
     SuperscriptBox["s", "2"], " ", 
     RowBox[{"yar", "[", "0", "]"}]}], "+", 
    RowBox[{"144", " ", 
     SuperscriptBox["s", "3"], " ", 
     RowBox[{"yar", "[", "0", "]"}]}], "+", 
    RowBox[{"2473", " ", 
     RowBox[{
      SuperscriptBox["yar", "\[Prime]",
       MultilineFunction->None], "[", "0", "]"}]}], "+", 
    RowBox[{"960", " ", "s", " ", 
     RowBox[{
      SuperscriptBox["yar", "\[Prime]",
       MultilineFunction->None], "[", "0", "]"}]}], "+", 
    RowBox[{"144", " ", 
     SuperscriptBox["s", "2"], " ", 
     RowBox[{
      SuperscriptBox["yar", "\[Prime]",
       MultilineFunction->None], "[", "0", "]"}]}], "+", 
    RowBox[{"960", " ", 
     RowBox[{
      SuperscriptBox["yar", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "0", "]"}]}], "+", 
    RowBox[{"144", " ", "s", " ", 
     RowBox[{
      SuperscriptBox["yar", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "0", "]"}]}], "+", 
    RowBox[{"144", " ", 
     RowBox[{
      SuperscriptBox["yar", 
       TagBox[
        RowBox[{"(", "3", ")"}],
        Derivative],
       MultilineFunction->None], "[", "0", "]"}]}]}], 
   RowBox[{"5365", "+", 
    RowBox[{"4422", " ", "s"}], "+", 
    RowBox[{"2473", " ", 
     SuperscriptBox["s", "2"]}], "+", 
    RowBox[{"960", " ", 
     SuperscriptBox["s", "3"]}], "+", 
    RowBox[{"144", " ", 
     SuperscriptBox["s", "4"]}]}]]}]], "Output",
 CellChangeTimes->{3.9330536352950883`*^9, 3.933222707176939*^9, 
  3.9332267636876354`*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"c3dd1cf1-bfa0-af4d-bd03-d48dd8f4d13e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Libera", "=", 
  RowBox[{
   RowBox[{"Collect", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{"EqDiffs", ",", 
         RowBox[{"Yar", "[", "s", "]"}]}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"Uar", "[", "s", "]"}]}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.933053666990202*^9, 3.9330537100567665`*^9}, {
   3.9330537529296856`*^9, 3.9330537753679886`*^9}, {3.933054491131744*^9, 
   3.933054495367735*^9}, {3.9330548627738037`*^9, 3.933054865600244*^9}, 
   3.933143466620775*^9},
 CellLabel->
  "In[153]:=",ExpressionUUID->"3a1f1288-4a81-174f-90fd-e017fbbd7e87"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"4422", " ", 
    RowBox[{"yar", "[", "0", "]"}]}], "+", 
   RowBox[{"2473", " ", "s", " ", 
    RowBox[{"yar", "[", "0", "]"}]}], "+", 
   RowBox[{"960", " ", 
    SuperscriptBox["s", "2"], " ", 
    RowBox[{"yar", "[", "0", "]"}]}], "+", 
   RowBox[{"144", " ", 
    SuperscriptBox["s", "3"], " ", 
    RowBox[{"yar", "[", "0", "]"}]}], "+", 
   RowBox[{"2473", " ", 
    RowBox[{
     SuperscriptBox["yar", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}]}], "+", 
   RowBox[{"960", " ", "s", " ", 
    RowBox[{
     SuperscriptBox["yar", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}]}], "+", 
   RowBox[{"144", " ", 
    SuperscriptBox["s", "2"], " ", 
    RowBox[{
     SuperscriptBox["yar", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}]}], "+", 
   RowBox[{"960", " ", 
    RowBox[{
     SuperscriptBox["yar", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "0", "]"}]}], "+", 
   RowBox[{"144", " ", "s", " ", 
    RowBox[{
     SuperscriptBox["yar", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "0", "]"}]}], "+", 
   RowBox[{"144", " ", 
    RowBox[{
     SuperscriptBox["yar", 
      TagBox[
       RowBox[{"(", "3", ")"}],
       Derivative],
      MultilineFunction->None], "[", "0", "]"}]}]}], 
  RowBox[{"5365", "+", 
   RowBox[{"4422", " ", "s"}], "+", 
   RowBox[{"2473", " ", 
    SuperscriptBox["s", "2"]}], "+", 
   RowBox[{"960", " ", 
    SuperscriptBox["s", "3"]}], "+", 
   RowBox[{"144", " ", 
    SuperscriptBox["s", "4"]}]}]]], "Output",
 CellChangeTimes->{3.933053711400816*^9, 3.933053779877487*^9, 
  3.933054495939739*^9, 3.933054866004289*^9, 3.933143468646551*^9, 
  3.933222708905546*^9, 3.9332267667969303`*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"3b6ed7d6-9a3f-a442-8318-4b89088bb345"]
}, Open  ]],

Cell[TextData[{
 "Per calcolare la risposta libera mi occorrono altre quattro condizioni \
iniziali sull\[CloseCurlyQuote]uscita:  ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["y", "TI"], 
         RowBox[{"(", "0", ")"}], "\[LongEqual]", 
         StyleBox["C", "TI"], 
         SubscriptBox[
          StyleBox["x", "TI"], "0"], ", ", 
         SuperscriptBox[
          StyleBox["y", "TI"], "\[Prime]"], 
         RowBox[{"(", "0", ")"}], "\[LongEqual]", 
         StyleBox["C", "TI"], 
         StyleBox["A", "TI"], 
         SubscriptBox[
          StyleBox["x", "TI"], "0"], ", ", 
         SuperscriptBox[
          StyleBox["y", "TI"], "\[Prime]\[Prime]"], 
         RowBox[{"(", "0", ")"}], "\[LongEqual]", 
         StyleBox["C", "TI"], 
         SuperscriptBox[
          StyleBox["A", "TI"], "2"], 
         SubscriptBox[
          StyleBox["x", "TI"], "0"], ", ", 
         SuperscriptBox[
          StyleBox["y", "TI"], "\[Prime]\[Prime]\[Prime]"], 
         RowBox[{"(", "0", ")"}], "\[LongEqual]", 
         StyleBox["C", "TI"], 
         SuperscriptBox[
          StyleBox["A", "TI"], "3"], 
         SubscriptBox[
          StyleBox["x", "TI"], "0"]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "y(0)=Cx_0,\\ y'(0)=CAx_0,\\ y''(0)=CA^2x_0,\\ y'''(0)=CA^3x_0", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f187b776-bf99-7542-a437-58030e7e0bbc"],
 "."
}], "Text",
 CellChangeTimes->{
  3.9330533601043587`*^9, 3.933053541733188*^9, 3.9330538069176025`*^9, {
   3.933054029161525*^9, 3.9330540355933037`*^9}, {3.9330541927057114`*^9, 
   3.933054202947953*^9}, {3.9336506263897495`*^9, 
   3.9336506275147457`*^9}},ExpressionUUID->"44967ddf-0206-dc4c-84ac-\
85f96168812a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"yfar", "[", "0", "]"}], "=", 
  RowBox[{"C1", ".", 
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["x", "TI"], 
        RowBox[{"0", 
          StyleBox["a", "TI"], 
          StyleBox["r", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "x_{0ar}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"]}]}]], "Input",
 CellChangeTimes->{{3.9330540790412903`*^9, 3.933054101986038*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"6813beb8-4cc9-5a4a-ada2-b455519af950"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "3", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.9330541082819004`*^9, 3.933222711466078*^9, 
  3.9332267709027042`*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"9850763b-696b-b44b-b782-cd8b1aa3fcc9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"yfar", "'"}], "[", "0", "]"}], "=", 
  RowBox[{"C1", ".", "A", ".", 
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["x", "TI"], 
        RowBox[{"0", 
          StyleBox["a", "TI"], 
          StyleBox["r", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "x_{0ar}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"]}]}]], "Input",
 CellChangeTimes->{{3.9330541131249733`*^9, 3.933054123141943*^9}, {
  3.933054334876781*^9, 3.93305433659349*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"56f9f8a9-f4a9-1d46-8697-8935a207a0d6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"-", "6"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.933054125811354*^9, 3.933054338073492*^9, 
  3.933222713916947*^9, 3.9332267731846867`*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"74d1755d-d688-7e4f-9fa5-2cfaf77ef1a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"yfar", "''"}], "[", "0", "]"}], "=", 
  RowBox[{"C1", ".", "A", ".", "A", ".", 
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["x", "TI"], 
        RowBox[{"0", 
          StyleBox["a", "TI"], 
          StyleBox["r", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "x_{0ar}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"]}]}]], "Input",
 CellChangeTimes->{{3.9330541320726986`*^9, 3.93305413768466*^9}, {
  3.9330543412455654`*^9, 3.933054347529515*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"f4ab68ae-688a-6043-bf6e-640fee7551ab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "6", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.933054139196691*^9, 3.933054358725485*^9, 
  3.93322271549827*^9, 3.9332267751378117`*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"9aca1e19-2745-9541-96d3-c8a479983340"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"yfar", "'''"}], "[", "0", "]"}], "=", 
  RowBox[{"C1", ".", "A", ".", "A", ".", "A", ".", 
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["x", "TI"], 
        RowBox[{"0", 
          StyleBox["a", "TI"], 
          StyleBox["r", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "x_{0ar}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"]}]}]], "Input",
 CellChangeTimes->{{3.933054141922484*^9, 3.9330541498783073`*^9}, {
  3.933054351709482*^9, 3.9330543542014904`*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"7cf80ba2-c170-b14d-8ac1-8cf35f526be7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "18", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.933054151430338*^9, 3.933054355225487*^9, 
  3.933222717596081*^9, 3.9332267777598248`*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"71afa804-ca51-bf40-bfd6-7fd2efe04860"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Yliberas", " ", "[", "s_", "]"}], ":=", "Libera"}]], "Input",
 CellChangeTimes->{{3.933054218031904*^9, 3.93305433218078*^9}, {
   3.933054363497446*^9, 3.933054372246704*^9}, {3.933054607894346*^9, 
   3.933054622584591*^9}, {3.933054660664921*^9, 3.9330546760365314`*^9}, {
   3.9330548367725353`*^9, 3.933054839032017*^9}, {3.933054888650414*^9, 
   3.933054891307133*^9}, 3.933143474785562*^9, {3.933651126652622*^9, 
   3.933651128793337*^9}},ExpressionUUID->"74347a6a-e8d5-ab4a-afff-\
81cbd2f5f5c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Yliberas", "[", "s", "]"}]], "Input",
 CellChangeTimes->{{3.933054380458742*^9, 3.933054383502693*^9}, 
   3.9330548451990376`*^9},
 CellLabel->
  "In[159]:=",ExpressionUUID->"a79b6bda-f5d0-cf4c-891b-b0816583ede0"],

Cell[BoxData[
 FractionBox[
  RowBox[{"6780", "+", 
   RowBox[{"2523", " ", "s"}], "+", 
   RowBox[{"2016", " ", 
    SuperscriptBox["s", "2"]}], "+", 
   RowBox[{"432", " ", 
    SuperscriptBox["s", "3"]}]}], 
  RowBox[{"5365", "+", 
   RowBox[{"4422", " ", "s"}], "+", 
   RowBox[{"2473", " ", 
    SuperscriptBox["s", "2"]}], "+", 
   RowBox[{"960", " ", 
    SuperscriptBox["s", "3"]}], "+", 
   RowBox[{"144", " ", 
    SuperscriptBox["s", "4"]}]}]]], "Output",
 CellChangeTimes->{
  3.933054384414736*^9, 3.933054503153303*^9, 3.933054625962334*^9, 
   3.933054679901455*^9, {3.933054845906477*^9, 3.933054895119339*^9}, 
   3.9331434779257107`*^9, 3.933222722094984*^9, 3.933226783327757*^9},
 CellLabel->
  "Out[159]=",ExpressionUUID->"893c066d-949c-f743-9210-38873e2aaebc"]
}, Open  ]],

Cell[TextData[{
 "Riporto nel dominio del tempo la risposta libera nel dominio della \
variabile complessa ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["s", "TI"], TraditionalForm], "errors" -> {}, "input" -> "s", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "3e8bbbf9-c442-594d-a134-cf21b2b12384"],
 " tramite l\[CloseCurlyQuote]antitrasformata di Laplace"
}], "Text",
 CellChangeTimes->{{3.93322680128734*^9, 
  3.933226829659834*^9}},ExpressionUUID->"ffa2bc96-7c62-c540-b3e1-\
d946eb9ed1b1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ylibera", "[", "t_", "]"}], ":=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"InverseLaplaceTransform", "[", 
    RowBox[{
     RowBox[{"Yliberas", "[", "s", "]"}], ",", "s", ",", "t"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9330543945226936`*^9, 3.933054443241253*^9}, 
   3.933054849929268*^9},
 CellLabel->
  "In[160]:=",ExpressionUUID->"84cf5e27-de30-3047-862c-e6f8f74813d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ylibera", "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.9330544276728535`*^9, 3.933054429628876*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"a3625993-6bad-ff4b-a4da-9f9975598172"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "3"}], " ", "t"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"5162912", " ", 
      RowBox[{"Cos", "[", 
       FractionBox["t", "4"], "]"}]}], "+", 
     RowBox[{"24377216", " ", 
      RowBox[{"Sin", "[", 
       FractionBox["t", "4"], "]"}]}], "-", 
     RowBox[{"9", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"8", " ", "t"}], "/", "3"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2958", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "+", 
        RowBox[{"49279", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
  "5136290"]], "Output",
 CellChangeTimes->{
  3.933054431224905*^9, 3.933054509285303*^9, 3.933054629647827*^9, 
   3.933054683844873*^9, {3.933054856773011*^9, 3.933054899972931*^9}, 
   3.933222726479181*^9, 3.933226788749172*^9},
 CellLabel->
  "Out[161]=",ExpressionUUID->"013aa768-f02a-8d45-82aa-7f7b02750c79"]
}, Open  ]],

Cell["\<\
Verifico con un confronto tra rappresentazione Ingresso-Stato-Uscita e \
rappresentazione Ingresso-Uscita\
\>", "Text",
 CellChangeTimes->{{3.933054913117178*^9, 
  3.933054946323187*^9}},ExpressionUUID->"15a06898-aae3-ca47-bc42-\
1ae17807e05a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"YISU", "[", "t_", "]"}], ":=", " ", 
  RowBox[{"InverseLaplaceTransform", "[", 
   RowBox[{
    RowBox[{"C1", ".", 
     RowBox[{"Inverse", "[", 
      RowBox[{
       RowBox[{"s", " ", 
        RowBox[{"IdentityMatrix", "[", "4", "]"}]}], "-", "A"}], "]"}], ".", 
     TemplateBox[<|"boxes" -> FormBox[
         SubscriptBox[
          StyleBox["x", "TI"], 
          RowBox[{"0", 
            StyleBox["a", "TI"], 
            StyleBox["r", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
       "x_{0ar}", "state" -> "Boxes"|>,
      "TeXAssistantTemplate"]}], ",", "s", ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.933054951614179*^9, 3.933055004611311*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"cfc043e0-c11d-b747-9211-599d4565ecb0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"YISU", "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.933055010809597*^9, 3.933055013449594*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"5a878711-7cf6-734b-afe3-79bcd9bd597f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{"24", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "-", 
          FractionBox["\[ImaginaryI]", "4"]}], ")"}], " ", "t"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"161341", "+", 
          RowBox[{"761788", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"161341", "-", 
           RowBox[{"761788", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "t"}], "2"]]}]}], ")"}]}], 
     "2568145"], "-", 
    FractionBox[
     RowBox[{"27", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "3"]}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], " ", "t"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2958", "+", 
          RowBox[{"49279", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2958", "-", 
           RowBox[{"49279", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", "t"}]]}]}], ")"}]}], 
     "10272580"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.933055014709612*^9, 3.9332268365830536`*^9},
 CellLabel->
  "Out[163]=",ExpressionUUID->"1fb63d28-46ee-af43-990b-d498ab8541d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Ylibera", "[", "t", "]"}], "-", 
   RowBox[{"YISU", "[", "t", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9330550213535767`*^9, 3.933055033285183*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"415e8f18-b8f0-7f44-8fc1-e7a40b629ee9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "0", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.933055034061218*^9, 3.9332268402049713`*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"da68a422-b471-1149-9b14-0cbd7fa4da09"]
}, Open  ]],

Cell["Come volevasi verificare.", "Text",
 CellChangeTimes->{{3.933226844384302*^9, 
  3.933226851495037*^9}},ExpressionUUID->"cc333743-83c9-ab4a-a10c-\
b1c42232c933"]
}, Open  ]],

Cell[CellGroupData[{

Cell["7.2 Risposta alla rampa unitaria", "Subsection",
 CellChangeTimes->{{3.9331438536108856`*^9, 
  3.933143860021549*^9}},ExpressionUUID->"69b181fa-593e-7c4e-a4f5-\
180f90999fd8"],

Cell[TextData[{
 "Procedo adesso a calcolare la risposta alla rampa unitaria, segnale \
polinomiale che pu\[OGrave] essere interpretato come velocit\[AGrave] di \
variazione del segnale ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["u", "TI"], "(", 
         StyleBox["t", "TI"], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "u(t)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2a601341-6a3c-4346-baf3-29d402e292d7"],
 ". La rampa unitaria \[EGrave] definita tramite notazione piecewise: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["t", "TI"], "\[CenterDot]", "1", 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[LongEqual]"}], TraditionalForm], 
     "errors" -> {}, "input" -> "t\\cdot1(t)=", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "3aa719f9-dc2c-554f-99b3-a0085b9423ce"],
 Cell[BoxData[
  FormBox[
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {"t", 
          TemplateBox[<|"boxes" -> FormBox[
              RowBox[{
                StyleBox["t", "TI"], "\[GreaterEqual]", "0"}], 
              TraditionalForm], "errors" -> {}, "input" -> "t\\ge 0", "state" -> 
            "Boxes"|>,
           "TeXAssistantTemplate"]},
         {"0", 
          RowBox[{"t", "<", "0"}]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True], TraditionalForm]],ExpressionUUID->
  "b69217b8-7560-7646-a1e1-a10a73cd1e61"],
 ". La L-Trasformata della rampa unitaria pari si ottiene a partire da ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["L", "TI"], 
         RowBox[{"[", 
           RowBox[{
             FractionBox[
              SuperscriptBox[
               StyleBox["t", "TI"], 
               RowBox[{
                 StyleBox["n", "TI"], "-", "1"}]], 
              RowBox[{
                RowBox[{"(", 
                  RowBox[{
                    StyleBox["n", "TI"], "-", "1"}], ")"}], "!"}]], 
             SuperscriptBox[
              StyleBox["e", "TI"], 
              RowBox[{
                StyleBox["a", "TI"], 
                StyleBox["t", "TI"]}]], "1", 
             RowBox[{"(", 
               StyleBox["t", "TI"], ")"}]}], "]"}], "\[LongEqual]", 
         FractionBox["1", 
          SuperscriptBox[
           RowBox[{"(", 
             RowBox[{
               StyleBox["s", "TI"], "-", 
               StyleBox["a", "TI"]}], ")"}], 
           StyleBox["n", "TI"]]]}], TraditionalForm], "errors" -> {}, "input" -> 
     "L[{t^{n-1}\\over (n-1)!}e^{at}1(t)]={1\\over (s-a)^n}", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4fcf791f-9915-a24e-b39f-e5a3c2d7ad46"],
 "considerando ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["a", "TI"], "\[LongEqual]", "0"}], TraditionalForm], 
     "errors" -> {}, "input" -> "a=0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "12c667ea-67d2-0747-a9f7-72cf420bbfe4"],
 " e ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["n", "TI"], "\[LongEqual]", "2"}], TraditionalForm], 
     "errors" -> {}, "input" -> "n=2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "a4331d93-105e-7e4e-a031-19698aab16ec"],
 " perci\[OGrave] ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["L", "TI"], 
         RowBox[{"[", 
           RowBox[{
             StyleBox["t", "TI"], "\[CenterDot]", "1", 
             RowBox[{"(", 
               StyleBox["t", "TI"], ")"}]}], "]"}], "\[LongEqual]", 
         FractionBox["1", 
          SuperscriptBox[
           StyleBox["s", "TI"], "2"]]}], TraditionalForm], "errors" -> {}, 
     "input" -> "L[t\\cdot 1(t)]={1\\over s^2}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "16af3877-b8b4-6040-8136-343a0eaad01e"],
 ". "
}], "Text",
 CellChangeTimes->{
  3.933075505182501*^9, {3.933075732178505*^9, 3.933075742276167*^9}, {
   3.9330758821137943`*^9, 3.933075898316679*^9}, {3.9330760454508915`*^9, 
   3.9330760986493416`*^9}, {3.9330761444312534`*^9, 3.933076147346876*^9}, {
   3.9330762325435066`*^9, 3.9330762330783577`*^9}, {3.933076518532412*^9, 
   3.9330765325353603`*^9}, {3.933076720260237*^9, 3.93307674651071*^9}, {
   3.933134925981159*^9, 3.933134942632655*^9}, {3.9331356421985855`*^9, 
   3.933135646315399*^9}, {3.933135701881308*^9, 3.9331357035932503`*^9}, {
   3.933135938879095*^9, 3.933135949423401*^9}, {3.9331360792246914`*^9, 
   3.933136080318039*^9}, {3.9331363202169895`*^9, 3.9331363921608944`*^9}, {
   3.93313682460458*^9, 3.933136928542294*^9}, 
   3.933140336856478*^9},ExpressionUUID->"83b2cefe-bf7e-5a45-b3d6-\
bc607e897f13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["U", "TI"], 
        RowBox[{
          StyleBox["r", "TI"], 
          StyleBox["a", "TI"], 
          StyleBox["m", "TI"], 
          StyleBox["p", "TI"], 
          StyleBox["a", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "U_{rampa}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "[", "s", "]"}], "=", 
  RowBox[{"LaplaceTransform", "[", 
   RowBox[{
    RowBox[{"t", " ", 
     RowBox[{"UnitStep", "[", "t", "]"}]}], ",", "t", ",", "s"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9331369406432877`*^9, 3.933136973537672*^9}, {
   3.933137025262467*^9, 3.933137040457272*^9}, 3.933137812271274*^9},
 CellLabel->
  "In[165]:=",ExpressionUUID->"464ffb40-12bd-1f48-a033-90a93b5a0579"],

Cell[BoxData[
 FractionBox["1", 
  SuperscriptBox["s", "2"]]], "Output",
 CellChangeTimes->{3.933137827461437*^9, 3.933222682659895*^9, 
  3.933226876076208*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"413199cc-2c85-4e48-832f-3d6ec1afd052"]
}, Open  ]],

Cell["\<\
Calcolo la risposta forzata alla rampa unitaria, partendo dal modello ARMA \
ricavatomi\
\>", "Text",
 CellChangeTimes->{{3.933140837582913*^9, 3.933140851218767*^9}, {
   3.9331408903714905`*^9, 3.9331408935409374`*^9}, {3.9331410668037624`*^9, 
   3.933141083524259*^9}, {3.933141140940857*^9, 3.933141152829777*^9}, 
   3.933226904903471*^9},ExpressionUUID->"b821c8df-19ba-b943-b55c-\
7f35b86dc794"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RispostaArmas", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{"EqDiffs", ",", 
      RowBox[{"Yar", "[", "s", "]"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", "/.", " ", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"yar", "[", "0", "]"}], "\[Rule]", "3"}], ",", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{"yar", "'"}], "[", "0", "]"}], "\[Rule]", 
      RowBox[{"-", "6"}]}], ",", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{"yar", "''"}], "[", "0", "]"}], "\[Rule]", "6"}], ",", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{"yar", "'''"}], "[", "0", "]"}], "\[Rule]", "18"}]}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.93313728447341*^9, 3.9331372930434055`*^9}, {
   3.933137331435375*^9, 3.93313736620587*^9}, {3.933137587943838*^9, 
   3.933137588359345*^9}, {3.933140900218706*^9, 3.933140903206917*^9}, {
   3.9331409421441097`*^9, 3.933140990748041*^9}, {3.9331410277486687`*^9, 
   3.9331410309036007`*^9}, {3.93314117794022*^9, 3.933141202409132*^9}, 
   3.933141257985972*^9},
 CellLabel->
  "In[166]:=",ExpressionUUID->"f1b23cfa-3b1b-ae4f-92e2-03900a9b9aaa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Yar", "[", "s", "]"}], "\[Rule]", 
  FractionBox[
   RowBox[{"6780", "+", 
    RowBox[{"2523", " ", "s"}], "+", 
    RowBox[{"2016", " ", 
     SuperscriptBox["s", "2"]}], "+", 
    RowBox[{"432", " ", 
     SuperscriptBox["s", "3"]}], "+", 
    RowBox[{"432", " ", 
     RowBox[{"Uar", "[", "s", "]"}]}]}], 
   RowBox[{"5365", "+", 
    RowBox[{"4422", " ", "s"}], "+", 
    RowBox[{"2473", " ", 
     SuperscriptBox["s", "2"]}], "+", 
    RowBox[{"960", " ", 
     SuperscriptBox["s", "3"]}], "+", 
    RowBox[{"144", " ", 
     SuperscriptBox["s", "4"]}]}]]}]], "Output",
 CellChangeTimes->{
  3.933137367432455*^9, 3.933137589923659*^9, 3.933140926744783*^9, {
   3.933140963395897*^9, 3.93314099175796*^9}, 3.933141031707348*^9, 
   3.9331412602937393`*^9, 3.9332227309949684`*^9, 3.933226878243788*^9},
 CellLabel->
  "Out[166]=",ExpressionUUID->"80a296a0-9e60-a44d-b7e1-860504ceb7b9"]
}, Open  ]],

Cell["\<\
Calcolo la risposta forzata alla rampa unitaria nel dominio del tempo tramite \
l\[CloseCurlyQuote]antitrasformata di Laplace\
\>", "Text",
 CellChangeTimes->{{3.933141598275442*^9, 
  3.9331416251628056`*^9}},ExpressionUUID->"c845cafa-1227-ab4c-9293-\
8f37844cd4bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RispostaArmat", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ComplexExpand", "[", 
    RowBox[{"InverseLaplaceTransform", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"6780", "+", 
         RowBox[{"2523", " ", "s"}], "+", 
         RowBox[{"2016", " ", 
          SuperscriptBox["s", "2"]}], "+", 
         RowBox[{"432", " ", 
          SuperscriptBox["s", "3"]}], "+", 
         RowBox[{"432", " ", 
          RowBox[{"Uar", "[", "s", "]"}]}]}], 
        RowBox[{"5365", "+", 
         RowBox[{"4422", " ", "s"}], "+", 
         RowBox[{"2473", " ", 
          SuperscriptBox["s", "2"]}], "+", 
         RowBox[{"960", " ", 
          SuperscriptBox["s", "3"]}], "+", 
         RowBox[{"144", " ", 
          SuperscriptBox["s", "4"]}]}]], " ", "/.", " ", 
       RowBox[{
        RowBox[{"Uar", "[", "s", "]"}], " ", "\[Rule]", " ", 
        FractionBox["1", 
         SuperscriptBox["s", "2"]]}]}], ",", "s", ",", "t"}], "]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.933137694025284*^9, 3.933137723377274*^9}, {
  3.933137802916002*^9, 3.9331379387668896`*^9}, {3.933140969541474*^9, 
  3.933141023769533*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"561da7e8-9f19-1545-8742-b6a17d442b28"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"147925152", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4422"}], "+", 
        RowBox[{"5365", " ", "t"}]}], ")"}]}], "+", 
     RowBox[{"43808", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", "t"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"686000633", " ", 
         RowBox[{"Cos", "[", 
          FractionBox["t", "4"], "]"}]}], "+", 
        RowBox[{"3228997196", " ", 
         RowBox[{"Sin", "[", 
          FractionBox["t", "4"], "]"}]}]}], ")"}]}], "+", 
     RowBox[{"37845", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "t"}], "/", "3"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4481634", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "-", 
        RowBox[{"67112023", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
  "29567798147050"]], "Output",
 CellChangeTimes->{
  3.933137734231093*^9, 3.933137885542158*^9, {3.933137928137916*^9, 
   3.933137941224247*^9}, {3.933140993531196*^9, 3.9331410335576935`*^9}, 
   3.933222734421289*^9, 3.933226882043991*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"03cfe279-4d41-c74a-99df-a4371a3e3139"]
}, Open  ]],

Cell["\<\
Scompongo la risposta tramite la funzione Apart in risposta a regime e \
risposta transitoria\
\>", "Text",
 CellChangeTimes->{{3.9331412767599373`*^9, 3.933141278274845*^9}, {
  3.933141316012142*^9, 3.933141331615919*^9}, {3.9331414037567425`*^9, 
  3.9331414091360683`*^9}, {3.9331415909684296`*^9, 3.9331415949307404`*^9}, {
  3.933142983246504*^9, 
  3.9331429984751854`*^9}},ExpressionUUID->"19d4e6a4-4287-fc48-93c4-\
13b1f098400e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RispostaArma", "=", 
  RowBox[{"Apart", "[", "RispostaArmat", "]"}]}]], "Input",
 CellChangeTimes->{{3.933137955413519*^9, 3.933137964675101*^9}, {
  3.9331410367030907`*^9, 3.933141037916662*^9}, {3.933143057637214*^9, 
  3.9331430620266647`*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"b2c4213c-17cd-7c47-8fe6-2820d1c904fd"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"432", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "4422"}], "+", 
      RowBox[{"5365", " ", "t"}]}], ")"}]}], "28783225"], "+", 
  FractionBox[
   RowBox[{"48", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "3"}], " ", "t"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"686000633", " ", 
       RowBox[{"Cos", "[", 
        FractionBox["t", "4"], "]"}]}], "+", 
      RowBox[{"3228997196", " ", 
       RowBox[{"Sin", "[", 
        FractionBox["t", "4"], "]"}]}]}], ")"}]}], "10799049725"], "+", 
  FractionBox[
   RowBox[{"27", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "t"}], "/", "3"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4481634", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "t"}], "]"}]}], "-", 
      RowBox[{"67112023", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}]}], 
   "7031581010"]}]], "Output",
 CellChangeTimes->{3.933137965317923*^9, 3.9331410388223*^9, 
  3.9331430654768734`*^9, 3.933222736041937*^9, 3.933226884168747*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"25a50dc1-5909-5944-8da1-9f4816a1dc6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RisRegimeRampa", "=", 
  RowBox[{"RispostaArma", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.933143006829462*^9, 3.9331430164480553`*^9}, {
  3.933143068190644*^9, 3.933143071609953*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"f82c1a17-9cbe-ce4b-a02e-656ba79b3b1c"],

Cell[BoxData[
 FractionBox[
  RowBox[{"432", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "4422"}], "+", 
     RowBox[{"5365", " ", "t"}]}], ")"}]}], "28783225"]], "Output",
 CellChangeTimes->{3.933143073592943*^9, 3.933222738479002*^9, 
  3.933226886203329*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"7c2bf3d0-26f5-1c4b-9006-4a13c9d7fc67"]
}, Open  ]],

Cell["\<\
La rispsota a regime \[EGrave] inoltre la componente legata algebricamente \
all\[CloseCurlyQuote]ingresso\
\>", "Text",
 CellChangeTimes->{{3.933143214507702*^9, 3.933143233968717*^9}, {
  3.933226935402424*^9, 
  3.9332269381579075`*^9}},ExpressionUUID->"6f781760-ede7-d74f-af69-\
4f9f3bac59b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RisTransitoriaRampa", "=", 
  RowBox[{"RispostaArma", "-", "RisRegimeRampa"}]}]], "Input",
 CellChangeTimes->{{3.9331431440357304`*^9, 3.933143156422945*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"2807e9e6-0218-5946-92fc-52fa924c1887"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"48", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "3"}], " ", "t"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"686000633", " ", 
       RowBox[{"Cos", "[", 
        FractionBox["t", "4"], "]"}]}], "+", 
      RowBox[{"3228997196", " ", 
       RowBox[{"Sin", "[", 
        FractionBox["t", "4"], "]"}]}]}], ")"}]}], "10799049725"], "+", 
  FractionBox[
   RowBox[{"27", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "t"}], "/", "3"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4481634", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "t"}], "]"}]}], "-", 
      RowBox[{"67112023", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}]}], 
   "7031581010"]}]], "Output",
 CellChangeTimes->{3.933143158781475*^9, 3.933222740698536*^9, 
  3.933226888322502*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"a1d9f5e3-0a81-394c-a4ef-4fdc498b4224"]
}, Open  ]],

Cell["\<\
Come verifica, procedo a calcolare la risposta alla rampa sfruttando la \
scomposizione in fratti semplici e la formula elementare di Heaviside\
\>", "Text",
 CellChangeTimes->{{3.9331403449791374`*^9, 
  3.9331403512224636`*^9}},ExpressionUUID->"8f5fb008-22e9-8c48-9808-\
7006841fe123"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["Y", "TI"], 
        RowBox[{
          StyleBox["r", "TI"], 
          StyleBox["a", "TI"], 
          StyleBox["m", "TI"], 
          StyleBox["p", "TI"], 
          StyleBox["a", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "Y_{rampa}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "[", "s_", "]"}], ":=", 
  RowBox[{
   RowBox[{"G", "[", "s", "]"}], 
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["U", "TI"], 
         RowBox[{
           StyleBox["r", "TI"], 
           StyleBox["a", "TI"], 
           StyleBox["m", "TI"], 
           StyleBox["p", "TI"], 
           StyleBox["a", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
      "U_{rampa}", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], "[", "s", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.933137046873564*^9, 3.933137069067503*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"f50e456e-3db7-0943-80e4-c408c7517f48"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["Y", "TI"], 
       RowBox[{
         StyleBox["r", "TI"], 
         StyleBox["a", "TI"], 
         StyleBox["m", "TI"], 
         StyleBox["p", "TI"], 
         StyleBox["a", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
    "Y_{rampa}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "[", "s", "]"}]], "Input",
 CellChangeTimes->{{3.933137072815864*^9, 3.933137076889035*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"f64c28b6-068a-8c40-b867-0a12cd67dae0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   FractionBox["432", 
    RowBox[{
     SuperscriptBox["s", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"5365", "+", 
       RowBox[{"4422", " ", "s"}], "+", 
       RowBox[{"2473", " ", 
        SuperscriptBox["s", "2"]}], "+", 
       RowBox[{"960", " ", 
        SuperscriptBox["s", "3"]}], "+", 
       RowBox[{"144", " ", 
        SuperscriptBox["s", "4"]}]}], ")"}]}]], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.933137077601149*^9, 3.933137980799044*^9, 
  3.9332227444546776`*^9, 3.933226952882662*^9},
 CellLabel->
  "Out[172]=",ExpressionUUID->"3202ae0d-0eeb-e148-a24c-92b9ab02eec3"]
}, Open  ]],

Cell["\<\
Anche in questo caso i fratti semplici sono sei, i primi due quali sono \
legati dall\[CloseCurlyQuote]ingresso ed i restanti quattro sono legati dai \
modi naturali.\
\>", "Text",
 CellChangeTimes->{{3.9331404030529423`*^9, 
  3.933140425668291*^9}},ExpressionUUID->"58e38822-c3c9-7f47-91ab-\
3858ad549fe2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["F", "TI"], "1"], TraditionalForm], "errors" -> {}, "input" -> 
     "F_{1}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "s"], "+", 
  FractionBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["F", "TI"], "2"], TraditionalForm], "errors" -> {}, "input" -> 
     "F_2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], 
   SuperscriptBox["s", "2"]], "+", 
  FractionBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["F", "TI"], "3"], TraditionalForm], "errors" -> {}, "input" -> 
     "F_3", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], 
   RowBox[{"s", "+", "3", "+", 
    FractionBox["\[ImaginaryI]", "4"]}]], "+", 
  FractionBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["F", "TI"], "4"], TraditionalForm], "errors" -> {}, "input" -> 
     "F_4", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], 
   RowBox[{"s", "+", "3", "-", 
    FractionBox["\[ImaginaryI]", "4"]}]], "+", 
  FractionBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["F", "TI"], "5"], TraditionalForm], "errors" -> {}, "input" -> 
     "F_5", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], 
   RowBox[{"s", "+", 
    FractionBox["1", "3"], "+", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}]], "+", 
  FractionBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["F", "TI"], "6"], TraditionalForm], "errors" -> {}, "input" -> 
     "F_6", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], 
   RowBox[{"s", "+", 
    FractionBox["1", "3"], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}]]}]], "Input",
 CellChangeTimes->{{3.93313880697167*^9, 3.933138826380394*^9}, {
  3.933139133318794*^9, 3.933139145556067*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"48a871ae-9da8-8b47-af63-0eac37465d1c"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SubscriptBox["F", "1"], "s"], "+", 
  FractionBox[
   SubscriptBox["F", "2"], 
   SuperscriptBox["s", "2"]], "+", 
  FractionBox[
   SubscriptBox["F", "3"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "+", 
      FractionBox["\[ImaginaryI]", "4"]}], ")"}], "+", "s"}]], "+", 
  FractionBox[
   SubscriptBox["F", "4"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "-", 
      FractionBox["\[ImaginaryI]", "4"]}], ")"}], "+", "s"}]], "+", 
  FractionBox[
   SubscriptBox["F", "5"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", "3"], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], "+", "s"}]], "+", 
  FractionBox[
   SubscriptBox["F", "6"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", "3"], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], "+", "s"}]]}]], "Output",
 CellChangeTimes->{3.9331392840686073`*^9, 3.933222747153458*^9, 
  3.933226955463751*^9},
 CellLabel->
  "Out[173]=",ExpressionUUID->"ce83cf24-6a4a-6342-a5cb-922c55e296df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["F", "TI"], "1"], TraditionalForm], "errors" -> {}, "input" -> 
    "F_1", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox["s", "2"], 
       RowBox[{
        TemplateBox[<|"boxes" -> FormBox[
            SubscriptBox[
             StyleBox["Y", "TI"], 
             RowBox[{
               StyleBox["r", "TI"], 
               StyleBox["a", "TI"], 
               StyleBox["m", "TI"], 
               StyleBox["p", "TI"], 
               StyleBox["a", "TI"]}]], TraditionalForm], "errors" -> {}, 
          "input" -> "Y_{rampa}", "state" -> "Boxes"|>,
         "TeXAssistantTemplate"], "[", "s", "]"}]}], ",", "s"}], "]"}], ",", 
    " ", 
    RowBox[{"s", " ", "\[Rule]", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.933139302756016*^9, 3.933139344655062*^9}, {
  3.9331395894007683`*^9, 3.933139589759062*^9}, {3.933139634812624*^9, 
  3.9331396349914207`*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"24876b5b-38f6-fe42-8fa2-fe9b47ccda27"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"-", 
    FractionBox["1910304", "28783225"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.933139359426768*^9, 3.933139403412056*^9}, 
   3.9331396357515945`*^9, 3.933222748839083*^9, 3.933226958603853*^9},
 CellLabel->
  "Out[174]=",ExpressionUUID->"df5fdd3d-5032-c942-a9b4-40798654e81f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["F", "TI"], "2"], TraditionalForm], "errors" -> {}, "input" -> 
    "F_2", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["s", "2"], 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["Y", "TI"], 
           RowBox[{
             StyleBox["r", "TI"], 
             StyleBox["a", "TI"], 
             StyleBox["m", "TI"], 
             StyleBox["p", "TI"], 
             StyleBox["a", "TI"]}]], TraditionalForm], "errors" -> {}, 
        "input" -> "Y_{rampa}", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], "[", "s", "]"}]}], ",", 
    RowBox[{"s", "\[Rule]", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9331393843139915`*^9, 3.933139414175709*^9}, {
  3.933139481126961*^9, 3.933139531151558*^9}, {3.933139602252188*^9, 
  3.933139628867531*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"a1ab3903-9d93-204d-9f45-6741e7a07505"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   FractionBox["432", "5365"], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.9331394163055305`*^9, 3.933139631052595*^9, 
  3.933222750814158*^9, 3.9332269605453243`*^9},
 CellLabel->
  "Out[175]=",ExpressionUUID->"de6640a7-b06a-fe46-aa0e-26fbf9805755"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["F", "TI"], "3"], TraditionalForm], "errors" -> {}, "input" -> 
    "F_3", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"s", "+", "3", "+", 
       FractionBox["\[ImaginaryI]", "4"]}], ")"}], 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["Y", "TI"], 
           RowBox[{
             StyleBox["r", "TI"], 
             StyleBox["a", "TI"], 
             StyleBox["m", "TI"], 
             StyleBox["p", "TI"], 
             StyleBox["a", "TI"]}]], TraditionalForm], "errors" -> {}, 
        "input" -> "Y_{rampa}", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], "[", "s", "]"}]}], ",", " ", 
    RowBox[{"s", " ", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "3"}], "-", 
      FractionBox["\[ImaginaryI]", "4"]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.93313965592084*^9},
 CellLabel->
  "In[176]:=",ExpressionUUID->"6c163983-0b62-4146-945a-bed20fa297ff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["181481472", "10799049725"], "+", 
    FractionBox[
     RowBox[{"616287744", " ", "\[ImaginaryI]"}], "10799049725"]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9331396628305492`*^9, 3.933139669828091*^9}, 
   3.933222752527731*^9, 3.933226962055847*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"1f38551e-f146-aa43-abef-025d17321e56"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["F", "TI"], "4"], TraditionalForm], "errors" -> {}, "input" -> 
    "F_4", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"s", "+", "3", "-", 
       FractionBox["\[ImaginaryI]", "4"]}], ")"}], 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["Y", "TI"], 
           RowBox[{
             StyleBox["r", "TI"], 
             StyleBox["a", "TI"], 
             StyleBox["m", "TI"], 
             StyleBox["p", "TI"], 
             StyleBox["a", "TI"]}]], TraditionalForm], "errors" -> {}, 
        "input" -> "Y_{rampa}", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], "[", "s", "]"}]}], ",", " ", 
    RowBox[{"s", " ", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "3"}], "+", 
      FractionBox["\[ImaginaryI]", "4"]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.933139684992468*^9},
 CellLabel->
  "In[177]:=",ExpressionUUID->"a26cc307-c317-2442-a94a-9d6a79ebb42a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["181481472", "10799049725"], "-", 
    FractionBox[
     RowBox[{"616287744", " ", "\[ImaginaryI]"}], "10799049725"]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.933139695881937*^9, 3.9332227545575485`*^9, 
  3.933226964247711*^9},
 CellLabel->
  "Out[177]=",ExpressionUUID->"a9924bbc-40d6-8948-a6bb-31521308189e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["F", "TI"], "5"], TraditionalForm], "errors" -> {}, "input" -> 
    "F_5", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"s", "+", 
       FractionBox["1", "3"], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["Y", "TI"], 
           RowBox[{
             StyleBox["r", "TI"], 
             StyleBox["a", "TI"], 
             StyleBox["m", "TI"], 
             StyleBox["p", "TI"], 
             StyleBox["a", "TI"]}]], TraditionalForm], "errors" -> {}, 
        "input" -> "Y_{rampa}", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], "[", "s", "]"}]}], ",", " ", 
    RowBox[{"s", " ", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "3"]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.933139721004893*^9},
 CellLabel->
  "In[178]:=",ExpressionUUID->"e13f46c7-8e97-6c4b-bcc1-6a46e83efc5a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["57585168", "3515790505"], "+", 
    FractionBox[
     RowBox[{"2368764", " ", "\[ImaginaryI]"}], "3515790505"]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9331397465474224`*^9, 3.933222756172671*^9, 
  3.9332269658383064`*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"4a10e0a0-f77c-3549-90d5-73954860f61f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["F", "TI"], "6"], TraditionalForm], "errors" -> {}, "input" -> 
    "F_6", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"s", "+", 
       FractionBox["1", "3"], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["Y", "TI"], 
           RowBox[{
             StyleBox["r", "TI"], 
             StyleBox["a", "TI"], 
             StyleBox["m", "TI"], 
             StyleBox["p", "TI"], 
             StyleBox["a", "TI"]}]], TraditionalForm], "errors" -> {}, 
        "input" -> "Y_{rampa}", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], "[", "s", "]"}]}], ",", " ", 
    RowBox[{"s", " ", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "3"]}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.9331397302272854`*^9},
 CellLabel->
  "In[179]:=",ExpressionUUID->"8410f368-4420-2b43-bbc5-e1abc45b5bbb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["57585168", "3515790505"], "-", 
    FractionBox[
     RowBox[{"2368764", " ", "\[ImaginaryI]"}], "3515790505"]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.933139748280348*^9, 3.933222757920916*^9, 
  3.9332269676977463`*^9},
 CellLabel->
  "Out[179]=",ExpressionUUID->"006846b2-b7cc-e542-8d64-c8abcf74b74d"]
}, Open  ]],

Cell["Ne estraggo le parti reali", "Text",
 CellChangeTimes->{{3.9332269730735474`*^9, 
  3.9332269789504166`*^9}},ExpressionUUID->"790b1686-0d08-0b4e-81d5-\
32d4bf90c629"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["F", "TI"], "34"], TraditionalForm], "errors" -> {}, "input" -> 
    "F_{34}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"ComplexExpand", "[", 
    RowBox[{
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["F", "TI"], "3"], TraditionalForm], "errors" -> {}, 
        "input" -> "F_3", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "-", 
          FractionBox["\[ImaginaryI]", "4"]}], ")"}], "t"}]]}], "+", 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["F", "TI"], "4"], TraditionalForm], "errors" -> {}, 
        "input" -> "F_4", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          FractionBox["\[ImaginaryI]", "4"]}], ")"}], "t"}]]}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.933139785308*^9},
 CellLabel->
  "In[180]:=",ExpressionUUID->"21d27fbc-2a24-d047-b1d1-735369ce57d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   FractionBox[
    RowBox[{"27648", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "3"}], " ", "t"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"13128", " ", 
        RowBox[{"Cos", "[", 
         FractionBox["t", "4"], "]"}]}], "+", 
       RowBox[{"44581", " ", 
        RowBox[{"Sin", "[", 
         FractionBox["t", "4"], "]"}]}]}], ")"}]}], "10799049725"], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.933139803311262*^9, 3.933222759823847*^9, 
  3.933226983308447*^9},
 CellLabel->
  "Out[180]=",ExpressionUUID->"359100e7-5263-d840-a14f-586265be6949"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["F", "TI"], "56"], TraditionalForm], "errors" -> {}, "input" -> 
    "F_{56}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"ComplexExpand", "[", 
    RowBox[{
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["F", "TI"], "5"], TraditionalForm], "errors" -> {}, 
        "input" -> "F_5", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "3"]}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], "t"}]]}], "+", 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["F", "TI"], "6"], TraditionalForm], "errors" -> {}, 
        "input" -> "F_6", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "3"]}], "+", 
          RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], "t"}]]}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.933139843006777*^9},
 CellLabel->
  "In[181]:=",ExpressionUUID->"59660fd2-82ba-af4e-bc7d-62941bde249e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   FractionBox[
    RowBox[{"1944", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "t"}], "/", "3"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"59244", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "t"}], "]"}]}], "+", 
       RowBox[{"2437", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}]}], "3515790505"], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.933139853066208*^9, 3.933222761968004*^9, 
  3.9332269853517303`*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"cbb222c8-8c30-514d-942e-3471994f64a4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["Y", "TI"], 
        RowBox[{
          StyleBox["r", "TI"], 
          StyleBox["a", "TI"], 
          StyleBox["m", "TI"], 
          StyleBox["p", "TI"], 
          StyleBox["a", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "Y_{rampa}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["F", "TI"], "1"], TraditionalForm], "errors" -> {}, "input" -> 
      "F_{1}", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], 
    RowBox[{"UnitStep", "[", "t", "]"}]}], "+", 
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["F", "TI"], "2"], TraditionalForm], "errors" -> {}, "input" -> 
      "F_2", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], "t", " ", 
    RowBox[{"UnitStep", "[", "t", "]"}]}], "+", 
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["F", "TI"], "34"], TraditionalForm], "errors" -> {}, 
      "input" -> "F_{34}", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], 
    RowBox[{"UnitStep", "[", "t", "]"}]}], "+", 
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["F", "TI"], "56"], TraditionalForm], "errors" -> {}, 
      "input" -> "F_{56}", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], 
    RowBox[{"UnitStep", "[", "t", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9331398719260616`*^9, 3.9331398803085384`*^9}, 
   3.9331399290100193`*^9, {3.9331399732446384`*^9, 3.9331399859436264`*^9}},
 CellLabel->
  "In[182]:=",ExpressionUUID->"a9c07b99-5a23-1f46-be5c-62ae7839b43c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["Y", "TI"], 
       RowBox[{
         StyleBox["r", "TI"], 
         StyleBox["a", "TI"], 
         StyleBox["m", "TI"], 
         StyleBox["p", "TI"], 
         StyleBox["a", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
    "Y_{rampa}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.9331399914787464`*^9, 3.9331399956072617`*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"5661e8e7-f335-f54c-b041-0a6d8ca04dca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"1910304", " ", 
       RowBox[{"UnitStep", "[", "t", "]"}]}], "28783225"]}], "+", 
    FractionBox[
     RowBox[{"432", " ", "t", " ", 
      RowBox[{"UnitStep", "[", "t", "]"}]}], "5365"], "+", 
    FractionBox[
     RowBox[{"27648", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", "t"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"13128", " ", 
         RowBox[{"Cos", "[", 
          FractionBox["t", "4"], "]"}]}], "+", 
        RowBox[{"44581", " ", 
         RowBox[{"Sin", "[", 
          FractionBox["t", "4"], "]"}]}]}], ")"}], " ", 
      RowBox[{"UnitStep", "[", "t", "]"}]}], "10799049725"], "+", 
    FractionBox[
     RowBox[{"1944", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "t"}], "/", "3"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"59244", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "+", 
        RowBox[{"2437", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"UnitStep", "[", "t", "]"}]}], "3515790505"]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.933139996499333*^9, 3.933140103771351*^9, 
  3.9332227652779846`*^9, 3.933226990381901*^9},
 CellLabel->
  "Out[183]=",ExpressionUUID->"636b46cd-a77d-1543-899e-515a2b16e4af"]
}, Open  ]],

Cell["\<\
A meno di qualche manipolazione algebrica il risultato coincide con quello \
ottenuto precedentemente, una verifica di ci\[OGrave] \[EGrave] effettuabile \
attraverso la funzione Apart sulla risposta forzata\
\>", "Text",
 CellChangeTimes->{{3.933140459874426*^9, 3.933140579628021*^9}, {
  3.93314077021047*^9, 3.933140805425553*^9}, {3.9331415294518394`*^9, 
  3.933141569556249*^9}, {3.9332270048892307`*^9, 
  3.9332270197655964`*^9}},ExpressionUUID->"af6a01be-29d9-2a42-a687-\
58ad1d7f4a85"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apart", "[", 
  RowBox[{
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["Y", "TI"], 
        RowBox[{
          StyleBox["r", "TI"], 
          StyleBox["a", "TI"], 
          StyleBox["m", "TI"], 
          StyleBox["p", "TI"], 
          StyleBox["a", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "Y_{rampa}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], "[", "t", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.93314019330007*^9, 3.9331401960739117`*^9}, {
  3.933141421290884*^9, 3.93314142190472*^9}, {3.933222785783457*^9, 
  3.933222790113407*^9}, {3.9332229281112328`*^9, 3.93322293406687*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"e42ba9ba-1d48-8c43-b1b2-06c840e88284"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{"432", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4422"}], "+", 
        RowBox[{"5365", " ", "t"}]}], ")"}], " ", 
      RowBox[{"UnitStep", "[", "t", "]"}]}], "28783225"], "+", 
    FractionBox[
     RowBox[{"27648", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", "t"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"13128", " ", 
         RowBox[{"Cos", "[", 
          FractionBox["t", "4"], "]"}]}], "+", 
        RowBox[{"44581", " ", 
         RowBox[{"Sin", "[", 
          FractionBox["t", "4"], "]"}]}]}], ")"}], " ", 
      RowBox[{"UnitStep", "[", "t", "]"}]}], "10799049725"], "+", 
    FractionBox[
     RowBox[{"1944", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "t"}], "/", "3"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"59244", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "+", 
        RowBox[{"2437", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"UnitStep", "[", "t", "]"}]}], "3515790505"]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.933140197943842*^9, 3.9331414231889052`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"c6d43f96-5fc5-4c42-b300-d5ca9b4deee0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "8. Stato iniziale ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["x", "TI"], "0"], TraditionalForm], "errors" -> {}, "input" -> 
     "x_0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "1bac1a29-8457-4d48-8801-0486563c6244"],
 " tale che la risposta al gradino coincida con il suo valore di regime"
}], "Section",
 CellChangeTimes->{{3.933143897410879*^9, 3.933143928640013*^9}, {
  3.93316327333144*^9, 
  3.9331632779411516`*^9}},ExpressionUUID->"31ed1aa3-f8a2-564c-9191-\
b7cb3c929e05"],

Cell["\<\
Per definizione la risposta \[EGrave] composta da risposta libera e risposta \
forzata e la risposta forzata, che a sua volta \[EGrave] composta da risposta \
a regime e risposta transitoria, dunque: 
risposta = risposta libera + risposta a regime + risposta transitoria. 
Affinch\[EAcute] la risposta al gradino coincida con il suo valore di regime, \
\[EGrave] necessario che la risposta libera vada a compensare la risposta \
transitoria. Per individuare tale combinazione lineare, parto definendo il \
vettore stato iniziale\
\>", "Text",
 CellChangeTimes->{{3.933162122071184*^9, 3.933162238360676*^9}, {
  3.933162325227867*^9, 3.933162333823759*^9}, {3.933162383778391*^9, 
  3.933162444011881*^9}, {3.933162493980284*^9, 3.933162562930743*^9}, {
  3.93316344956674*^9, 3.9331634562108364`*^9}, {3.933163527159178*^9, 
  3.9331635273905296`*^9}, {3.933227044909016*^9, 
  3.933227098623743*^9}},ExpressionUUID->"176a5847-1d3f-f245-8a89-\
91262d1961ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x0", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "x1", "}"}], ",", 
    RowBox[{"{", "x2", "}"}], ",", 
    RowBox[{"{", "x3", "}"}], ",", 
    RowBox[{"{", "x4", "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.933144012924633*^9, 3.933144015811426*^9}, 
   3.933162442418663*^9, {3.9331625670452824`*^9, 3.9331626046551113`*^9}, {
   3.933165205615324*^9, 3.933165207109007*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"80026a06-240e-9046-a4bf-acf72153bd2b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "x1", "}"}], ",", 
   RowBox[{"{", "x2", "}"}], ",", 
   RowBox[{"{", "x3", "}"}], ",", 
   RowBox[{"{", "x4", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.933162616061487*^9, 3.933164556180455*^9, 
  3.933164594563982*^9, 3.933165212623855*^9, 3.933227102371084*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"79652784-8711-b648-a750-28b61f3d69bc"]
}, Open  ]],

Cell["Calcolo risposta libera e risposta forzata", "Text",
 CellChangeTimes->{{3.9331635308011417`*^9, 
  3.933163541171639*^9}},ExpressionUUID->"e5d716fe-489b-c745-aced-\
9128c5fc3507"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"libera", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"C1", ".", 
      RowBox[{"Inverse", "[", 
       RowBox[{
        RowBox[{"s", " ", 
         RowBox[{"IdentityMatrix", "[", "4", "]"}]}], "-", "A"}], "]"}], ".", 
      "x0"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.933163267224139*^9, 3.9331633646972504`*^9}, {
  3.9331647789535656`*^9, 3.933164781438032*^9}, {3.933165209869314*^9, 
  3.933165210993162*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"22e3b627-85cc-3d48-b0a0-afedaeaeeddd"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"6751", "+", 
          RowBox[{"3433", " ", "s"}], "+", 
          RowBox[{"1104", " ", 
           SuperscriptBox["s", "2"]}], "+", 
          RowBox[{"144", " ", 
           SuperscriptBox["s", "3"]}]}], ")"}], " ", "x1"}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5382", "+", 
        RowBox[{"2617", " ", "s"}], "+", 
        RowBox[{"960", " ", 
         SuperscriptBox["s", "2"]}], "+", 
        RowBox[{"144", " ", 
         SuperscriptBox["s", "3"]}]}], ")"}], " ", "x2"}], "+", 
     RowBox[{"7711", " ", "x3"}], "+", 
     RowBox[{"3577", " ", "s", " ", "x3"}], "+", 
     RowBox[{"1104", " ", 
      SuperscriptBox["s", "2"], " ", "x3"}], "+", 
     RowBox[{"144", " ", 
      SuperscriptBox["s", "3"], " ", "x3"}], "+", 
     RowBox[{"7039", " ", "x4"}], "+", 
     RowBox[{"3433", " ", "s", " ", "x4"}], "+", 
     RowBox[{"1104", " ", 
      SuperscriptBox["s", "2"], " ", "x4"}], "+", 
     RowBox[{"144", " ", 
      SuperscriptBox["s", "3"], " ", "x4"}]}], ")"}]}], 
  RowBox[{"5365", "+", 
   RowBox[{"4422", " ", "s"}], "+", 
   RowBox[{"2473", " ", 
    SuperscriptBox["s", "2"]}], "+", 
   RowBox[{"960", " ", 
    SuperscriptBox["s", "3"]}], "+", 
   RowBox[{"144", " ", 
    SuperscriptBox["s", "4"]}]}]]], "Output",
 CellChangeTimes->{
  3.9331633573017254`*^9, {3.9331645517335052`*^9, 3.933164557864191*^9}, 
   3.933164605207781*^9, 3.9331647864123793`*^9, 3.9331652148283653`*^9, 
   3.933227105060772*^9},
 CellLabel->
  "Out[185]=",ExpressionUUID->"ac4179d0-7a57-4347-897b-6430f1795110"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"forzata", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"G", "[", "s", "]"}], 
      RowBox[{"(", 
       FractionBox["1", "s"], ")"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9331634607286377`*^9, 3.933163487749569*^9}, 
   3.933164783575289*^9, 3.933165224986461*^9, 3.933165275759289*^9},
 CellLabel->
  "In[186]:=",ExpressionUUID->"abdc891b-0181-ae4a-95f7-08cf34deb4d2"],

Cell[BoxData[
 FractionBox["432", 
  RowBox[{"s", " ", 
   RowBox[{"(", 
    RowBox[{"5365", "+", 
     RowBox[{"4422", " ", "s"}], "+", 
     RowBox[{"2473", " ", 
      SuperscriptBox["s", "2"]}], "+", 
     RowBox[{"960", " ", 
      SuperscriptBox["s", "3"]}], "+", 
     RowBox[{"144", " ", 
      SuperscriptBox["s", "4"]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.933163489007906*^9, 3.9331645598180084`*^9, 
  3.933164607378348*^9, 3.933164788233235*^9, 3.933165226945334*^9, 
  3.9331652787413073`*^9, 3.9332271075102844`*^9},
 CellLabel->
  "Out[186]=",ExpressionUUID->"77ce51f4-773f-3e43-a4bf-9af9cf2813aa"]
}, Open  ]],

Cell["Calcolo la componente a regime della risposta al gradino", "Text",
 CellChangeTimes->{{3.933163545282883*^9, 3.933163573091315*^9}, {
  3.9331639066031513`*^9, 3.933163914034153*^9}, {3.9332271261095448`*^9, 
  3.9332271270897503`*^9}},ExpressionUUID->"6b39dd2f-4d2d-4f4d-9c0a-\
d351f77b70e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"regime", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"G", "[", "0", "]"}], 
      RowBox[{"(", 
       FractionBox["1", "s"], ")"}]}], ")"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.933163578934681*^9, 3.933163580941284*^9}, {
   3.9331639375931187`*^9, 3.933163957226313*^9}, 3.9331647910038033`*^9, {
   3.933165277047503*^9, 3.933165292918562*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"dd77790a-140b-b947-b223-731ba66e9eff"],

Cell[BoxData[
 FractionBox["432", 
  RowBox[{"5365", " ", "s"}]]], "Output",
 CellChangeTimes->{
  3.933163959530588*^9, 3.933164562683773*^9, 3.933164609098089*^9, 
   3.933164792704529*^9, 3.9331652335254154`*^9, {3.9331652810296707`*^9, 
   3.9331652945907707`*^9}, 3.9332271107591*^9},
 CellLabel->
  "Out[187]=",ExpressionUUID->"20900f21-3cb9-f740-8c9c-5733104b9667"]
}, Open  ]],

Cell["\<\
Calcolo la risposta transitoria come risposta forzata - risposta a regime\
\>", "Text",
 CellChangeTimes->{{3.9331639805495396`*^9, 3.933164001566267*^9}, {
  3.9331640546840057`*^9, 
  3.9331640620091915`*^9}},ExpressionUUID->"9e930f53-f486-4b40-8417-\
92113a9f856c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transitoria", "=", 
  RowBox[{"Factor", "[", 
   RowBox[{"forzata", "-", "regime"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.933164007495629*^9, 3.93316402519347*^9}, {
  3.933164813550057*^9, 3.933164818751652*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"1db0557b-8d1d-bb47-bb4f-9011a4559d49"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"432", " ", 
    RowBox[{"(", 
     RowBox[{"4422", "+", 
      RowBox[{"2473", " ", "s"}], "+", 
      RowBox[{"960", " ", 
       SuperscriptBox["s", "2"]}], "+", 
      RowBox[{"144", " ", 
       SuperscriptBox["s", "3"]}]}], ")"}]}], 
   RowBox[{"5365", " ", 
    RowBox[{"(", 
     RowBox[{"37", "+", 
      RowBox[{"6", " ", "s"}], "+", 
      RowBox[{"9", " ", 
       SuperscriptBox["s", "2"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"145", "+", 
      RowBox[{"96", " ", "s"}], "+", 
      RowBox[{"16", " ", 
       SuperscriptBox["s", "2"]}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{
  3.9331640259970818`*^9, 3.9331645648069983`*^9, 3.9331646106457825`*^9, {
   3.933164816960556*^9, 3.933164819138956*^9}, 3.9331652363239174`*^9, 
   3.9331652962423496`*^9, 3.9332271181653175`*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"c2f83599-5c64-d145-88b6-71cd5b5831f9"]
}, Open  ]],

Cell["\<\
Sommo libera e transitoria, ne estraggo il numeratore e lo pongo pari a zero\
\>", "Text",
 CellChangeTimes->{{3.933164082217072*^9, 
  3.933164113140557*^9}},ExpressionUUID->"4e3d10d5-63be-d845-902a-\
941f67c04831"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Numerator", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Expand", "[", 
    RowBox[{"libera", "+", "transitoria"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9331641361534653`*^9, 3.933164155739229*^9}, {
   3.933164821743214*^9, 3.9331648236634007`*^9}, 3.933659522735895*^9},
 CellLabel->
  "In[189]:=",ExpressionUUID->"a197acde-3565-ee48-822c-10bf6e867602"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "3"}], " ", 
  RowBox[{"(", 
   RowBox[{"636768", "+", 
    RowBox[{"36219115", " ", "x1"}], "+", 
    RowBox[{"28874430", " ", "x2"}], "-", 
    RowBox[{"41369515", " ", "x3"}], "+", 
    RowBox[{"s", " ", 
     RowBox[{"(", 
      RowBox[{"356112", "+", 
       RowBox[{"18418045", " ", "x1"}], "+", 
       RowBox[{"14040205", " ", "x2"}], "-", 
       RowBox[{"19190605", " ", "x3"}], "-", 
       RowBox[{"18418045", " ", "x4"}]}], ")"}]}], "+", 
    RowBox[{"240", " ", 
     SuperscriptBox["s", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"576", "+", 
       RowBox[{"24679", " ", "x1"}], "+", 
       RowBox[{"21460", " ", "x2"}], "-", 
       RowBox[{"24679", " ", "x3"}], "-", 
       RowBox[{"24679", " ", "x4"}]}], ")"}]}], "+", 
    RowBox[{"144", " ", 
     SuperscriptBox["s", "3"], " ", 
     RowBox[{"(", 
      RowBox[{"144", "+", 
       RowBox[{"5365", " ", "x1"}], "+", 
       RowBox[{"5365", " ", "x2"}], "-", 
       RowBox[{"5365", " ", "x3"}], "-", 
       RowBox[{"5365", " ", "x4"}]}], ")"}]}], "-", 
    RowBox[{"37764235", " ", "x4"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.933164156970112*^9, 3.933164567158741*^9, 
  3.9331646129924173`*^9, 3.9331648239885674`*^9, 3.933165238804569*^9, 
  3.933165298632046*^9, 3.933227130478796*^9},
 CellLabel->
  "Out[189]=",ExpressionUUID->"9c520ad4-c130-3f40-8670-331ec9fd1e5f"]
}, Open  ]],

Cell["\<\
Ho quattro incognite. Estraggo i coefficienti del polinomio al numeratore\
\>", "Text",
 CellChangeTimes->{{3.933164177372643*^9, 3.933164209847039*^9}, {
  3.933227142591217*^9, 3.9332271437355385`*^9}, {3.9336596011857967`*^9, 
  3.933659602904545*^9}},ExpressionUUID->"b4c756ee-3d54-094c-a25f-\
4d9cfbf5280b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CL", "=", 
  RowBox[{"CoefficientList", "[", 
   RowBox[{
    RowBox[{"Numerator", "[", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Expand", "[", 
       RowBox[{"libera", "+", "transitoria"}], "]"}], "]"}], "]"}], ",", 
    "s"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9331642303489017`*^9, 3.933164273874018*^9}, {
  3.933164313573324*^9, 3.933164313754135*^9}, {3.933164837294842*^9, 
  3.933164839167116*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"8739aad9-5001-db44-86cc-cbe706a1bb5f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1910304"}], "-", 
    RowBox[{"108657345", " ", "x1"}], "-", 
    RowBox[{"86623290", " ", "x2"}], "+", 
    RowBox[{"124108545", " ", "x3"}], "+", 
    RowBox[{"113292705", " ", "x4"}]}], ",", 
   RowBox[{
    RowBox[{"-", "3"}], " ", 
    RowBox[{"(", 
     RowBox[{"356112", "+", 
      RowBox[{"18418045", " ", "x1"}], "+", 
      RowBox[{"14040205", " ", "x2"}], "-", 
      RowBox[{"19190605", " ", "x3"}], "-", 
      RowBox[{"18418045", " ", "x4"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", "720"}], " ", 
    RowBox[{"(", 
     RowBox[{"576", "+", 
      RowBox[{"24679", " ", "x1"}], "+", 
      RowBox[{"21460", " ", "x2"}], "-", 
      RowBox[{"24679", " ", "x3"}], "-", 
      RowBox[{"24679", " ", "x4"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", "432"}], " ", 
    RowBox[{"(", 
     RowBox[{"144", "+", 
      RowBox[{"5365", " ", "x1"}], "+", 
      RowBox[{"5365", " ", "x2"}], "-", 
      RowBox[{"5365", " ", "x3"}], "-", 
      RowBox[{"5365", " ", "x4"}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.93316431450754*^9, 3.933164569404494*^9, 
  3.9331646147944126`*^9, 3.9331648403463736`*^9, 3.933165241623257*^9, 
  3.933165301002495*^9, 3.9332271368589134`*^9},
 CellLabel->
  "Out[190]=",ExpressionUUID->"52a3e748-649c-cd44-b254-5cad94412f2c"]
}, Open  ]],

Cell[TextData[{
 "Determino le incognite ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["x", "TI"], 
        StyleBox["i", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
     "x_i", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "26750128-693b-5141-8501-863078936287"],
 " che annullano il set dei coefficienti del polinomio al numeratore"
}], "Text",
 CellChangeTimes->{{3.933164341084055*^9, 
  3.9331643756498947`*^9}},ExpressionUUID->"fc7c8c46-b297-a441-82c3-\
1d7cb20d42cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"CL", "==", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "x3", ",", "x4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.933164393066372*^9, 3.933164417384119*^9}, {
   3.93316449036569*^9, 3.9331645112981205`*^9}, 3.933164543961409*^9, {
   3.9331646189608936`*^9, 3.933164625307598*^9}, {3.933164723231011*^9, 
   3.933164723820355*^9}, {3.933164867255924*^9, 3.9331649213702965`*^9}, {
   3.93316531961677*^9, 3.9331653264041767`*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"95a11782-636e-4e46-b955-eeeb16d98dfc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x1", "\[Rule]", 
     RowBox[{"-", 
      FractionBox["144", "5365"]}]}], ",", 
    RowBox[{"x2", "\[Rule]", 
     RowBox[{"-", 
      FractionBox["144", "5365"]}]}], ",", 
    RowBox[{"x3", "\[Rule]", 
     RowBox[{"-", 
      FractionBox["144", "5365"]}]}], ",", 
    RowBox[{"x4", "\[Rule]", "0"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.933164418415821*^9, 3.9331644385942745`*^9}, {
   3.933164504454666*^9, 3.93316454486668*^9}, 3.933164628199692*^9, 
   3.933164727432694*^9, 3.933164863272188*^9, 3.933164922642105*^9, 
   3.933165244412895*^9, {3.9331653041402264`*^9, 3.933165330426195*^9}, 
   3.933227155487999*^9},
 CellLabel->
  "Out[191]=",ExpressionUUID->"47decfbf-b3ac-b246-be0c-9eade1d4805f"]
}, Open  ]],

Cell["\<\
Verifico il risultato ottenuto, calcolando la risposta a partire dallo stato \
iniziale ricavato\
\>", "Text",
 CellChangeTimes->{{3.933165429554941*^9, 
  3.933165458845482*^9}},ExpressionUUID->"8c804cda-1898-9640-bc76-\
9a0db6c125bf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalSigma]1", "=", 
  RowBox[{"StateSpaceModel", "[", 
   RowBox[{"{", 
    RowBox[{"A", ",", "B", ",", "C1"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.933165011521803*^9, 3.933165013891508*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"d319bd87-815a-074c-bc38-a91d1043a892"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["9403", "288"], 
   FractionBox["3847", "144"], 
   RowBox[{"-", 
     FractionBox["2933", "72"]}], 
   RowBox[{"-", 
     FractionBox["10747", "288"]}], 
   FractionBox["1", "2"], "1", 
   RowBox[{"-", "1"}], "0", 
   RowBox[{"-", "1"}], "0", "2", 
   RowBox[{"-", "1"}], 
   RowBox[{"-", "1"}], "0", "0", 
   FractionBox["8827", "288"], 
   FractionBox["3847", "144"], 
   RowBox[{"-", 
     FractionBox["2789", "72"]}], 
   RowBox[{"-", 
     FractionBox["10747", "288"]}], 
   FractionBox["1", "2"], 
   RowBox[{"-", "3"}], 
   RowBox[{"-", "3"}], "3", "3", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3, $CellContext`stname4}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 4, 1, {}, {False, False}, False, Automatic, None, 
    Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5}, {#6, #7, #8, #9, #10}, {#11, #12, #13, \
#14, #15}, {#16, #17, #18, #19, #20}, {#21, #22, #23, #24, #25}}, 
        AllowedDimensions -> {5, 5}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, DefaultBaseStyle -> 
        "SystemsModelGrid00"], ")"}], #26, 
     ButtonBox[
      GraphicsBox[{
        RectangleBox[{0, 0}, DefaultBaseStyle -> "SystemsModelSuperscript"], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", DefaultBaseStyle -> 
          "SystemsModelSuperscript"], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 9}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{11, 14}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 19}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 5}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{10, 10}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{15, 15}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{20, 20}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{21, 24}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{25, 25}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#26}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellChangeTimes->{3.933227159190708*^9},
 CellLabel->
  "Out[192]=",ExpressionUUID->"cacf909a-2eb3-0740-8d24-528957314a32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"OutputResponse", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[CapitalSigma]1", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "144"}], "/", "5365"}], ",", 
        RowBox[{
         RowBox[{"-", "144"}], "/", "5365"}], ",", 
        RowBox[{
         RowBox[{"-", "144"}], "/", "5365"}], ",", "0"}], "}"}]}], "}"}], ",",
     "1", ",", "t"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.933164998368255*^9, 3.9331650896236053`*^9}, {
  3.933165336742628*^9, 3.933165412731451*^9}},
 CellLabel->
  "In[193]:=",ExpressionUUID->"5d57818a-0d02-b34c-b4bd-23dd3a63df07"],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox["432", "5365"], "}"}]], "Output",
 CellChangeTimes->{{3.933165060658621*^9, 3.933165084988804*^9}, 
   3.933165382115959*^9, 3.933165413543852*^9, 3.9332271732246456`*^9},
 CellLabel->
  "Out[193]=",ExpressionUUID->"3f18fa04-d577-9841-aec1-6305dfddc51f"]
}, Open  ]],

Cell["Come volevasi verificare si \[EGrave] ottenuta la risposta a regime", \
"Text",
 CellChangeTimes->{{3.933165466129097*^9, 
  3.9331654823297462`*^9}},ExpressionUUID->"27b46dfc-3f09-5748-9bed-\
60f19b6d1b57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "9. Risposta al segnale ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["u", "TI"], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[LongEqual]", "1", 
         RowBox[{"(", 
           RowBox[{"-", 
             StyleBox["t", "TI"]}], ")"}]}], TraditionalForm], "errors" -> {},
      "input" -> "u(t)=1(-t)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2942b6ff-ea0f-084b-aef0-6924bb6c324a"]
}], "Section",
 CellChangeTimes->{{3.9331654933115177`*^9, 3.933165493506899*^9}, {
  3.9331655238090763`*^9, 
  3.933165529995235*^9}},ExpressionUUID->"9b9ab89f-e8f8-a44f-84ce-\
decf519a10e9"],

Cell[TextData[{
 "Il calcolo della risposta al segnale ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"1", "(", 
         RowBox[{"-", 
           StyleBox["t", "TI"]}], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "1(-t)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "0cf5bf70-b669-1746-8e60-1871f03175d7"],
 " presuppone la BIBO stabilit\[AGrave] o in generale \
l\[CloseCurlyQuote]asintotica stabilit\[AGrave]. il sistema \[EGrave] \
asintotcamente stabile, dunque BIBO stabile perci\[OGrave] si pu\[OGrave] \
procedere al calcolo della risposta al segnale  ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"1", "(", 
         RowBox[{"-", 
           StyleBox["t", "TI"]}], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "1(-t)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e398b5ad-a0b6-9748-a0a1-52efc3ef85c9"],
 ". La risposta al segnale \[EGrave] definita tramite la notazione piecewise \
seguente: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["y", "TI"], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[LongEqual]"}], TraditionalForm], 
     "errors" -> {}, "input" -> "y(t)=", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "8862907d-37ae-c54e-a92c-c51d2317c7a8"],
 Cell[BoxData[
  FormBox[
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           TemplateBox[<|"boxes" -> FormBox[
               SubscriptBox[
                StyleBox["y", "TI"], 
                RowBox[{
                  StyleBox["s", "TI"], 
                  StyleBox["s", "TI"]}]], TraditionalForm], "errors" -> {}, 
             "input" -> "y_{ss}", "state" -> "Boxes"|>,
            "TeXAssistantTemplate"], 
           RowBox[{"(", "t", ")"}]}], 
          TemplateBox[<|"boxes" -> FormBox[
              RowBox[{
                StyleBox["t", "TI"], "<", "0"}], TraditionalForm], 
            "errors" -> {}, "input" -> "t< 0", "state" -> "Boxes"|>,
           "TeXAssistantTemplate"]},
         {
          TemplateBox[<|"boxes" -> FormBox[
              RowBox[{
                SubscriptBox[
                 StyleBox["y", "TI"], "libera"], "(", 
                StyleBox["t", "TI"], ")"}], TraditionalForm], "errors" -> {}, 
            "input" -> "y_{\\text{libera}}(t)", "state" -> "Boxes"|>,
           "TeXAssistantTemplate"], 
          RowBox[{"t", 
           
           TemplateBox[<|
            "boxes" -> FormBox["\[GreaterEqual]", TraditionalForm], 
             "errors" -> {}, "input" -> "\\ge", "state" -> "Boxes"|>,
            "TeXAssistantTemplate"], "0"}]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True], TraditionalForm]],ExpressionUUID->
  "384e4bb8-4bf1-aa4e-89d7-605e1165ef74"],
 " . Occorre perci\[OGrave] valutare la risposta per ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["t", "TI"], "<", "0"}], TraditionalForm], "errors" -> {}, 
     "input" -> "t<0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "d4323fb2-09f5-a747-8d6f-754aeee36f20"],
 ", pari alla risposta a regime e per ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["t", "TI"], "\[GreaterEqual]", "0"}], TraditionalForm], 
     "errors" -> {}, "input" -> "t\\ge0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "ed008edf-3667-034e-848c-7e4574e57494"],
 " pari alla risposta libera. Infatti per ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["t", "TI"], "\[LongEqual]", "0"}], TraditionalForm], 
     "errors" -> {}, "input" -> "t=0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c4a06b69-46e5-3849-838b-13650b4acf32"],
 "la risposta \[EGrave] senza ingresso, ma tiene conto delle condizioni \
iniziali legate alla commutazione da uno a zero, dove in zero per continuit\
\[AGrave], valgono le seguenti relazioni: ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["y", "TI"], 
          RowBox[{
            StyleBox["s", "TI"], 
            StyleBox["s", "TI"]}]], 
         RowBox[{"(", 
           SuperscriptBox["0", "-"], ")"}], "\[LongEqual]", 
         SubscriptBox[
          StyleBox["y", "TI"], "libera"], 
         RowBox[{"(", 
           SuperscriptBox["0", "+"], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> "y_{ss}(0^-)=y_{\\text{libera}}(0^+)", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "a2f63c7e-beef-7b49-a1f7-ed931ab7dffc"],
 ", ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubsuperscriptBox[
          StyleBox["y", "TI"], 
          RowBox[{
            StyleBox["s", "TI"], 
            StyleBox["s", "TI"]}], "\[Prime]"], 
         RowBox[{"(", 
           SuperscriptBox["0", "-"], ")"}], "\[LongEqual]", 
         SubsuperscriptBox[
          StyleBox["y", "TI"], "libera", "\[Prime]"], 
         RowBox[{"(", 
           SuperscriptBox["0", "+"], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> "y'_{ss}(0^-)=y'_{\\text{libera}}(0^+)", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "6a38aa55-ed45-d648-a395-1edbc749074b"],
 ", ... ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubsuperscriptBox[
          StyleBox["y", "TI"], 
          RowBox[{
            StyleBox["s", "TI"], 
            StyleBox["s", "TI"]}], 
          RowBox[{"(", 
            RowBox[{
              StyleBox["n", "TI"], "-", "1"}], ")"}]], 
         RowBox[{"(", 
           SuperscriptBox["0", "-"], ")"}], "\[LongEqual]", 
         SubsuperscriptBox[
          StyleBox["y", "TI"], "libera", 
          RowBox[{"(", 
            RowBox[{
              StyleBox["n", "TI"], "-", "1"}], ")"}]], 
         RowBox[{"(", 
           SuperscriptBox["0", "+"], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "y^{(n-1)}_{ss}(0^-)=y^{(n-1)}_{\\text{libera}}(0^+)", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c6e41956-952b-f04e-a4e0-dc78572aa6a0"],
 ".\nPer ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["t", "TI"], "<", "0"}], TraditionalForm], "errors" -> {}, 
     "input" -> "t<0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e6a8aaaf-20e5-3f42-9063-4569caa64490"],
 " la risposta \[EGrave] pari alla risposta a regime del gradino unitario"
}], "Text",
 CellChangeTimes->{{3.933165548222534*^9, 3.9331655485047646`*^9}, {
   3.933219605243139*^9, 3.9332197570274696`*^9}, {3.933219808107729*^9, 
   3.933219811073141*^9}, {3.933219949945205*^9, 3.933219984238443*^9}, {
   3.9332200507837734`*^9, 3.9332201476684456`*^9}, {3.9332201869328136`*^9, 
   3.933220373323839*^9}, {3.9332204060864353`*^9, 3.9332205606703796`*^9}, 
   3.933220601543577*^9, {3.933220669048303*^9, 3.933220693971924*^9}, {
   3.9332217808942986`*^9, 3.93322187237608*^9}, {3.933227206088316*^9, 
   3.933227246369692*^9}, {3.934352641000038*^9, 3.934352679690338*^9}, {
   3.9343527109243526`*^9, 
   3.9343527131339626`*^9}},ExpressionUUID->"2cccc900-d0b5-ef42-ba4e-\
1a3350848e79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yneg", "=", 
  RowBox[{
   RowBox[{"G", "[", "0", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.933220705231407*^9, 3.9332207116455*^9}, {
  3.933223706734371*^9, 3.9332237084286613`*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"5ce738c7-7031-034f-b4b8-84d0bfe80125"],

Cell[BoxData[
 FractionBox["432", "5365"]], "Output",
 CellChangeTimes->{3.933220713488306*^9, 3.9332237439536877`*^9, 
  3.9332272589792385`*^9},
 CellLabel->
  "Out[194]=",ExpressionUUID->"7a129ad9-b9cf-5248-9956-f909286a386c"]
}, Open  ]],

Cell[TextData[{
 "Per ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["t", "TI"], ">", "0"}], TraditionalForm], "errors" -> {}, 
     "input" -> "t>0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e7f8bbb4-058f-c44b-8de3-0a899872105f"],
 " mi ricavo lo stato iniziale a partire da: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {
       RowBox[{"y", "(", "0", ")"}]},
      {
       TemplateBox[<|"boxes" -> FormBox[
           RowBox[{
             SuperscriptBox[
              StyleBox["y", "TI"], "\[Prime]"], "(", "0", ")"}], 
           TraditionalForm], "errors" -> {}, "input" -> "y'(0)", "state" -> 
         "Boxes"|>,
        "TeXAssistantTemplate"]},
      {
       TemplateBox[<|"boxes" -> FormBox[
           RowBox[{
             SuperscriptBox[
              StyleBox["y", "TI"], "\[Prime]\[Prime]"], "(", "0", ")"}], 
           TraditionalForm], "errors" -> {}, "input" -> "y''(0)", "state" -> 
         "Boxes"|>,
        "TeXAssistantTemplate"]},
      {
       TemplateBox[<|"boxes" -> FormBox[
           RowBox[{
             SuperscriptBox[
              StyleBox["y", "TI"], "\[Prime]\[Prime]\[Prime]"], "(", "0", 
             ")"}], TraditionalForm], "errors" -> {}, "input" -> "y'''(0)", 
         "state" -> "Boxes"|>,
        "TeXAssistantTemplate"]}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "a92f60df-fd72-0343-9606-6015de44667e"],
 "=",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"C"},
      {
       TemplateBox[<|"boxes" -> FormBox[
           RowBox[{
             StyleBox["C", "TI"], 
             StyleBox["A", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
         "CA", "state" -> "Boxes"|>,
        "TeXAssistantTemplate"]},
      {
       TemplateBox[<|"boxes" -> FormBox[
           RowBox[{
             StyleBox["C", "TI"], 
             SuperscriptBox[
              StyleBox["A", "TI"], "2"]}], TraditionalForm], "errors" -> {}, 
         "input" -> "CA^2", "state" -> "Boxes"|>,
        "TeXAssistantTemplate"]},
      {
       TemplateBox[<|"boxes" -> FormBox[
           RowBox[{
             StyleBox["C", "TI"], 
             SuperscriptBox[
              StyleBox["A", "TI"], "3"]}], TraditionalForm], "errors" -> {}, 
         "input" -> "CA^3", "state" -> "Boxes"|>,
        "TeXAssistantTemplate"]}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "72b40aa9-a3de-124f-85c3-46ce70e874a7"],
 " dove ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", GridBox[{
       {"C"},
       {
        TemplateBox[<|"boxes" -> FormBox[
            RowBox[{
              StyleBox["C", "TI"], 
              StyleBox["A", "TI"]}], TraditionalForm], "errors" -> {}, 
          "input" -> "CA", "state" -> "Boxes"|>,
         "TeXAssistantTemplate"]},
       {
        TemplateBox[<|"boxes" -> FormBox[
            RowBox[{
              StyleBox["C", "TI"], 
              SuperscriptBox[
               StyleBox["A", "TI"], "2"]}], TraditionalForm], "errors" -> {}, 
          "input" -> "CA^2", "state" -> "Boxes"|>,
         "TeXAssistantTemplate"]},
       {
        TemplateBox[<|"boxes" -> FormBox[
            RowBox[{
              StyleBox["C", "TI"], 
              SuperscriptBox[
               StyleBox["A", "TI"], "3"]}], TraditionalForm], "errors" -> {}, 
          "input" -> "CA^3", "state" -> "Boxes"|>,
         "TeXAssistantTemplate"]}
      }], ")"}], "=", 
    TemplateBox[<|"boxes" -> FormBox[
        StyleBox["O", "TI"], TraditionalForm], "errors" -> {}, "input" -> "O",
       "state" -> "Boxes"|>,
     "TeXAssistantTemplate"]}], TraditionalForm]],ExpressionUUID->
  "99807643-11bf-fb43-88c3-bbfdaba0d624"],
 " \[EGrave] detta matrice d\[CloseCurlyQuote]osservabilit\[AGrave] e da cui \
ricavo lo stato iniziale ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["x", "TI"], "0"], "\[LongEqual]", 
         SuperscriptBox[
          StyleBox["O", "TI"], "-1"]}], TraditionalForm], "errors" -> {}, 
     "input" -> "x_0=O^{-1}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "66e1ed6d-95f5-4e45-b01d-1593ec6cc129"],
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {
       TemplateBox[<|"boxes" -> FormBox[
           RowBox[{
             StyleBox["G", "TI"], "(", "0", ")"}], TraditionalForm], 
         "errors" -> {}, "input" -> "G(0)", "state" -> "Boxes"|>,
        "TeXAssistantTemplate"]},
      {
       TemplateBox[<|
        "boxes" -> FormBox["0", TraditionalForm], "errors" -> {}, "input" -> 
         "0", "state" -> "Boxes"|>,
        "TeXAssistantTemplate"]},
      {
       TemplateBox[<|
        "boxes" -> FormBox["0", TraditionalForm], "errors" -> {}, "input" -> 
         "0", "state" -> "Boxes"|>,
        "TeXAssistantTemplate"]},
      {
       TemplateBox[<|
        "boxes" -> FormBox["0", TraditionalForm], "errors" -> {}, "input" -> 
         "0", "state" -> "Boxes"|>,
        "TeXAssistantTemplate"]}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "79e07465-292b-cf4f-85e5-41ad5f5a03a6"]
}], "Text",
 CellChangeTimes->{{3.933220724844164*^9, 3.933220726534947*^9}, {
  3.9332207767053638`*^9, 3.933220796216236*^9}, {3.9332209224309673`*^9, 
  3.9332211086557426`*^9}, {3.933221149487858*^9, 3.93322116388406*^9}, {
  3.9332212256346436`*^9, 3.933221233882265*^9}, {3.933221279709865*^9, 
  3.933221344253418*^9}, {3.933221400184471*^9, 
  3.93322143267062*^9}},ExpressionUUID->"4d5f1516-9065-454b-8f7d-\
f84ac0002fd7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Obs", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"C1", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"C1", ".", "A"}], ")"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "  ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"C1", ".", "A", ".", "A"}], ")"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"C1", ".", "A", ".", "A", ".", "A"}], ")"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.933221459514797*^9, 3.933221487179085*^9}, {
  3.933221549611214*^9, 3.9332215781308002`*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"ca62523b-4b3b-9544-9af4-fb53ddf4eed3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "3"}], ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "0", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "3"}], ",", "3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.933221579953087*^9, 3.933223746748602*^9, 
  3.933227261431423*^9},
 CellLabel->
  "Out[195]=",ExpressionUUID->"d18a126b-e6fe-3d41-a6e7-c1c1ce561a36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["x", "TI"], 
       RowBox[{"0", "neg"}]], TraditionalForm], "errors" -> {}, "input" -> 
    "x_{0\\text{neg}}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", " ", 
  RowBox[{
   RowBox[{"Inverse", "[", "Obs", "]"}], ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"G", "[", "0", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "}"}], ",", 
     RowBox[{"{", "0", "}"}], ",", " ", 
     RowBox[{"{", "0", "}"}], ",", " ", 
     RowBox[{"{", "0", "}"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.933221589978119*^9, 3.933221644994524*^9}, {
  3.933221681812042*^9, 3.933221685143751*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"e1d5cf4b-520c-9349-af41-78fd001f221c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["144", "5365"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["144", "5365"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", 
     FractionBox["144", "5365"]}], "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.933221646066006*^9, 3.933221687792799*^9, 
  3.933223749233958*^9, 3.933227263432249*^9},
 CellLabel->
  "Out[196]=",ExpressionUUID->"40dc9749-a58b-d34f-8745-c35bed3776c7"]
}, Open  ]],

Cell[TextData[{
 "A questo punto posso calcolare la risposta per ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["t", "TI"], ">", "0"}], TraditionalForm], "errors" -> {}, 
     "input" -> "t>0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "ff7d3267-6b84-7944-9c95-2593af92b1cd"],
 " tramire scomposizione in fratti semplici e formula elementare di Heaviside"
}], "Text",
 CellChangeTimes->{{3.93322173668227*^9, 3.933221756267042*^9}, {
  3.933221880845433*^9, 3.933221883765892*^9}, {3.9332219686539516`*^9, 
  3.9332219879051857`*^9}, {3.933227276918186*^9, 
  3.9332272892570457`*^9}},ExpressionUUID->"7725f305-f80c-794a-b11b-\
ebe5bfc97455"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ylibs", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"C1", ".", 
      RowBox[{"Inverse", "[", 
       RowBox[{
        RowBox[{"s", " ", 
         RowBox[{"IdentityMatrix", "[", "4", "]"}]}], "-", "A"}], "]"}], ".", 
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["x", "TI"], 
           RowBox[{"0", "neg"}]], TraditionalForm], "errors" -> {}, "input" -> 
        "x_{0\\text{neg}}", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"]}], ")"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9332219015658493`*^9, 3.9332219512322884`*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"f7c3d6b1-acd0-624c-ba1c-159227caf076"],

Cell[BoxData[
 FractionBox[
  RowBox[{"432", " ", 
   RowBox[{"(", 
    RowBox[{"4422", "+", 
     RowBox[{"2473", " ", "s"}], "+", 
     RowBox[{"960", " ", 
      SuperscriptBox["s", "2"]}], "+", 
     RowBox[{"144", " ", 
      SuperscriptBox["s", "3"]}]}], ")"}]}], 
  RowBox[{"5365", " ", 
   RowBox[{"(", 
    RowBox[{"5365", "+", 
     RowBox[{"4422", " ", "s"}], "+", 
     RowBox[{"2473", " ", 
      SuperscriptBox["s", "2"]}], "+", 
     RowBox[{"960", " ", 
      SuperscriptBox["s", "3"]}], "+", 
     RowBox[{"144", " ", 
      SuperscriptBox["s", "4"]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.933221953558531*^9, 3.933223751311825*^9, 
  3.933227266279335*^9},
 CellLabel->
  "Out[197]=",ExpressionUUID->"38cf9d83-4dfd-4641-abcd-7bf7bed7848d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["H", "TI"], "1"], TraditionalForm], "errors" -> {}, "input" -> 
     "H_1", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], 
   RowBox[{"s", "+", "3", "+", 
    FractionBox["\[ImaginaryI]", "4"]}]], "+", 
  FractionBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["H", "TI"], "2"], TraditionalForm], "errors" -> {}, "input" -> 
     "H_2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], 
   RowBox[{"s", "+", "3", "-", 
    FractionBox["\[ImaginaryI]", "4"]}]], "+", 
  FractionBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["H", "TI"], "3"], TraditionalForm], "errors" -> {}, "input" -> 
     "H_3", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], 
   RowBox[{"s", "+", 
    FractionBox["1", "3"], "+", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}]], "+", 
  FractionBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["H", "TI"], "4"], TraditionalForm], "errors" -> {}, "input" -> 
     "H_4", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], 
   RowBox[{"s", "+", 
    FractionBox["1", "3"], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}]]}]], "Input",
 CellChangeTimes->{{3.933222062348574*^9, 3.933222123068172*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"61e805e3-5097-a644-b3a7-fef1d8c62242"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SubscriptBox["H", "1"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "+", 
      FractionBox["\[ImaginaryI]", "4"]}], ")"}], "+", "s"}]], "+", 
  FractionBox[
   SubscriptBox["H", "2"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "-", 
      FractionBox["\[ImaginaryI]", "4"]}], ")"}], "+", "s"}]], "+", 
  FractionBox[
   SubscriptBox["H", "3"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", "3"], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], "+", "s"}]], "+", 
  FractionBox[
   SubscriptBox["H", "4"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", "3"], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], "+", "s"}]]}]], "Output",
 CellChangeTimes->{3.933222066682682*^9, 3.933222160425503*^9, 
  3.933223755955815*^9, 3.93322726847933*^9},
 CellLabel->
  "Out[198]=",ExpressionUUID->"4bc8494b-46ad-564a-92e5-a949b4679d23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["H", "TI"], "1"], TraditionalForm], "errors" -> {}, "input" -> 
    "H_1", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"s", "+", "3", "+", 
       FractionBox["\[ImaginaryI]", "4"]}], ")"}], "ylibs"}], ",", " ", 
    RowBox[{"s", " ", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "3"}], "-", 
      FractionBox["\[ImaginaryI]", "4"]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.933222178088393*^9, 3.93322219940049*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"7909ca79-01d4-b149-ae3d-cabe223e2e7f"],

Cell[BoxData[
 RowBox[{
  FractionBox["2692224", "74476205"], "+", 
  FractionBox[
   RowBox[{"2612736", " ", "\[ImaginaryI]"}], "14895241"]}]], "Output",
 CellChangeTimes->{3.933222213567108*^9, 3.933223757982231*^9, 
  3.9332272933106422`*^9},
 CellLabel->
  "Out[199]=",ExpressionUUID->"3e0eebac-7ae4-0a49-8cc8-f4d59c78f1ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["H", "TI"], "2"], TraditionalForm], "errors" -> {}, "input" -> 
    "H_2", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"s", "+", "3", "-", 
       FractionBox["\[ImaginaryI]", "4"]}], ")"}], "ylibs"}], ",", " ", 
    RowBox[{"s", " ", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "3"}], "+", 
      FractionBox["\[ImaginaryI]", "4"]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.93322222917749*^9, 3.933222258297966*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"2ccba164-8cf8-0f48-9062-b51d7128f0ca"],

Cell[BoxData[
 RowBox[{
  FractionBox["2692224", "74476205"], "-", 
  FractionBox[
   RowBox[{"2612736", " ", "\[ImaginaryI]"}], "14895241"]}]], "Output",
 CellChangeTimes->{3.933222265055977*^9, 3.93322375961984*^9, 
  3.9332272955634747`*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"74aa586c-c477-b14a-b0c9-6b5854c66312"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["H", "TI"], "3"], TraditionalForm], "errors" -> {}, "input" -> 
    "H_3", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"s", "+", 
       FractionBox["1", "3"], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], "ylibs"}], ",", 
    RowBox[{"s", " ", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "3"]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9332222804512863`*^9, 3.9332222869927025`*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"e59f54ea-24fe-4e43-90a5-c5fa42fdf1fe"],

Cell[BoxData[
 RowBox[{
  FractionBox["390744", "95021365"], "+", 
  FractionBox[
   RowBox[{"3134052", " ", "\[ImaginaryI]"}], "95021365"]}]], "Output",
 CellChangeTimes->{3.933222298262537*^9, 3.933223761592619*^9, 
  3.933227297592291*^9},
 CellLabel->
  "Out[201]=",ExpressionUUID->"ff1b0215-119e-2546-94ae-240fb15fa59d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["H", "TI"], "4"], TraditionalForm], "errors" -> {}, "input" -> 
    "H_4", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"s", "+", 
       FractionBox["1", "3"], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], "ylibs"}], ",", 
    RowBox[{"s", " ", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "3"]}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.933222304042827*^9, 3.9332223115915546`*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"33491792-7dcc-1a42-9de7-18fdc9b0dfd7"],

Cell[BoxData[
 RowBox[{
  FractionBox["390744", "95021365"], "-", 
  FractionBox[
   RowBox[{"3134052", " ", "\[ImaginaryI]"}], "95021365"]}]], "Output",
 CellChangeTimes->{3.9332223140399437`*^9, 3.9332237631695976`*^9, 
  3.9332272996989574`*^9},
 CellLabel->
  "Out[202]=",ExpressionUUID->"55d0b065-7f39-d34d-87e9-4991789eda05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["H", "TI"], "12"], TraditionalForm], "errors" -> {}, "input" -> 
    "H_{12}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"ComplexExpand", "[", 
    RowBox[{
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["H", "TI"], "1"], TraditionalForm], "errors" -> {}, 
        "input" -> "H_1", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "-", 
          FractionBox["\[ImaginaryI]", "4"]}], ")"}], "t"}]]}], "+", 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["H", "TI"], "2"], TraditionalForm], "errors" -> {}, 
        "input" -> "H_2", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          FractionBox["\[ImaginaryI]", "4"]}], ")"}], "t"}]]}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.933222327082697*^9},
 CellLabel->
  "In[203]:=",ExpressionUUID->"bdc2dda5-e6fb-f140-afdd-be68aa5adf71"],

Cell[BoxData[
 FractionBox[
  RowBox[{"6912", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "3"}], " ", "t"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"779", " ", 
      RowBox[{"Cos", "[", 
       FractionBox["t", "4"], "]"}]}], "+", 
     RowBox[{"3780", " ", 
      RowBox[{"Sin", "[", 
       FractionBox["t", "4"], "]"}]}]}], ")"}]}], "74476205"]], "Output",
 CellChangeTimes->{3.9332223485727468`*^9, 3.9332237664645214`*^9, 
  3.9332273014514713`*^9},
 CellLabel->
  "Out[203]=",ExpressionUUID->"0305c686-ee6e-734a-b7ab-041977872529"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"boxes" -> FormBox[
      SubscriptBox[
       StyleBox["H", "TI"], "34"], TraditionalForm], "errors" -> {}, "input" -> 
    "H_{34}", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"ComplexExpand", "[", 
    RowBox[{
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["H", "TI"], "3"], TraditionalForm], "errors" -> {}, 
        "input" -> "H_3", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "3"]}], "-", 
          RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], "t"}]]}], "+", 
     RowBox[{
      TemplateBox[<|"boxes" -> FormBox[
          SubscriptBox[
           StyleBox["H", "TI"], "4"], TraditionalForm], "errors" -> {}, 
        "input" -> "H_4", "state" -> "Boxes"|>,
       "TeXAssistantTemplate"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "3"]}], "+", 
          RowBox[{"2", " ", "\[ImaginaryI]"}]}], ")"}], "t"}]]}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.9332223599430103`*^9},
 CellLabel->
  "In[204]:=",ExpressionUUID->"ccb6c2ee-fe70-6445-b312-4cd097a49b40"],

Cell[BoxData[
 FractionBox[
  RowBox[{"648", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "t"}], "/", "3"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1206", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "t"}], "]"}]}], "+", 
     RowBox[{"9673", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}]}], "95021365"]], "Output",
 CellChangeTimes->{3.9332223766219277`*^9, 3.933223767971455*^9, 
  3.933227303084402*^9},
 CellLabel->
  "Out[204]=",ExpressionUUID->"0c832670-7d95-8d4f-bd87-4f596d43fca7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ylib", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["H", "TI"], "12"], TraditionalForm], "errors" -> {}, 
      "input" -> "H_{12}", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], 
    RowBox[{"UnitStep", "[", "t", "]"}]}], "+", 
   RowBox[{
    TemplateBox[<|"boxes" -> FormBox[
        SubscriptBox[
         StyleBox["H", "TI"], "34"], TraditionalForm], "errors" -> {}, 
      "input" -> "H_{34}", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"], 
    RowBox[{"UnitStep", "[", "t", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.933222419241874*^9, 3.933222463319399*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"335e1bd9-0061-7745-ba32-3a8e80dd36f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ylib", "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.933222468235855*^9, 3.933222469755684*^9}},
 CellLabel->
  "In[206]:=",ExpressionUUID->"53f041a4-81ca-df44-b309-0599968030e7"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"6912", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "3"}], " ", "t"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"779", " ", 
       RowBox[{"Cos", "[", 
        FractionBox["t", "4"], "]"}]}], "+", 
      RowBox[{"3780", " ", 
       RowBox[{"Sin", "[", 
        FractionBox["t", "4"], "]"}]}]}], ")"}], " ", 
    RowBox[{"UnitStep", "[", "t", "]"}]}], "74476205"], "+", 
  FractionBox[
   RowBox[{"648", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "t"}], "/", "3"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"1206", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "t"}], "]"}]}], "+", 
      RowBox[{"9673", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"UnitStep", "[", "t", "]"}]}], "95021365"]}]], "Output",
 CellChangeTimes->{3.933222470524635*^9, 3.9332237722816696`*^9, 
  3.93322730841864*^9},
 CellLabel->
  "Out[206]=",ExpressionUUID->"f921f06a-cc65-004b-8b8b-97bc15668ff5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"ylib", "[", "t", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9332226079423947`*^9, 3.933222627997923*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"64726f86-a384-d140-b395-ce422564f3f3"],

Cell[BoxData[
 FractionBox[
  RowBox[{"216", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "3"}], " ", "t"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"922336", " ", 
      RowBox[{"Cos", "[", 
       FractionBox["t", "4"], "]"}]}], "+", 
     RowBox[{"4475520", " ", 
      RowBox[{"Sin", "[", 
       FractionBox["t", "4"], "]"}]}], "+", 
     RowBox[{"87", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"8", " ", "t"}], "/", "3"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1206", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "+", 
        RowBox[{"9673", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
   RowBox[{"UnitStep", "[", "t", "]"}]}], "2755619585"]], "Output",
 CellChangeTimes->{{3.933222612754473*^9, 3.9332226303719635`*^9}, 
   3.933223776511275*^9, 3.933227311077139*^9},
 CellLabel->
  "Out[207]=",ExpressionUUID->"687ea5d9-2dbf-d641-a4ea-8e727f5ac243"]
}, Open  ]],

Cell[TextData[{
 "Verifico la correttezza del risultato tramite antitrasformata di Laplace \
della risposta nel dominio della variabile complessa ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["s", "TI"], TraditionalForm], "errors" -> {}, "input" -> "s", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4c775f5a-4d5c-5043-9cc3-55fb4cc58dc4"]
}], "Text",
 CellChangeTimes->{{3.9332224925433865`*^9, 3.933222525643345*^9}, {
  3.9332273303875446`*^9, 
  3.933227341294506*^9}},ExpressionUUID->"3bb0ab56-6ecb-2948-b1e2-\
af5421e30cf1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ylibt", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ComplexExpand", "[", 
    RowBox[{"InverseLaplaceTransform", "[", 
     RowBox[{"ylibs", ",", "s", ",", "t"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9332225349361687`*^9, 3.9332225761523056`*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"1c717783-aa21-6c4a-831a-be5d03fb48fd"],

Cell[BoxData[
 FractionBox[
  RowBox[{"216", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "3"}], " ", "t"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"922336", " ", 
      RowBox[{"Cos", "[", 
       FractionBox["t", "4"], "]"}]}], "+", 
     RowBox[{"4475520", " ", 
      RowBox[{"Sin", "[", 
       FractionBox["t", "4"], "]"}]}], "+", 
     RowBox[{"87", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"8", " ", "t"}], "/", "3"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1206", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "+", 
        RowBox[{"9673", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
  "2755619585"]], "Output",
 CellChangeTimes->{{3.933222558852209*^9, 3.933222580357458*^9}, 
   3.933223780825798*^9, 3.933227314423462*^9},
 CellLabel->
  "Out[208]=",ExpressionUUID->"ba37134e-0921-1742-ab69-f702d11eae93"]
}, Open  ]],

Cell[TextData[{
 "Combino le risposte per ottenere la risposta al segnale ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"1", "(", 
         RowBox[{"-", 
           StyleBox["t", "TI"]}], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "1(-t)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "ad79b4a0-28b1-d541-9b5f-38454e23dacd"],
 " e ne faccio il grafico."
}], "Text",
 CellChangeTimes->{{3.933223053484569*^9, 
  3.9332230976458893`*^9}},ExpressionUUID->"5d0cf8ca-fbbd-6d48-a77a-\
958bf7e7ebac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "[", "t_", "]"}], ":=", 
  FormBox[
   RowBox[{
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {"yneg", 
           RowBox[{"t", "<", "0"}]},
          {"ylibt", 
           RowBox[{"t", ">=", "0"}]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}},
         Selectable->True]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False,
     StripWrapperBoxes->True], " "}],
   TraditionalForm]}]], "Input",
 CellChangeTimes->{{3.933223105950012*^9, 3.93322311123201*^9}, {
  3.933223173497724*^9, 3.933223243794951*^9}, {3.933223306687208*^9, 
  3.933223342961277*^9}},
 CellLabel->
  "In[209]:=",ExpressionUUID->"e6847a43-5c40-784e-ae8e-3a9007d5cc96"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y", "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.9332236698239193`*^9, 3.9332236707926254`*^9}},
 CellLabel->
  "In[210]:=",ExpressionUUID->"fe4d9b8c-a558-2a4c-bf15-4985eb7219be"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox["432", "5365"], 
        RowBox[{"t", "<", "0"}]},
       {
        FractionBox[
         RowBox[{"216", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "3"}], " ", "t"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"922336", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["t", "4"], "]"}]}], "+", 
            RowBox[{"4475520", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["t", "4"], "]"}]}], "+", 
            RowBox[{"87", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"8", " ", "t"}], "/", "3"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"1206", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "t"}], "]"}]}], "+", 
               RowBox[{"9673", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
         "2755619585"], 
        RowBox[{"t", "\[GreaterEqual]", "0"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{{3.933223671684141*^9, 3.933223683183088*^9}, 
   3.93322378454554*^9, 3.9332273502487164`*^9},
 CellLabel->
  "Out[210]=",ExpressionUUID->"4aa905c8-6210-0543-8bb9-459c963c08ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"y", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.933223265854868*^9, 3.9332233224472313`*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"1194deca-4b7c-9c4e-aeab-be3681e85c52"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQXfvc99P//8YHpuwJCBGdu8V+SkmCd8NsBH81Y/ES
BnMEnzXV3Ugy1gjOF75xNGfRREM4P+jwrGTNUwZwfvV725wJj/Xh/B3ls7LW
++vB+X6TQhX+zdSB893n7vXzeKMF5y87XnmtOFoTzo9rmSJ6foU6nF+XwLyO
W1gNzmfQld/v3KoC59/qntm++qoSnC/DlbHyi5MinJ9tqsV6W0Yezk82v7fi
8GFpOF+rwup/3hIJOH/h3eAjlY6icP7zRlEbdwkhOH/XVA3XF2G8cL7By5tf
9Oeywfkuu25z/g1jgPMLVq7/ISj8eT+MH5amvPBSzU04X87YQ2eR4Ck4v+PY
rwsR8l1wPgDy+NKe
          "]], LineBox[CompressedData["
1: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
nRCoqsKBzs+a/vj3jwKbX52j70qyo/8Bb1eHsQ==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], {}}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGCQAWIQXfvc99P//8YHpuwJCBGdu8V+SkmCd8NsBH81Y/ES
BnMEnzXV3Ugy1gjOF75xNGfRREM4P+jwrGTNUwZwfvV725wJj/Xh/B3ls7LW
++vB+X6TQhX+zdSB893n7vXzeKMF5y87XnmtOFoTzo9rmSJ6foU6nF+XwLyO
W1gNzmfQld/v3KoC59/qntm++qoSnC/DlbHyi5MinJ9tqsV6W0Yezk82v7fi
8GFpOF+rwup/3hIJOH/h3eAjlY6icP7zRlEbdwkhOH/XVA3XF2G8cL7By5tf
9Oeywfkuu25z/g1jgPMLVq7/ISj8eT+MH5amvPBSzU04X87YQ2eR4Ck4v+PY
rwsR8l1wPgDy+NKe
              "]], 
             Line[CompressedData["
1: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
nRCoqsKBzs+a/vj3jwKbX52j70qyo/8Bb1eHsQ==
              "]]}, "Charting`Private`Tag#1"], {}}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGCQAWIQXfvc99P//8YHpuwJCBGdu8V+SkmCd8NsBH81Y/ES
BnMEnzXV3Ugy1gjOF75xNGfRREM4P+jwrGTNUwZwfvV725wJj/Xh/B3ls7LW
++vB+X6TQhX+zdSB893n7vXzeKMF5y87XnmtOFoTzo9rmSJ6foU6nF+XwLyO
W1gNzmfQld/v3KoC59/qntm++qoSnC/DlbHyi5MinJ9tqsV6W0Yezk82v7fi
8GFpOF+rwup/3hIJOH/h3eAjlY6icP7zRlEbdwkhOH/XVA3XF2G8cL7By5tf
9Oeywfkuu25z/g1jgPMLVq7/ISj8eT+MH5amvPBSzU04X87YQ2eR4Ck4v+PY
rwsR8l1wPgDy+NKe
          "]], 
         Line[CompressedData["
1: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
nRCoqsKBzs+a/vj3jwKbX52j70qyo/8Bb1eHsQ==
          "]]}, "Charting`Private`Tag#1"], {}}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.933223313543743*^9, 3.9332233233499184`*^9}, 
   3.9332233697620754`*^9, 3.933223690490761*^9, 3.933223786449415*^9, 
   3.9332273523309526`*^9},
 CellLabel->
  "Out[211]=",ExpressionUUID->"86480831-dc3d-3249-ad61-d7a9fef62ba6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1141.2, 574.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
SpellingDictionaries->{"CorrectWords"->{"modi", "siccome"}},
Magnification:>0.8 Inherited,
FrontEndVersion->"14.0 for Microsoft Windows (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0aa61cc6-34ec-8b49-82a0-22a6cdae9d6e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 154, 3, 78, "Title",ExpressionUUID->"5ce9fb83-77c7-5942-a9b1-36df5a575364"],
Cell[737, 27, 343, 5, 22, "Input",ExpressionUUID->"ae4131a3-9220-1048-b597-0d08cd57b530"],
Cell[1083, 34, 1575, 41, 50, "Text",ExpressionUUID->"7e122f62-ffa5-5449-b5b4-d98f427e8c52"],
Cell[CellGroupData[{
Cell[2683, 79, 1378, 44, 54, "Input",ExpressionUUID->"03ed55ed-5a8b-9842-b9d1-82f8a823555a"],
Cell[4064, 125, 1472, 37, 40, "Output",ExpressionUUID->"2348ba9d-a7fb-a742-a64b-8cb4db780b2b"],
Cell[5539, 164, 933, 19, 40, "Output",ExpressionUUID->"3723f541-1e6e-3246-9585-4069f0090a46"],
Cell[6475, 185, 858, 16, 25, "Output",ExpressionUUID->"2f00c8a2-cfd3-2c49-aa22-33264a866e39"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7370, 206, 332, 5, 54, "Input",ExpressionUUID->"c6de9b83-6ae3-9642-aa73-bf606e17e796"],
Cell[7705, 213, 1162, 38, 90, "Output",ExpressionUUID->"b1c031f3-d90d-4c4b-8930-7d842e897ffd"],
Cell[8870, 253, 731, 24, 90, "Output",ExpressionUUID->"0cb5f8c4-ec0c-c442-8d21-49620114bbc2"],
Cell[9604, 279, 705, 21, 36, "Output",ExpressionUUID->"4a362c0d-cf19-0649-a622-3ac5208464c0"]
}, Open  ]],
Cell[10324, 303, 1076, 29, 30, "Text",ExpressionUUID->"d18423eb-373d-fa4e-8982-17613c7e7e1a"],
Cell[CellGroupData[{
Cell[11425, 336, 177, 3, 54, "Section",ExpressionUUID->"03589a0e-456b-8f44-8fec-ebe6c3f1e9e1"],
Cell[11605, 341, 648, 15, 46, "Text",ExpressionUUID->"a4e49a75-afe3-594d-8106-27844cb31aa5"],
Cell[12256, 358, 452, 9, 28, "Text",ExpressionUUID->"2fce6806-df1f-7140-b5be-5c21d2f56605"],
Cell[CellGroupData[{
Cell[12733, 371, 290, 5, 22, "Input",ExpressionUUID->"da8dc314-3e76-4147-a344-10f8da725c74"],
Cell[13026, 378, 866, 22, 40, "Output",ExpressionUUID->"e62b490f-05a5-0747-905e-b22fc8d37754"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13929, 405, 273, 5, 22, "Input",ExpressionUUID->"664ffdc8-04be-bf4a-a5ca-48e56f453a0c"],
Cell[14205, 412, 499, 14, 42, "Output",ExpressionUUID->"df9158e6-d469-3e46-b503-e922e06e81d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14741, 431, 228, 4, 22, "Input",ExpressionUUID->"4ab878ef-c4f2-3442-be66-c031ffc1b213"],
Cell[14972, 437, 904, 27, 40, "Output",ExpressionUUID->"0924cea2-d38a-c249-bb1f-66c998037f76"]
}, Open  ]],
Cell[15891, 467, 1425, 22, 83, "Text",ExpressionUUID->"6c07f6ad-a257-a84e-a803-531b5d893650"],
Cell[CellGroupData[{
Cell[17341, 493, 513, 10, 22, "Input",ExpressionUUID->"27a73e67-5255-ed4e-87b8-95ec36dab413"],
Cell[17857, 505, 783, 21, 40, "Output",ExpressionUUID->"b87f8a0c-c896-8e44-8485-be53074197fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18677, 531, 460, 10, 22, "Input",ExpressionUUID->"1758f0f1-01e3-bd49-babc-1865412efaab"],
Cell[19140, 543, 750, 20, 40, "Output",ExpressionUUID->"04e19913-c7dd-2244-af6d-9449d623d0ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19927, 568, 465, 10, 22, "Input",ExpressionUUID->"dbe2fb81-fb44-be4e-b3b9-92356bd35168"],
Cell[20395, 580, 749, 21, 40, "Output",ExpressionUUID->"884042a0-93d2-c144-a176-e6bf2d8b7064"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21181, 606, 461, 10, 22, "Input",ExpressionUUID->"9328193b-e594-ac45-a942-508f0fd17532"],
Cell[21645, 618, 751, 21, 40, "Output",ExpressionUUID->"d27705e6-05fa-f744-8997-c14919427ae9"]
}, Open  ]],
Cell[22411, 642, 1749, 38, 48, "Text",ExpressionUUID->"8439b9bc-f377-5248-ae6a-b12c00b78d7e"],
Cell[CellGroupData[{
Cell[24185, 684, 395, 8, 22, "Input",ExpressionUUID->"2ca41ff2-a958-b84d-93a8-a075c70657a7"],
Cell[24583, 694, 330, 5, 25, "Output",ExpressionUUID->"baeebe94-bce3-d244-a930-a2d3fe9d4e3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24950, 704, 342, 7, 22, "Input",ExpressionUUID->"9a24dacb-5e34-8641-8b67-ad54281e502c"],
Cell[25295, 713, 313, 5, 40, "Output",ExpressionUUID->"74da0723-5113-5c42-a349-7ab8075157eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25645, 723, 293, 6, 22, "Input",ExpressionUUID->"0ac631cc-f094-5648-9f0b-103f8b467275"],
Cell[25941, 731, 307, 6, 40, "Output",ExpressionUUID->"7c4d2a9e-f683-9349-bd21-d26c763a7d26"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26285, 742, 297, 6, 22, "Input",ExpressionUUID->"e2a621a6-7c9a-e04c-b067-97e3b4f52223"],
Cell[26585, 750, 265, 4, 25, "Output",ExpressionUUID->"2c6c9c17-22ee-274c-bb94-2b34b58b7785"]
}, Open  ]],
Cell[26865, 757, 195, 3, 28, "Text",ExpressionUUID->"af74bfef-33fc-e84d-9b03-5b51b9c17996"],
Cell[CellGroupData[{
Cell[27085, 764, 555, 11, 22, "Input",ExpressionUUID->"6ba00a74-a00e-e34c-b884-494201d45b59"],
Cell[27643, 777, 505, 11, 40, "Output",ExpressionUUID->"790593c9-6061-104e-9e85-b24e1f0ce7df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28185, 793, 585, 11, 22, "Input",ExpressionUUID->"c3dd8b32-07bb-d241-bd81-f62b1586770f"],
Cell[28773, 806, 447, 10, 40, "Output",ExpressionUUID->"b439ff2c-dc8f-cf40-adac-bfe2bf81e71c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29257, 821, 538, 10, 22, "Input",ExpressionUUID->"45678141-15b1-7d42-8463-5eb4f8fd9e20"],
Cell[29798, 833, 447, 10, 25, "Output",ExpressionUUID->"6b4e0236-033f-e54c-95c7-27068f45c337"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30282, 848, 712, 13, 22, "Input",ExpressionUUID->"4d1efa55-0434-544b-8f3f-6ab97358e2b7"],
Cell[30997, 863, 501, 11, 25, "Output",ExpressionUUID->"b3a7180b-30a4-ac4a-b6cf-e073492fa431"]
}, Open  ]],
Cell[31513, 877, 786, 16, 31, "Text",ExpressionUUID->"cbed180a-6a77-de47-98ed-5877ca139f5e"],
Cell[CellGroupData[{
Cell[32324, 897, 249, 5, 37, "Input",ExpressionUUID->"33ac139a-18cd-a543-8a79-62157b4e4575"],
Cell[32576, 904, 228, 4, 25, "Output",ExpressionUUID->"e533e003-98e3-ac4e-8fce-fdfc47f07336"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32841, 913, 249, 5, 37, "Input",ExpressionUUID->"06ccb40f-3e05-2048-900c-79375263c38d"],
Cell[33093, 920, 202, 3, 25, "Output",ExpressionUUID->"5eaa79fc-0eeb-514c-85d8-4fc74870e6a7"]
}, Open  ]],
Cell[33310, 926, 399, 8, 28, "Text",ExpressionUUID->"f27ad779-0e03-b640-b414-9193398ee29b"],
Cell[33712, 936, 877, 20, 48, "Text",ExpressionUUID->"ffdeecb7-326c-4640-9f50-dd426d509284"],
Cell[CellGroupData[{
Cell[34614, 960, 318, 6, 22, "Input",ExpressionUUID->"c994a244-ba47-9947-9d7b-31cf1b7dc251"],
Cell[34935, 968, 2356, 68, 71, "Output",ExpressionUUID->"e3666375-5727-924d-b896-e06a3cdc972f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37328, 1041, 215, 3, 22, "Input",ExpressionUUID->"370f4935-ca48-fd47-9b02-6a3ce542aaa6"],
Cell[37546, 1046, 2517, 76, 98, "Output",ExpressionUUID->"9c02069f-90f8-e746-a150-d1dfacd23d9a"]
}, Open  ]],
Cell[40078, 1125, 744, 13, 28, "Text",ExpressionUUID->"ef7a06ec-d703-754d-9931-07e0d815c3cc"],
Cell[CellGroupData[{
Cell[40847, 1142, 993, 26, 22, "Input",ExpressionUUID->"a900fd09-90c9-be40-829d-2f301d63d494"],
Cell[41843, 1170, 1148, 32, 40, "Output",ExpressionUUID->"17ee1f36-a1d5-c442-b1f3-0090187df809"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43028, 1207, 214, 3, 22, "Input",ExpressionUUID->"8788bfea-56a2-194d-b82b-322de499568e"],
Cell[43245, 1212, 1274, 40, 97, "Output",ExpressionUUID->"b2384b67-d2d4-ee48-95e5-a9e88665277a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44556, 1257, 320, 7, 22, "Input",ExpressionUUID->"07c6bd4f-3036-2848-bef3-ce84726612c7"],
Cell[44879, 1266, 857, 24, 40, "Output",ExpressionUUID->"8bb06c24-4f82-e247-8a99-973d22a87a4b"]
}, Open  ]],
Cell[45751, 1293, 257, 4, 28, "Text",ExpressionUUID->"701e68b1-da87-3547-a511-c9ec46cc9149"],
Cell[CellGroupData[{
Cell[46033, 1301, 229, 3, 22, "Input",ExpressionUUID->"2ef751c1-1609-764c-bd77-5e1f3dddb7ce"],
Cell[46265, 1306, 978, 32, 104, "Output",ExpressionUUID->"1e6438cc-875b-384f-a1bf-6087efa42495"]
}, Open  ]],
Cell[47258, 1341, 334, 7, 28, "Text",ExpressionUUID->"103a5152-b40c-094e-afb6-521852c97912"],
Cell[CellGroupData[{
Cell[47617, 1352, 285, 5, 22, "Input",ExpressionUUID->"f36fd92b-d9f3-1d44-8b36-74ae0f6d3ed4"],
Cell[47905, 1359, 2291, 72, 97, "Output",ExpressionUUID->"6ba404f6-d546-0144-b8da-fd681bc86f73"]
}, Open  ]],
Cell[50211, 1434, 286, 6, 28, "Text",ExpressionUUID->"e67c09c1-49db-2745-8a3b-da349d135d36"],
Cell[CellGroupData[{
Cell[50522, 1444, 1460, 35, 22, "Input",ExpressionUUID->"8cff00e4-2a3b-214b-aa12-2cd8dc2bb562"],
Cell[51985, 1481, 302856, 5109, 186, "Output",ExpressionUUID->"c2ebf6d5-a221-0e4d-b707-018039158d65"]
}, Open  ]],
Cell[354856, 6593, 290, 7, 28, "Text",ExpressionUUID->"7c1fc617-3d7e-834e-b05d-30d8e293aebf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[355183, 6605, 212, 4, 54, "Section",ExpressionUUID->"dd9a27f0-02a7-4249-8e02-3c2a1f63596e"],
Cell[355398, 6611, 3844, 93, 93, "Text",ExpressionUUID->"fd659302-cf29-1b40-a768-e9fa479cb74b"],
Cell[CellGroupData[{
Cell[359267, 6708, 594, 16, 25, "Input",ExpressionUUID->"ed39931d-7935-224d-8815-0568ca5ada8c"],
Cell[359864, 6726, 445, 11, 25, "Output",ExpressionUUID->"a8d80e66-eebe-7942-ac87-3d5b2dc9668c"]
}, Open  ]],
Cell[360324, 6740, 1209, 28, 48, "Text",ExpressionUUID->"2eca2b9d-d035-9e43-98dc-0e6906a2a068"],
Cell[361536, 6770, 945, 23, 26, "Input",ExpressionUUID->"cde1e3da-b94a-0941-8ee5-ff12de6a6a0c"],
Cell[CellGroupData[{
Cell[362506, 6797, 492, 12, 25, "Input",ExpressionUUID->"45eada6a-72c7-0e49-8078-8817c17e9313"],
Cell[363001, 6811, 4956, 140, 137, "Output",ExpressionUUID->"7a066672-88c0-db44-8ada-7ce2c2344ab1"]
}, Open  ]],
Cell[367972, 6954, 2328, 52, 73, "Text",ExpressionUUID->"c8ab7b35-99f4-8d4f-9c04-2709be3b58f8"],
Cell[CellGroupData[{
Cell[370325, 7010, 327, 6, 24, "Input",ExpressionUUID->"c812def7-2ff1-cb45-9ca1-6fe6b824ac31"],
Cell[370655, 7018, 1167, 32, 40, "Output",ExpressionUUID->"c3da4aea-16da-e547-b9fa-bc62b2e1aed9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[371859, 7055, 405, 8, 29, "Input",ExpressionUUID->"e6c88a90-7b1f-4d4c-9531-6fef798f9e77"],
Cell[372267, 7065, 1276, 40, 97, "Output",ExpressionUUID->"8e35462e-7929-004c-84bb-0bb3f20c759d"]
}, Open  ]],
Cell[373558, 7108, 514, 13, 31, "Text",ExpressionUUID->"a7023b68-1653-8f43-9717-2f569dabc1b3"],
Cell[CellGroupData[{
Cell[374097, 7125, 670, 16, 25, "Input",ExpressionUUID->"80019232-0d7a-6349-83a2-0a35793c9f49"],
Cell[374770, 7143, 624, 16, 40, "Output",ExpressionUUID->"d939a3c4-63a0-e34a-9ff2-14a664755628"]
}, Open  ]],
Cell[375409, 7162, 181, 3, 28, "Text",ExpressionUUID->"de103337-479b-4243-b2e6-d11eacd065f9"],
Cell[CellGroupData[{
Cell[375615, 7169, 647, 11, 25, "Input",ExpressionUUID->"7112edee-ebf7-f340-95ab-a3b80d6ceed2"],
Cell[376265, 7182, 880, 24, 40, "Output",ExpressionUUID->"9ddbf469-7bc1-914d-add3-41fb5f7f7f80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377182, 7211, 403, 7, 26, "Input",ExpressionUUID->"9c299b16-4a11-0f4b-bcc8-f1132dbcf844"],
Cell[377588, 7220, 998, 32, 104, "Output",ExpressionUUID->"c00200ad-792a-7a48-8385-9cd28976c191"]
}, Open  ]],
Cell[378601, 7255, 595, 15, 30, "Text",ExpressionUUID->"6cc32fb5-fdc9-6e4d-9199-417e5706738a"],
Cell[379199, 7272, 1097, 26, 26, "Input",ExpressionUUID->"ae9fafdd-49b5-a142-bdc5-33bdf8479b2f"],
Cell[CellGroupData[{
Cell[380321, 7302, 539, 13, 25, "Input",ExpressionUUID->"e2e9964a-9c3c-d44c-a2ff-bc1c4aec3c7b"],
Cell[380863, 7317, 5005, 141, 137, "Output",ExpressionUUID->"6583dc67-e45e-2a4b-bd65-5e3ef2824891"]
}, Open  ]],
Cell[385883, 7461, 248, 4, 28, "Text",ExpressionUUID->"ffdae7a2-1873-f646-b075-e069bb345f2f"],
Cell[386134, 7467, 437, 8, 28, "Text",ExpressionUUID->"4ec19c47-3b0f-da4f-9a19-b54d35f00016"],
Cell[CellGroupData[{
Cell[386596, 7479, 589, 14, 26, "Input",ExpressionUUID->"ebabbde7-6946-2448-84aa-72c0c6713add"],
Cell[387188, 7495, 383, 9, 25, "Output",ExpressionUUID->"01eb1192-65cf-7e4e-ba98-760cdfca6cda"]
}, Open  ]],
Cell[387586, 7507, 1067, 26, 30, "Text",ExpressionUUID->"8766c005-0e61-5141-bea2-5f9a5b66207f"],
Cell[388656, 7535, 996, 23, 26, "Input",ExpressionUUID->"e805f967-f07e-894f-8383-a97248c7fdf9"],
Cell[CellGroupData[{
Cell[389677, 7562, 416, 9, 25, "Input",ExpressionUUID->"0ad8a39d-5b28-0d4e-80e2-854b27d41842"],
Cell[390096, 7573, 1238, 34, 48, "Output",ExpressionUUID->"1bc9d6b0-3974-0446-a97f-04038aae0adb"]
}, Open  ]],
Cell[391349, 7610, 202, 3, 28, "Text",ExpressionUUID->"835e632c-b518-114f-915a-4956bae8a75e"],
Cell[CellGroupData[{
Cell[391576, 7617, 588, 14, 26, "Input",ExpressionUUID->"38bad3db-004b-1f4a-88ee-af52854f1bc0"],
Cell[392167, 7633, 91689, 1549, 188, "Output",ExpressionUUID->"81df49cc-490d-404c-8303-2b2941060255"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[483905, 9188, 323, 7, 54, "Section",ExpressionUUID->"a0e4216d-8cfb-a74b-a152-fb5835604851"],
Cell[484231, 9197, 1556, 31, 86, "Text",ExpressionUUID->"6710f3a8-d88f-8e4f-a55f-d2a63f32a393"],
Cell[CellGroupData[{
Cell[485812, 9232, 1242, 31, 26, "Input",ExpressionUUID->"0e86518f-3344-5c47-98ff-9818cd5f4652"],
Cell[487057, 9265, 500, 11, 40, "Output",ExpressionUUID->"ee8d3844-1aef-4841-8a63-0110a081c094"]
}, Open  ]],
Cell[487572, 9279, 893, 22, 26, "Input",ExpressionUUID->"3df3c95b-6a56-1947-9419-e37466f6e358"],
Cell[CellGroupData[{
Cell[488490, 9305, 488, 11, 26, "Input",ExpressionUUID->"ce9da1f9-ef8b-db49-bf5e-17dc9c227030"],
Cell[488981, 9318, 2937, 86, 130, "Output",ExpressionUUID->"f2ba5545-f2ae-6642-badc-bdb96631d8e0"]
}, Open  ]],
Cell[491933, 9407, 712, 15, 28, "Text",ExpressionUUID->"3f7ada19-ee10-0f4b-965b-2f528ee6504a"],
Cell[CellGroupData[{
Cell[492670, 9426, 851, 20, 29, "Input",ExpressionUUID->"a247d601-4569-5946-bdd8-574f979b988d"],
Cell[493524, 9448, 282, 6, 40, "Output",ExpressionUUID->"ff1797c4-931c-d44a-8ab6-be62af32e0e3"]
}, Open  ]],
Cell[493821, 9457, 1128, 27, 26, "Input",ExpressionUUID->"60e079f6-7969-4e4e-b64c-14aafb0a497d"],
Cell[CellGroupData[{
Cell[494974, 9488, 523, 13, 25, "Input",ExpressionUUID->"fae75599-6ee7-1a49-a0f0-177ff4e82686"],
Cell[495500, 9503, 2811, 84, 130, "Output",ExpressionUUID->"52e93052-60d3-6d4e-b3fd-e58d1394e5e6"]
}, Open  ]],
Cell[498326, 9590, 831, 20, 31, "Text",ExpressionUUID->"d7d505b7-3c00-a540-92c0-0ed37f2a942e"],
Cell[CellGroupData[{
Cell[499182, 9614, 1049, 27, 26, "Input",ExpressionUUID->"f13e7767-43fe-4844-bb44-5a7b861a6785"],
Cell[500234, 9643, 410, 11, 40, "Output",ExpressionUUID->"dbb9f36e-4e50-d94b-8db3-ff8b1ec513db"]
}, Open  ]],
Cell[500659, 9657, 820, 21, 26, "Input",ExpressionUUID->"34b6d0c6-336d-5d4d-a128-c980fdcded27"],
Cell[CellGroupData[{
Cell[501504, 9682, 490, 11, 26, "Input",ExpressionUUID->"6522fa63-66c7-8b40-90f1-a9e339d2e213"],
Cell[501997, 9695, 2832, 84, 108, "Output",ExpressionUUID->"0afffe71-854a-914c-9be7-857ea2962bb4"]
}, Open  ]],
Cell[504844, 9782, 733, 15, 28, "Text",ExpressionUUID->"b341afad-dee0-ba4e-926b-db0412fee00a"],
Cell[CellGroupData[{
Cell[505602, 9801, 829, 20, 29, "Input",ExpressionUUID->"7bc0b28c-5595-604e-a63d-57d3d9417c84"],
Cell[506434, 9823, 214, 4, 25, "Output",ExpressionUUID->"6abd7c84-6e4e-614c-bc45-00ccab812321"]
}, Open  ]],
Cell[506663, 9830, 1106, 27, 26, "Input",ExpressionUUID->"f5c32c5f-43c2-c246-b9fa-31e8c1523035"],
Cell[CellGroupData[{
Cell[507794, 9861, 501, 13, 25, "Input",ExpressionUUID->"aca6cc20-623c-c243-9559-3e1a0f95b09e"],
Cell[508298, 9876, 2836, 84, 108, "Output",ExpressionUUID->"0a6c7a7d-5fc7-ae4d-8d38-e8fcfd53ed24"]
}, Open  ]],
Cell[511149, 9963, 171, 3, 28, "Text",ExpressionUUID->"c8464b78-9c94-ee48-b0c3-a84e0b834b79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[511357, 9971, 244, 4, 54, "Section",ExpressionUUID->"d00ec35d-b710-044d-85c3-82d6b8a6a7a1"],
Cell[511604, 9977, 4726, 117, 104, "Text",ExpressionUUID->"dcdb867a-0ec2-b24f-bb2d-dee3e1da58cd"],
Cell[516333, 10096, 578, 13, 22, "Input",ExpressionUUID->"225cf170-a298-284e-afe6-d04270845559"],
Cell[CellGroupData[{
Cell[516936, 10113, 199, 3, 22, "Input",ExpressionUUID->"8786a45e-7262-e142-a99b-ebb643fed56f"],
Cell[517138, 10118, 808, 18, 41, "Output",ExpressionUUID->"311f4f2b-3888-6141-a3a5-49f643d258a1"]
}, Open  ]],
Cell[517961, 10139, 1791, 39, 50, "Text",ExpressionUUID->"7dc8024e-527d-374d-97ce-98611c2c0d36"],
Cell[CellGroupData[{
Cell[519777, 10182, 359, 9, 22, "Input",ExpressionUUID->"bb4906a1-61e7-7140-ab3d-ccbf73a2889e"],
Cell[520139, 10193, 924, 27, 40, "Output",ExpressionUUID->"a8367510-5133-c34e-a9c2-317613664753"]
}, Open  ]],
Cell[521078, 10223, 271, 4, 28, "Text",ExpressionUUID->"cac62118-a558-c644-aac2-c32563f0fa86"],
Cell[CellGroupData[{
Cell[521374, 10231, 359, 9, 22, "Input",ExpressionUUID->"bf886817-e6b0-d04c-a6d3-2ac0d43e10e6"],
Cell[521736, 10242, 263, 4, 25, "Output",ExpressionUUID->"243a377c-e827-b246-8a11-fe592cafaaaa"]
}, Open  ]],
Cell[522014, 10249, 254, 4, 28, "Text",ExpressionUUID->"d7139afd-5034-9b44-838c-442343cac216"],
Cell[CellGroupData[{
Cell[522293, 10257, 310, 6, 22, "Input",ExpressionUUID->"9d4d1800-5e1e-9c48-9862-1069f85a6f17"],
Cell[522606, 10265, 3813, 94, 114, "Output",ExpressionUUID->"245ad06f-4026-fd47-b1b6-620fc7030eb5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[526456, 10364, 233, 3, 22, "Input",ExpressionUUID->"7aad92a8-8806-e444-a656-b7d397332318"],
Cell[526692, 10369, 3171, 69, 55, "Output",ExpressionUUID->"611d4ca1-229f-1c4b-b0fb-d67ea608f6e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[529900, 10443, 308, 6, 22, "Input",ExpressionUUID->"64c16123-6792-f547-81ac-419b07699812"],
Cell[530211, 10451, 633, 19, 40, "Output",ExpressionUUID->"dafb456f-3e0d-c443-ae62-1e1a4bc46336"]
}, Open  ]],
Cell[CellGroupData[{
Cell[530881, 10475, 233, 3, 22, "Input",ExpressionUUID->"1893b7c7-47a7-1a4d-8cdc-79d8db99d515"],
Cell[531117, 10480, 261, 6, 25, "Output",ExpressionUUID->"f416f17f-f2fd-bf4a-b609-ead79d01f1fe"]
}, Open  ]],
Cell[531393, 10489, 193, 3, 28, "Text",ExpressionUUID->"06e165e6-e392-074b-824a-f687e12d49d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[531623, 10497, 229, 4, 54, "Section",ExpressionUUID->"12466a94-1073-0a44-9963-b8d1bc3b7120"],
Cell[CellGroupData[{
Cell[531877, 10505, 190, 3, 43, "Subsection",ExpressionUUID->"3c24433d-24b0-8949-95c8-eb71ab7e29a9"],
Cell[532070, 10510, 4026, 102, 111, "Text",ExpressionUUID->"4caaf8d6-800d-5d4d-b8d6-33bd979a0ad3"],
Cell[CellGroupData[{
Cell[536121, 10616, 349, 7, 22, "Input",ExpressionUUID->"cdbf23b7-d161-aa42-a6d3-fd454e99e5ed"],
Cell[536473, 10625, 359, 6, 40, "Output",ExpressionUUID->"6fc98092-8e23-ef45-93b4-3e2271e2175f"]
}, Open  ]],
Cell[536847, 10634, 523, 13, 26, "Input",ExpressionUUID->"b7f7c719-aa3c-874b-ab67-fa690a61bc7c"],
Cell[CellGroupData[{
Cell[537395, 10651, 418, 9, 26, "Input",ExpressionUUID->"dd1e7a3b-e6e5-f741-ab83-442a3aca86da"],
Cell[537816, 10662, 876, 20, 45, "Output",ExpressionUUID->"25cbd851-f799-3a43-92f1-1eddaa20de3d"]
}, Open  ]],
Cell[538707, 10685, 5648, 139, 140, "Text",ExpressionUUID->"62bb1757-b704-004b-93ef-ef3d79f07614"],
Cell[CellGroupData[{
Cell[544380, 10828, 1808, 46, 48, "Input",ExpressionUUID->"211fdaf2-c428-404d-a65a-0f64837fb114"],
Cell[546191, 10876, 1168, 35, 49, "Output",ExpressionUUID->"1160231a-7256-0d44-a38e-ca13188d7c34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[547396, 10916, 875, 21, 26, "Input",ExpressionUUID->"708f46f0-7d65-d34a-82dd-7e4b33443d7b"],
Cell[548274, 10939, 410, 8, 40, "Output",ExpressionUUID->"dbbc4ffa-603d-3949-95ee-bf617cf4c1fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[548721, 10952, 1039, 27, 37, "Input",ExpressionUUID->"d5e6e876-cff5-804c-9b16-5b749ce591ef"],
Cell[549763, 10981, 592, 14, 40, "Output",ExpressionUUID->"50c7e339-6316-9740-bde5-61a434b055b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[550392, 11000, 1106, 27, 37, "Input",ExpressionUUID->"936cdd1e-44ee-ba4e-863a-0f580ba22e20"],
Cell[551501, 11029, 612, 14, 40, "Output",ExpressionUUID->"8602390d-b2f8-6b48-ae67-353bc940e9d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[552150, 11048, 1065, 28, 37, "Input",ExpressionUUID->"ef8ec033-af01-924c-83f5-a6c4ad8cb4f7"],
Cell[553218, 11078, 542, 13, 40, "Output",ExpressionUUID->"3d37807e-94df-194a-88d0-d24aff71286e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[553797, 11096, 1162, 29, 37, "Input",ExpressionUUID->"ba7b94f3-514a-c947-b30e-9ea816269618"],
Cell[554962, 11127, 561, 13, 40, "Output",ExpressionUUID->"9c531f2c-1030-5f43-8761-d8a4a8545a2d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[555560, 11145, 173, 2, 22, "Input",ExpressionUUID->"ace1496b-1d6c-7e4b-9236-7a0f96ceb5c9"],
Cell[555736, 11149, 1501, 46, 56, "Output",ExpressionUUID->"141bc6f9-a223-bc4b-ba26-7392c2d42f5e"]
}, Open  ]],
Cell[557252, 11198, 1081, 27, 43, "Text",ExpressionUUID->"9b2d3d6a-92b2-244e-8e1b-b0266f715dd7"],
Cell[558336, 11227, 4329, 120, 69, "Text",ExpressionUUID->"ad3bc36d-a509-3f42-832c-dbd2ee6c2bbe"],
Cell[562668, 11349, 2862, 76, 37, "Input",ExpressionUUID->"71d8d371-9127-0848-85b3-8741f8c4fbef"],
Cell[CellGroupData[{
Cell[565555, 11429, 414, 9, 26, "Input",ExpressionUUID->"9061cee1-ac98-af41-8854-4b2b705ae96a"],
Cell[565972, 11440, 2331, 65, 72, "Output",ExpressionUUID->"ae02dcfe-afc2-9447-9b8f-cccdb964dd81"]
}, Open  ]],
Cell[568318, 11508, 302, 7, 28, "Text",ExpressionUUID->"c62746f6-9a6e-6b4d-9129-d70600efa104"],
Cell[568623, 11517, 973, 24, 26, "Input",ExpressionUUID->"e1c6d23b-f7af-c44d-a6bc-ae3bbb9329ee"],
Cell[CellGroupData[{
Cell[569621, 11545, 444, 10, 26, "Input",ExpressionUUID->"9bddd12e-8710-a242-b6e3-c0133012d494"],
Cell[570068, 11557, 2208, 61, 40, "Output",ExpressionUUID->"da824ed3-1ac8-694d-b760-a144fbf2cfd8"]
}, Open  ]],
Cell[572291, 11621, 398, 8, 28, "Text",ExpressionUUID->"6ccf11e2-7b89-1740-865b-ac9bef44813c"],
Cell[CellGroupData[{
Cell[572714, 11633, 1450, 39, 34, "Input",ExpressionUUID->"3e426fd6-63e6-6543-8792-d1bd18cfc286"],
Cell[574167, 11674, 820, 23, 48, "Output",ExpressionUUID->"34e7bfd3-ed95-774f-b13b-091584c44945"]
}, Open  ]],
Cell[CellGroupData[{
Cell[575024, 11702, 1467, 40, 34, "Input",ExpressionUUID->"41c567bd-737f-7e41-b227-ca94fec07d73"],
Cell[576494, 11744, 799, 22, 42, "Output",ExpressionUUID->"59e38767-f6e8-484c-89d2-07bdc3cb263d"]
}, Open  ]],
Cell[577308, 11769, 278, 6, 28, "Text",ExpressionUUID->"78360e06-07e3-cb48-a37e-9e84895a8b6c"],
Cell[577589, 11777, 1309, 31, 26, "Input",ExpressionUUID->"9971bdcb-a8d9-e644-b2b0-f9261cddf0e2"],
Cell[CellGroupData[{
Cell[578923, 11812, 548, 13, 26, "Input",ExpressionUUID->"4b940f4c-67e6-da42-9e25-e1c34660ae4c"],
Cell[579474, 11827, 1306, 37, 48, "Output",ExpressionUUID->"2dfdd75e-78ae-264a-b4c0-37f6f0f3b206"]
}, Open  ]],
Cell[580795, 11867, 186, 3, 28, "Text",ExpressionUUID->"27d9a386-2be1-9943-9fc8-ce09f99a73e4"],
Cell[CellGroupData[{
Cell[581006, 11874, 620, 15, 26, "Input",ExpressionUUID->"0f77c1e1-80f0-4745-b385-67b96d8c1014"],
Cell[581629, 11891, 88225, 1492, 186, "Output",ExpressionUUID->"fc59b083-f944-f04f-81a9-39078b0cbbb4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[669903, 13389, 176, 3, 43, "Subsection",ExpressionUUID->"0d474937-e0b5-5c4e-bf30-fe11f123414a"],
Cell[670082, 13394, 2404, 54, 78, "Text",ExpressionUUID->"79161613-cc61-2a40-b05c-4bc66a37da9d"],
Cell[CellGroupData[{
Cell[672511, 13452, 603, 12, 25, "Input",ExpressionUUID->"bca2ef47-68e1-e944-976e-f925ea20071a"],
Cell[673117, 13466, 367, 8, 40, "Output",ExpressionUUID->"f494dfd9-c53a-b243-8724-8d2e982d08dd"]
}, Open  ]],
Cell[673499, 13477, 271, 6, 28, "Text",ExpressionUUID->"7d59c9b3-2f9c-bb4e-928b-78193ee9b524"],
Cell[CellGroupData[{
Cell[673795, 13487, 847, 20, 26, "Input",ExpressionUUID->"732f22b4-5ec5-9349-bd84-2002c0e323e4"],
Cell[674645, 13509, 1181, 35, 48, "Output",ExpressionUUID->"296ef637-a4ba-3344-be9c-7191f20bdbf2"]
}, Open  ]],
Cell[675841, 13547, 1062, 25, 30, "Text",ExpressionUUID->"09e4f25f-22ef-ab4f-b3ec-3ec276544aab"],
Cell[CellGroupData[{
Cell[676928, 13576, 337, 7, 22, "Input",ExpressionUUID->"aa2c6dd9-b8b8-1e46-8978-8b9a5944454b"],
Cell[677268, 13585, 198, 5, 25, "Output",ExpressionUUID->"af5ccccf-79ab-5646-94ee-6fa94c67320e"]
}, Open  ]],
Cell[677481, 13593, 246, 6, 28, "Text",ExpressionUUID->"57f1137b-6db5-2b4b-bc33-3e3a6c84efb2"],
Cell[CellGroupData[{
Cell[677752, 13603, 1125, 26, 26, "Input",ExpressionUUID->"23caca91-d2c3-e049-9701-326541710dfe"],
Cell[678880, 13631, 185944, 3154, 183, "Output",ExpressionUUID->"4ba3d98f-c18c-434e-b9f5-506adae59e96"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[864885, 16792, 831, 21, 56, "Section",ExpressionUUID->"a76978c9-96ad-764d-ad17-8bb2b9e4c310"],
Cell[CellGroupData[{
Cell[865741, 16817, 212, 4, 43, "Subsection",ExpressionUUID->"ae686858-8750-f746-90f1-8d80ba56646c"],
Cell[865956, 16823, 2484, 58, 92, "Text",ExpressionUUID->"e8fcae99-7996-8248-8c26-1cfd49537fa2"],
Cell[868443, 16883, 728, 20, 25, "Input",ExpressionUUID->"dccc6aff-1289-b545-a7bb-57219667321c"],
Cell[CellGroupData[{
Cell[869196, 16907, 476, 12, 25, "Input",ExpressionUUID->"40ab7d8b-dd5e-b544-a350-ee1ade3c96e3"],
Cell[869675, 16921, 268, 7, 41, "Output",ExpressionUUID->"a4d160a8-2572-f348-bea0-edd4e4051d6d"]
}, Open  ]],
Cell[869958, 16931, 499, 12, 28, "Text",ExpressionUUID->"76bd922a-b8d8-294b-bc75-deb28346acb4"],
Cell[870460, 16945, 872, 24, 25, "Input",ExpressionUUID->"1ff21960-f9ab-f540-b4e5-80e47518183f"],
Cell[CellGroupData[{
Cell[871357, 16973, 474, 12, 25, "Input",ExpressionUUID->"2061d957-44bf-3a44-bc81-3100311dd4ca"],
Cell[871834, 16987, 727, 21, 45, "Output",ExpressionUUID->"dbc52dce-e0f7-f943-997b-d421fd89e1d9"]
}, Open  ]],
Cell[872576, 17011, 345, 7, 28, "Text",ExpressionUUID->"31695272-d308-264d-845f-0f18b6f40b6a"],
Cell[CellGroupData[{
Cell[872946, 17022, 1976, 53, 48, "Input",ExpressionUUID->"bf4763d3-17b1-924b-a08c-73663cfbe726"],
Cell[874925, 17077, 1147, 38, 49, "Output",ExpressionUUID->"c819000f-6836-4141-966d-f14d0c6c3128"]
}, Open  ]],
Cell[876087, 17118, 492, 9, 46, "Text",ExpressionUUID->"232cfa87-d4f9-ce4c-9395-10a12bf931c6"],
Cell[CellGroupData[{
Cell[876604, 17131, 940, 25, 26, "Input",ExpressionUUID->"d8abd81f-4647-224d-b962-9ac8d2dbd0dc"],
Cell[877547, 17158, 424, 12, 40, "Output",ExpressionUUID->"fa9dcfbd-5aaa-654b-8f89-91632a97c7c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[878008, 17175, 919, 24, 26, "Input",ExpressionUUID->"c056d6a8-b3b3-1240-b9fc-c4b4f1dc5be4"],
Cell[878930, 17201, 399, 12, 40, "Output",ExpressionUUID->"74b46ab1-60ce-7c4d-b946-45fa27c00a6b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[879366, 17218, 1055, 29, 37, "Input",ExpressionUUID->"7c47d80a-2bb1-4d49-94ed-6d6adae56392"],
Cell[880424, 17249, 396, 11, 40, "Output",ExpressionUUID->"bcbb3577-e061-404c-9e08-4fc57d9cc954"]
}, Open  ]],
Cell[CellGroupData[{
Cell[880857, 17265, 1004, 28, 37, "Input",ExpressionUUID->"74403403-20d1-5e43-951f-10909811feec"],
Cell[881864, 17295, 390, 11, 40, "Output",ExpressionUUID->"97454418-763d-ce4f-9065-4f78295a25d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[882291, 17311, 1060, 30, 37, "Input",ExpressionUUID->"73b56285-c000-8d4b-b0c0-2dd1f73b26fa"],
Cell[883354, 17343, 383, 11, 40, "Output",ExpressionUUID->"9e0b766d-ee24-d045-97a0-9d212e9d39cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[883774, 17359, 1086, 30, 37, "Input",ExpressionUUID->"2dccae87-9c96-b248-9930-44c8c6141c18"],
Cell[884863, 17391, 383, 11, 40, "Output",ExpressionUUID->"25311425-2169-1642-af37-6569704e72ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[885283, 17407, 2267, 65, 51, "Input",ExpressionUUID->"81876fbf-7fab-3d46-833c-8912d84b6702"],
Cell[887553, 17474, 1938, 59, 56, "Output",ExpressionUUID->"47be762b-5e3a-e14f-8215-a04213113be5"]
}, Open  ]],
Cell[889506, 17536, 5844, 163, 102, "Text",ExpressionUUID->"e5aafda0-97c7-1943-8094-390c2acc8d00"],
Cell[CellGroupData[{
Cell[895375, 17703, 1294, 31, 26, "Input",ExpressionUUID->"cabd0a69-9b97-fe4b-930f-3756d4187b98"],
Cell[896672, 17736, 586, 17, 41, "Output",ExpressionUUID->"22d251c3-9735-2e4f-81e8-fb67d24e259d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[897295, 17758, 1350, 37, 34, "Input",ExpressionUUID->"a3d83d37-ccff-3340-a9a1-5bc416e4167a"],
Cell[898648, 17797, 679, 20, 48, "Output",ExpressionUUID->"faf6f951-e44a-d24f-885d-eb7379a3c465"]
}, Open  ]],
Cell[CellGroupData[{
Cell[899364, 17822, 1412, 39, 34, "Input",ExpressionUUID->"8c133fca-0a6d-7041-adfe-a24450f2d525"],
Cell[900779, 17863, 674, 20, 42, "Output",ExpressionUUID->"f0d815cd-26c9-9b42-81d0-1a5d9485831a"]
}, Open  ]],
Cell[901468, 17886, 1451, 37, 25, "Input",ExpressionUUID->"611f1d0b-6471-a444-9be8-9257512aadf9"],
Cell[CellGroupData[{
Cell[902944, 17927, 474, 12, 25, "Input",ExpressionUUID->"8fc6d874-58be-1c45-a6ad-ea54aeaf457d"],
Cell[903421, 17941, 1562, 45, 48, "Output",ExpressionUUID->"23f6b1ac-3a0c-fa48-b941-7393ea6ceaff"]
}, Open  ]],
Cell[904998, 17989, 198, 3, 28, "Text",ExpressionUUID->"fba28fd7-69ee-cc4c-a7a5-16bf47db4707"],
Cell[CellGroupData[{
Cell[905221, 17996, 677, 18, 26, "Input",ExpressionUUID->"2ce5fe18-bb3f-9c43-8f76-d0f00e9fbf95"],
Cell[905901, 18016, 68062, 1161, 181, "Output",ExpressionUUID->"df1f93c0-3d74-784d-9355-439efc874adc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[974012, 19183, 182, 3, 43, "Subsection",ExpressionUUID->"131abab5-3af3-1c43-80ed-271b0937d257"],
Cell[974197, 19188, 2270, 57, 31, "Text",ExpressionUUID->"bd6c8fb7-2bed-c54f-b8a5-f7c2ef496d6f"],
Cell[CellGroupData[{
Cell[976492, 19249, 618, 15, 26, "Input",ExpressionUUID->"400bec38-ced3-ee4e-a178-b179642034b5"],
Cell[977113, 19266, 525, 14, 41, "Output",ExpressionUUID->"a19fa0bc-04e8-5e49-8303-58dd2d8979ff"]
}, Open  ]],
Cell[977653, 19283, 1120, 32, 32, "Text",ExpressionUUID->"772fbee1-e4fc-6f42-b1e4-65d0dfaa80c7"],
Cell[CellGroupData[{
Cell[978798, 19319, 394, 9, 22, "Input",ExpressionUUID->"3bb01e32-69a2-6a47-9449-b723adf745ae"],
Cell[979195, 19330, 648, 19, 41, "Output",ExpressionUUID->"4e65ccfb-77c9-1247-9cb5-47ad84298424"]
}, Open  ]],
Cell[979858, 19352, 1116, 25, 30, "Text",ExpressionUUID->"a6fad637-6d19-0f45-b6d9-b0dd88e2ff33"],
Cell[CellGroupData[{
Cell[980999, 19381, 1462, 40, 38, "Input",ExpressionUUID->"e4771e79-4c20-fd4c-9960-d1ff61f05616"],
Cell[982464, 19423, 1195, 34, 54, "Output",ExpressionUUID->"46bba9db-8459-d94d-9631-1a37d20d5312"]
}, Open  ]],
Cell[983674, 19460, 308, 5, 28, "Text",ExpressionUUID->"b6f81b30-e711-4a4f-87a5-5eaf35f81dfd"],
Cell[CellGroupData[{
Cell[984007, 19469, 269, 7, 42, "Input",ExpressionUUID->"a581dffc-bf6f-a04a-8814-dba0ad524968"],
Cell[984279, 19478, 223, 4, 25, "Output",ExpressionUUID->"b031c635-c174-b14f-b6a3-397c978ea40d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[984539, 19487, 557, 17, 46, "Input",ExpressionUUID->"eb77f1f3-ec2e-df4f-88d6-2b1e7f2be5c9"],
Cell[985099, 19506, 280, 5, 25, "Output",ExpressionUUID->"64b6f60d-c853-a545-8285-c72928b11702"]
}, Open  ]],
Cell[985394, 19514, 652, 16, 30, "Text",ExpressionUUID->"a628d880-809d-2b48-a436-769500bb7393"],
Cell[986049, 19532, 1152, 29, 25, "Input",ExpressionUUID->"d953c03b-579b-af41-beb0-392647fef7aa"],
Cell[CellGroupData[{
Cell[987226, 19565, 482, 12, 25, "Input",ExpressionUUID->"18a3ac04-c954-0744-b99e-0eaa461302b7"],
Cell[987711, 19579, 1412, 42, 48, "Output",ExpressionUUID->"64ee3875-c671-df4c-a076-d6ec7f00498b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[989160, 19626, 1016, 27, 26, "Input",ExpressionUUID->"066ca939-31bf-5044-9651-24714f88cc21"],
Cell[990179, 19655, 131158, 2234, 183, "Output",ExpressionUUID->"02d28d26-57f3-8344-b5c0-b906b262fdb2"]
}, Open  ]],
Cell[1121352, 21892, 224, 5, 28, "Text",ExpressionUUID->"ab8b2232-4049-b747-8f14-826d9e2f054e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1121625, 21903, 288, 4, 54, "Section",ExpressionUUID->"e4c316e1-de1c-914e-b66e-997b76e8720d"],
Cell[CellGroupData[{
Cell[1121938, 21911, 164, 3, 43, "Subsection",ExpressionUUID->"07f10342-f291-1d48-b1e8-cb1280d2f6da"],
Cell[1122105, 21916, 1112, 26, 30, "Text",ExpressionUUID->"6dc069be-5909-614e-a0be-0d5ceffc10ac"],
Cell[CellGroupData[{
Cell[1123242, 21946, 686, 20, 25, "Input",ExpressionUUID->"f17c4450-a0c8-5e40-a5b8-7ca186915921"],
Cell[1123931, 21968, 474, 13, 25, "Output",ExpressionUUID->"fe748c91-ca77-2840-b03c-227e218ea6d0"]
}, Open  ]],
Cell[1124420, 21984, 2224, 48, 69, "Text",ExpressionUUID->"3edac6c5-962e-d64b-912c-61b743ae2e29"],
Cell[CellGroupData[{
Cell[1126669, 22036, 985, 21, 22, "Input",ExpressionUUID->"452d198e-691f-b14f-9446-e6d826ef12b9"],
Cell[1127657, 22059, 1142, 29, 28, "Output",ExpressionUUID->"608042eb-55d7-fd47-bfb7-aeaac94017ad"]
}, Open  ]],
Cell[1128814, 22091, 6914, 177, 108, "Text",ExpressionUUID->"ceadf918-50be-7d48-a56a-cff743c3aacf"],
Cell[CellGroupData[{
Cell[1135753, 22272, 1525, 43, 38, "Input",ExpressionUUID->"50f1b35c-1b2f-bd4a-9fb5-df7be697e55b"],
Cell[1137281, 22317, 1276, 38, 28, "Output",ExpressionUUID->"c0aad82d-29ff-454c-92be-0e7f8e546e73"]
}, Open  ]],
Cell[1138572, 22358, 464, 9, 28, "Text",ExpressionUUID->"e2eb0557-003e-4f4a-8fe6-116943ecac18"],
Cell[CellGroupData[{
Cell[1139061, 22371, 1092, 33, 22, "Input",ExpressionUUID->"06237532-4ab4-6649-a64d-118ee4f97f5b"],
Cell[1140156, 22406, 1054, 32, 25, "Output",ExpressionUUID->"feeaebd2-1e5f-6a49-a4cc-d31eb95d2d4b"]
}, Open  ]],
Cell[1141225, 22441, 1004, 19, 28, "Text",ExpressionUUID->"a1d80f20-fe99-614e-a62b-2321bd4feaa0"],
Cell[CellGroupData[{
Cell[1142254, 22464, 865, 22, 22, "Input",ExpressionUUID->"a4b5b708-b469-7a41-9d76-9995d7f51eb0"],
Cell[1143122, 22488, 2400, 72, 45, "Output",ExpressionUUID->"bae8e69f-fe52-c34d-a8ac-4510a95fa6f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1145559, 22565, 547, 15, 22, "Input",ExpressionUUID->"6e3f78f5-0789-b546-bc18-c5e7076e9837"],
Cell[1146109, 22582, 2146, 64, 43, "Output",ExpressionUUID->"c3dd1cf1-bfa0-af4d-bd03-d48dd8f4d13e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1148292, 22651, 784, 20, 22, "Input",ExpressionUUID->"3a1f1288-4a81-174f-90fd-e017fbbd7e87"],
Cell[1149079, 22673, 1838, 53, 43, "Output",ExpressionUUID->"3b6ed7d6-9a3f-a442-8318-4b89088bb345"]
}, Open  ]],
Cell[1150932, 22729, 1807, 47, 30, "Text",ExpressionUUID->"44967ddf-0206-dc4c-84ac-85f96168812a"],
Cell[CellGroupData[{
Cell[1152764, 22780, 540, 14, 25, "Input",ExpressionUUID->"6813beb8-4cc9-5a4a-ada2-b455519af950"],
Cell[1153307, 22796, 249, 6, 25, "Output",ExpressionUUID->"9850763b-696b-b44b-b782-cd8b1aa3fcc9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1153593, 22807, 617, 16, 25, "Input",ExpressionUUID->"56f9f8a9-f4a9-1d46-8697-8935a207a0d6"],
Cell[1154213, 22825, 288, 7, 25, "Output",ExpressionUUID->"74d1755d-d688-7e4f-9fa5-2cfaf77ef1a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1154538, 22837, 630, 16, 25, "Input",ExpressionUUID->"f4ab68ae-688a-6043-bf6e-640fee7551ab"],
Cell[1155171, 22855, 268, 6, 25, "Output",ExpressionUUID->"9aca1e19-2745-9541-96d3-c8a479983340"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1155476, 22866, 642, 16, 25, "Input",ExpressionUUID->"7cf80ba2-c170-b14d-8ac1-8cf35f526be7"],
Cell[1156121, 22884, 270, 6, 25, "Output",ExpressionUUID->"71afa804-ca51-bf40-bfd6-7fd2efe04860"]
}, Open  ]],
Cell[1156406, 22893, 540, 9, 22, "Input",ExpressionUUID->"74347a6a-e8d5-ab4a-afff-81cbd2f5f5c0"],
Cell[CellGroupData[{
Cell[1156971, 22906, 238, 5, 22, "Input",ExpressionUUID->"a79b6bda-f5d0-cf4c-891b-b0816583ede0"],
Cell[1157212, 22913, 782, 21, 43, "Output",ExpressionUUID->"893c066d-949c-f743-9210-38873e2aaebc"]
}, Open  ]],
Cell[1158009, 22937, 580, 14, 28, "Text",ExpressionUUID->"ffa2bc96-7c62-c540-b3e1-d946eb9ed1b1"],
Cell[1158592, 22953, 429, 11, 22, "Input",ExpressionUUID->"84cf5e27-de30-3047-862c-e6f8f74813d3"],
Cell[CellGroupData[{
Cell[1159046, 22968, 211, 4, 22, "Input",ExpressionUUID->"a3625993-6bad-ff4b-a4da-9f9975598172"],
Cell[1159260, 22974, 1102, 32, 48, "Output",ExpressionUUID->"013aa768-f02a-8d45-82aa-7f7b02750c79"]
}, Open  ]],
Cell[1160377, 23009, 255, 6, 28, "Text",ExpressionUUID->"15a06898-aae3-ca47-bc42-1ae17807e05a"],
Cell[1160635, 23017, 796, 20, 26, "Input",ExpressionUUID->"cfc043e0-c11d-b747-9211-599d4565ecb0"],
Cell[CellGroupData[{
Cell[1161456, 23041, 206, 4, 22, "Input",ExpressionUUID->"5a878711-7cf6-734b-afe3-79bcd9bd597f"],
Cell[1161665, 23047, 1647, 48, 55, "Output",ExpressionUUID->"1fb63d28-46ee-af43-990b-d498ab8541d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1163349, 23100, 306, 7, 22, "Input",ExpressionUUID->"415e8f18-b8f0-7f44-8fc1-e7a40b629ee9"],
Cell[1163658, 23109, 222, 5, 25, "Output",ExpressionUUID->"da68a422-b471-1149-9b14-0cbd7fa4da09"]
}, Open  ]],
Cell[1163895, 23117, 167, 3, 28, "Text",ExpressionUUID->"cc333743-83c9-ab4a-a10c-b1c42232c933"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1164099, 23125, 182, 3, 43, "Subsection",ExpressionUUID->"69b181fa-593e-7c4e-a4f5-180f90999fd8"],
Cell[1164284, 23130, 5966, 151, 67, "Text",ExpressionUUID->"83b2cefe-bf7e-5a45-b3d6-bc607e897f13"],
Cell[CellGroupData[{
Cell[1170275, 23285, 822, 22, 26, "Input",ExpressionUUID->"464ffb40-12bd-1f48-a033-90a93b5a0579"],
Cell[1171100, 23309, 244, 6, 41, "Output",ExpressionUUID->"413199cc-2c85-4e48-832f-3d6ec1afd052"]
}, Open  ]],
Cell[1171359, 23318, 412, 8, 28, "Text",ExpressionUUID->"b821c8df-19ba-b943-b55c-7f35b86dc794"],
Cell[CellGroupData[{
Cell[1171796, 23330, 1203, 31, 22, "Input",ExpressionUUID->"f1b23cfa-3b1b-ae4f-92e2-03900a9b9aaa"],
Cell[1173002, 23363, 926, 25, 43, "Output",ExpressionUUID->"80a296a0-9e60-a44d-b7e1-860504ceb7b9"]
}, Open  ]],
Cell[1173943, 23391, 277, 6, 28, "Text",ExpressionUUID->"c845cafa-1227-ab4c-9293-8f37844cd4bc"],
Cell[CellGroupData[{
Cell[1174245, 23401, 1266, 33, 40, "Input",ExpressionUUID->"561da7e8-9f19-1545-8742-b6a17d442b28"],
Cell[1175514, 23436, 1382, 40, 48, "Output",ExpressionUUID->"03cfe279-4d41-c74a-99df-a4371a3e3139"]
}, Open  ]],
Cell[1176911, 23479, 448, 9, 28, "Text",ExpressionUUID->"19d4e6a4-4287-fc48-93c4-13b1f098400e"],
Cell[CellGroupData[{
Cell[1177384, 23492, 355, 7, 22, "Input",ExpressionUUID->"b2c4213c-17cd-7c47-8fe6-2820d1c904fd"],
Cell[1177742, 23501, 1239, 38, 48, "Output",ExpressionUUID->"25a50dc1-5909-5944-8da1-9f4816a1dc6e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1179018, 23544, 325, 7, 22, "Input",ExpressionUUID->"f82c1a17-9cbe-ce4b-a02e-656ba79b3b1c"],
Cell[1179346, 23553, 354, 10, 40, "Output",ExpressionUUID->"7c2bf3d0-26f5-1c4b-9006-4a13c9d7fc67"]
}, Open  ]],
Cell[1179715, 23566, 307, 7, 28, "Text",ExpressionUUID->"6f781760-ede7-d74f-af69-4f9f3bac59b7"],
Cell[CellGroupData[{
Cell[1180047, 23577, 265, 5, 22, "Input",ExpressionUUID->"2807e9e6-0218-5946-92fc-52fa924c1887"],
Cell[1180315, 23584, 1025, 32, 48, "Output",ExpressionUUID->"a1d9f5e3-0a81-394c-a4ef-4fdc498b4224"]
}, Open  ]],
Cell[1181355, 23619, 297, 6, 28, "Text",ExpressionUUID->"8f5fb008-22e9-8c48-9808-7006841fe123"],
Cell[1181655, 23627, 1071, 30, 26, "Input",ExpressionUUID->"f50e456e-3db7-0943-80e4-c408c7517f48"],
Cell[CellGroupData[{
Cell[1182751, 23661, 570, 15, 26, "Input",ExpressionUUID->"f64c28b6-068a-8c40-b867-0a12cd67dae0"],
Cell[1183324, 23678, 643, 18, 45, "Output",ExpressionUUID->"3202ae0d-0eeb-e148-a24c-92b9ab02eec3"]
}, Open  ]],
Cell[1183982, 23699, 318, 7, 28, "Text",ExpressionUUID->"58e38822-c3c9-7f47-91ab-3858ad549fe2"],
Cell[CellGroupData[{
Cell[1184325, 23710, 1953, 52, 48, "Input",ExpressionUUID->"48a871ae-9da8-8b47-af63-0eac37465d1c"],
Cell[1186281, 23764, 1055, 36, 49, "Output",ExpressionUUID->"ce83cf24-6a4a-6342-a5cb-922c55e296df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1187373, 23805, 1168, 31, 26, "Input",ExpressionUUID->"24876b5b-38f6-fe42-8fa2-fe9b47ccda27"],
Cell[1188544, 23838, 349, 8, 40, "Output",ExpressionUUID->"df5fdd3d-5032-c942-a9b4-40798654e81f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1188930, 23851, 1067, 28, 26, "Input",ExpressionUUID->"a1ab3903-9d93-204d-9f45-6741e7a07505"],
Cell[1190000, 23881, 298, 7, 40, "Output",ExpressionUUID->"de6640a7-b06a-fe46-aa0e-26fbf9805755"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1190335, 23893, 1111, 31, 37, "Input",ExpressionUUID->"6c163983-0b62-4146-945a-bed20fa297ff"],
Cell[1191449, 23926, 419, 11, 40, "Output",ExpressionUUID->"1f38551e-f146-aa43-abef-025d17321e56"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1191905, 23942, 1112, 31, 37, "Input",ExpressionUUID->"a26cc307-c317-2442-a94a-9d6a79ebb42a"],
Cell[1193020, 23975, 394, 11, 40, "Output",ExpressionUUID->"a9924bbc-40d6-8948-a6bb-31521308189e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1193451, 23991, 1168, 33, 37, "Input",ExpressionUUID->"e13f46c7-8e97-6c4b-bcc1-6a46e83efc5a"],
Cell[1194622, 24026, 391, 11, 40, "Output",ExpressionUUID->"4a10e0a0-f77c-3549-90d5-73954860f61f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1195050, 24042, 1170, 33, 37, "Input",ExpressionUUID->"8410f368-4420-2b43-bbc5-e1abc45b5bbb"],
Cell[1196223, 24077, 389, 11, 40, "Output",ExpressionUUID->"006846b2-b7cc-e542-8d64-c8abcf74b74d"]
}, Open  ]],
Cell[1196627, 24091, 172, 3, 28, "Text",ExpressionUUID->"790b1686-0d08-0b4e-81d5-32d4bf90c629"],
Cell[CellGroupData[{
Cell[1196824, 24098, 1323, 37, 34, "Input",ExpressionUUID->"21d27fbc-2a24-d047-b1d1-735369ce57d7"],
Cell[1198150, 24137, 655, 20, 48, "Output",ExpressionUUID->"359100e7-5263-d840-a14f-586265be6949"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1198842, 24162, 1390, 39, 34, "Input",ExpressionUUID->"59660fd2-82ba-af4e-bc7d-62941bde249e"],
Cell[1200235, 24203, 658, 20, 42, "Output",ExpressionUUID->"cbb222c8-8c30-514d-942e-3471994f64a4"]
}, Open  ]],
Cell[1200908, 24226, 1787, 46, 26, "Input",ExpressionUUID->"a9c07b99-5a23-1f46-be5c-62ae7839b43c"],
Cell[CellGroupData[{
Cell[1202720, 24276, 574, 15, 26, "Input",ExpressionUUID->"5661e8e7-f335-f54c-b041-0a6d8ca04dca"],
Cell[1203297, 24293, 1482, 43, 48, "Output",ExpressionUUID->"636b46cd-a77d-1543-899e-515a2b16e4af"]
}, Open  ]],
Cell[1204794, 24339, 506, 9, 28, "Text",ExpressionUUID->"af6a01be-29d9-2a42-a687-58ad1d7f4a85"],
Cell[CellGroupData[{
Cell[1205325, 24352, 754, 17, 26, "Input",ExpressionUUID->"e42ba9ba-1d48-8c43-b1b2-06c840e88284"],
Cell[1206082, 24371, 1415, 41, 48, "Output",ExpressionUUID->"c6d43f96-5fc5-4c42-b300-d5ca9b4deee0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1207558, 24419, 608, 15, 56, "Section",ExpressionUUID->"31ed1aa3-f8a2-564c-9191-b7cb3c929e05"],
Cell[1208169, 24436, 969, 16, 83, "Text",ExpressionUUID->"176a5847-1d3f-f245-8a89-91262d1961ba"],
Cell[CellGroupData[{
Cell[1209163, 24456, 496, 12, 22, "Input",ExpressionUUID->"80026a06-240e-9046-a4bf-acf72153bd2b"],
Cell[1209662, 24470, 409, 10, 25, "Output",ExpressionUUID->"79652784-8711-b648-a750-28b61f3d69bc"]
}, Open  ]],
Cell[1210086, 24483, 186, 3, 28, "Text",ExpressionUUID->"e5d716fe-489b-c745-aced-9128c5fc3507"],
Cell[CellGroupData[{
Cell[1210297, 24490, 636, 17, 22, "Input",ExpressionUUID->"22e3b627-85cc-3d48-b0a0-afedaeaeeddd"],
Cell[1210936, 24509, 1715, 48, 44, "Output",ExpressionUUID->"ac4179d0-7a57-4347-897b-6430f1795110"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1212688, 24562, 530, 14, 37, "Input",ExpressionUUID->"abdc891b-0181-ae4a-95f7-08cf34deb4d2"],
Cell[1213221, 24578, 622, 16, 45, "Output",ExpressionUUID->"77ce51f4-773f-3e43-a4bf-9af9cf2813aa"]
}, Open  ]],
Cell[1213858, 24597, 299, 4, 28, "Text",ExpressionUUID->"6b39dd2f-4d2d-4f4d-9c0a-d351f77b70e5"],
Cell[CellGroupData[{
Cell[1214182, 24605, 571, 15, 37, "Input",ExpressionUUID->"dd77790a-140b-b947-b223-731ba66e9eff"],
Cell[1214756, 24622, 372, 8, 40, "Output",ExpressionUUID->"20900f21-3cb9-f740-8c9c-5733104b9667"]
}, Open  ]],
Cell[1215143, 24633, 278, 6, 28, "Text",ExpressionUUID->"9e930f53-f486-4b40-8417-92113a9f856c"],
Cell[CellGroupData[{
Cell[1215446, 24643, 324, 7, 22, "Input",ExpressionUUID->"1db0557b-8d1d-bb47-bb4f-9011a4559d49"],
Cell[1215773, 24652, 946, 27, 48, "Output",ExpressionUUID->"c2f83599-5c64-d145-88b6-71cd5b5831f9"]
}, Open  ]],
Cell[1216734, 24682, 226, 5, 28, "Text",ExpressionUUID->"4e3d10d5-63be-d845-902a-941f67c04831"],
Cell[CellGroupData[{
Cell[1216985, 24691, 396, 8, 22, "Input",ExpressionUUID->"a197acde-3565-ee48-822c-10bf6e867602"],
Cell[1217384, 24701, 1394, 36, 45, "Output",ExpressionUUID->"9c520ad4-c130-3f40-8670-331ec9fd1e5f"]
}, Open  ]],
Cell[1218793, 24740, 322, 6, 28, "Text",ExpressionUUID->"b4c756ee-3d54-094c-a25f-4d9cfbf5280b"],
Cell[CellGroupData[{
Cell[1219140, 24750, 526, 13, 22, "Input",ExpressionUUID->"8739aad9-5001-db44-86cc-cbe706a1bb5f"],
Cell[1219669, 24765, 1356, 37, 41, "Output",ExpressionUUID->"52a3e748-649c-cd44-b254-5cad94412f2c"]
}, Open  ]],
Cell[1221040, 24805, 584, 15, 30, "Text",ExpressionUUID->"fc7c8c46-b297-a441-82c3-1d7cb20d42cc"],
Cell[CellGroupData[{
Cell[1221649, 24824, 684, 14, 22, "Input",ExpressionUUID->"95a11782-636e-4e46-b955-eeeb16d98dfc"],
Cell[1222336, 24840, 790, 20, 40, "Output",ExpressionUUID->"47decfbf-b3ac-b246-be0c-9eade1d4805f"]
}, Open  ]],
Cell[1223141, 24863, 246, 6, 28, "Text",ExpressionUUID->"8c804cda-1898-9640-bc76-9a0db6c125bf"],
Cell[CellGroupData[{
Cell[1223412, 24873, 315, 7, 22, "Input",ExpressionUUID->"d319bd87-815a-074c-bc38-a91d1043a892"],
Cell[1223730, 24882, 3766, 94, 114, "Output",ExpressionUUID->"cacf909a-2eb3-0740-8d24-528957314a32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1227533, 24981, 659, 18, 22, "Input",ExpressionUUID->"5d57818a-0d02-b34c-b4bd-23dd3a63df07"],
Cell[1228195, 25001, 297, 6, 40, "Output",ExpressionUUID->"3f18fa04-d577-9841-aec1-6305dfddc51f"]
}, Open  ]],
Cell[1228507, 25010, 213, 4, 28, "Text",ExpressionUUID->"27b46dfc-3f09-5748-9bed-60f19b6d1b57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1228757, 25019, 717, 19, 56, "Section",ExpressionUUID->"9b9ab89f-e8f8-a44f-84ce-decf519a10e9"],
Cell[1229477, 25040, 8605, 217, 132, "Text",ExpressionUUID->"2cccc900-d0b5-ef42-ba4e-1a3350848e79"],
Cell[CellGroupData[{
Cell[1238107, 25261, 356, 9, 22, "Input",ExpressionUUID->"5ce738c7-7031-034f-b4b8-84d0bfe80125"],
Cell[1238466, 25272, 229, 5, 40, "Output",ExpressionUUID->"7a129ad9-b9cf-5248-9956-f909286a386c"]
}, Open  ]],
Cell[1238710, 25280, 5605, 153, 92, "Text",ExpressionUUID->"4d5f1516-9065-454b-8f7d-f84ac0002fd7"],
Cell[CellGroupData[{
Cell[1244340, 25437, 751, 21, 22, "Input",ExpressionUUID->"ca62523b-4b3b-9544-9af4-fb53ddf4eed3"],
Cell[1245094, 25460, 646, 19, 25, "Output",ExpressionUUID->"d18a126b-e6fe-3d41-a6e7-c1c1ce561a36"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1245777, 25484, 848, 23, 26, "Input",ExpressionUUID->"e1d5cf4b-520c-9349-af41-78fd001f221c"],
Cell[1246628, 25509, 530, 16, 40, "Output",ExpressionUUID->"40dc9749-a58b-d34f-8745-c35bed3776c7"]
}, Open  ]],
Cell[1247173, 25528, 741, 16, 30, "Text",ExpressionUUID->"7725f305-f80c-794a-b11b-ebe5bfc97455"],
Cell[CellGroupData[{
Cell[1247939, 25548, 781, 20, 26, "Input",ExpressionUUID->"f7c3d6b1-acd0-624c-ba1c-159227caf076"],
Cell[1248723, 25570, 764, 23, 48, "Output",ExpressionUUID->"38cf9d83-4dfd-4641-abcd-7bf7bed7848d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1249524, 25598, 1420, 38, 48, "Input",ExpressionUUID->"61e805e3-5097-a644-b3a7-fef1d8c62242"],
Cell[1250947, 25638, 941, 31, 49, "Output",ExpressionUUID->"4bc8494b-46ad-564a-92e5-a949b4679d23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1251925, 25674, 697, 19, 37, "Input",ExpressionUUID->"7909ca79-01d4-b149-ae3d-cabe223e2e7f"],
Cell[1252625, 25695, 328, 8, 40, "Output",ExpressionUUID->"3e0eebac-7ae4-0a49-8cc8-f4d59c78f1ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1252990, 25708, 697, 19, 37, "Input",ExpressionUUID->"2ccba164-8cf8-0f48-9062-b51d7128f0ca"],
Cell[1253690, 25729, 327, 8, 40, "Output",ExpressionUUID->"74aa586c-c477-b14a-b0c9-6b5854c66312"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1254054, 25742, 753, 21, 37, "Input",ExpressionUUID->"e59f54ea-24fe-4e43-90a5-c5fa42fdf1fe"],
Cell[1254810, 25765, 325, 8, 40, "Output",ExpressionUUID->"ff1b0215-119e-2546-94ae-240fb15fa59d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1255172, 25778, 751, 21, 37, "Input",ExpressionUUID->"33491792-7dcc-1a42-9de7-18fdc9b0dfd7"],
Cell[1255926, 25801, 331, 8, 40, "Output",ExpressionUUID->"55d0b065-7f39-d34d-87e9-4991789eda05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1256294, 25814, 1326, 37, 34, "Input",ExpressionUUID->"bdc2dda5-e6fb-f140-afdd-be68aa5adf71"],
Cell[1257623, 25853, 580, 17, 48, "Output",ExpressionUUID->"0305c686-ee6e-734a-b7ab-041977872529"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1258240, 25875, 1392, 39, 34, "Input",ExpressionUUID->"ccb6c2ee-fe70-6445-b312-4cd097a49b40"],
Cell[1259635, 25916, 580, 17, 42, "Output",ExpressionUUID->"0c832670-7d95-8d4f-bd87-4f596d43fca7"]
}, Open  ]],
Cell[1260230, 25936, 780, 20, 25, "Input",ExpressionUUID->"335e1bd9-0061-7745-ba32-3a8e80dd36f0"],
Cell[CellGroupData[{
Cell[1261035, 25960, 206, 4, 22, "Input",ExpressionUUID->"53f041a4-81ca-df44-b309-0599968030e7"],
Cell[1261244, 25966, 1095, 33, 48, "Output",ExpressionUUID->"f921f06a-cc65-004b-8b8b-97bc15668ff5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1262376, 26004, 247, 5, 22, "Input",ExpressionUUID->"64726f86-a384-d140-b395-ce422564f3f3"],
Cell[1262626, 26011, 1055, 30, 48, "Output",ExpressionUUID->"687ea5d9-2dbf-d641-a4ea-8e727f5ac243"]
}, Open  ]],
Cell[1263696, 26044, 614, 14, 28, "Text",ExpressionUUID->"3bb0ab56-6ecb-2948-b1e2-af5421e30cf1"],
Cell[CellGroupData[{
Cell[1264335, 26062, 378, 8, 22, "Input",ExpressionUUID->"1c717783-aa21-6c4a-831a-be5d03fb48fd"],
Cell[1264716, 26072, 1010, 30, 48, "Output",ExpressionUUID->"ba37134e-0921-1742-ab69-f702d11eae93"]
}, Open  ]],
Cell[1265741, 26105, 586, 15, 30, "Text",ExpressionUUID->"5d0cf8ca-fbbd-6d48-a77a-958bf7e7ebac"],
Cell[1266330, 26122, 1607, 45, 35, "Input",ExpressionUUID->"e6847a43-5c40-784e-ae8e-3a9007d5cc96"],
Cell[CellGroupData[{
Cell[1267962, 26171, 207, 4, 22, "Input",ExpressionUUID->"fe4d9b8c-a558-2a4c-bf15-4985eb7219be"],
Cell[1268172, 26177, 2452, 70, 74, "Output",ExpressionUUID->"4aa905c8-6210-0543-8bb9-459c963c08ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1270661, 26252, 387, 10, 22, "Input",ExpressionUUID->"1194deca-4b7c-9c4e-aeab-be3681e85c52"],
Cell[1271051, 26264, 65704, 1127, 191, "Output",ExpressionUUID->"86480831-dc3d-3249-ad61-d7a9fef62ba6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

